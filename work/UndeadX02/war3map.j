//===========================================================================
// 
// UndeadX02
// 
//   Warcraft III map script
//   Generated by the Warcraft III World Editor
//   Date: Fri May 16 18:05:56 2003
//   Map Author: Blizzard Entertainment
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************

globals
    // User-defined
    boolean                 udg_GameOver               = false
    player                  udg_AP1_Player             = null
    force                   udg_APG1_Player            = null
    unit                    udg_Arthas                 = null
    group                   udg_HiddenUnits            = null
    group                   udg_SelectedUnits          = null
    player                  udg_P7_Dreadlords          = null
    boolean                 udg_IntroSkipped           = false
    boolean                 udg_ExitSkipped            = false
    location                udg_CameraReturnPoint      = null
    location                udg_RevivalSpot            = null
    unit                    udg_RevivalHero            = null
    location                udg_RevivalReturnSpot      = null
    unit                    udg_RevivalAltar           = null
    location                udg_ArthasReturnSpot       = null
    quest                   udg_QuestExit              = null
    questitem               udg_QuestExitReq1          = null
    boolean                 udg_InCinematic            = false
    boolean                 udg_VictorySkipped         = false
    boolean                 udg_ExpDisabledForArthas   = false
    timer                   udg_CombatCheckTimer       = null
    boolean                 udg_InCombat               = false
    player                  udg_P2_Rescuables          = null
    player                  udg_P5_Sylvanas            = null
    unit                    udg_KelThuzad              = null
    unit                    udg_Detheroc               = null
    unit                    udg_Balnazzar              = null
    unit                    udg_Bloodfeast             = null
    unit                    udg_FirstBanshee           = null
    player                  udg_P8_KelThuzad           = null
    destructable            udg_StartingGate           = null
    questitem               udg_QuestExitReq2          = null
    quest                   udg_QuestRiver             = null
    questitem               udg_QuestRiverReq1         = null
    questitem               udg_QuestRiverReq2         = null
    quest                   udg_QuestMeat              = null
    questitem               udg_QuestMeatReq1          = null
    questitem               udg_QuestMeatReq2          = null
    quest                   udg_QuestGraves            = null
    questitem               udg_QuestGravesReq1        = null
    quest                   udg_QuestGold              = null
    questitem               udg_QuestGoldReq1          = null
    unit                    udg_RescueNecroA           = null
    unit                    udg_RescueNecroB           = null
    unit                    udg_RescueNecroC           = null
    unit                    udg_Speaker                = null
    destructable            udg_AbomDoorLeft           = null
    destructable            udg_AbomDoorRight          = null
    group                   udg_AbomAmbushLeftUnits    = null
    group                   udg_AbomAmbushRightUnits   = null
    unit                    udg_RescueAbom             = null
    unit                    udg_RescueShade            = null
    location                udg_RescueShadeMoveTarg    = null
    unit                    udg_RescueGhoulA           = null
    unit                    udg_RescueGhoulB           = null
    destructable            udg_FountainElevator       = null
    destructable            udg_BridgeElevatorA        = null
    destructable            udg_BridgeElevatorC        = null
    destructable            udg_FountainPlate          = null
    unit                    udg_RescueFiendA           = null
    unit                    udg_RescueFiendB           = null
    unit                    udg_PrisonGuardA           = null
    unit                    udg_PrisonGuardB           = null
    group                   udg_PrisonGuards           = null
    destructable            udg_PrisonGate             = null
    destructable            udg_BridgePlateA           = null
    destructable            udg_BridgePlateB           = null
    boolean                 udg_BridgePlateBusy        = false
    destructable            udg_BridgePlateTouched     = null
    unit                    udg_RescueShelfA           = null
    unit                    udg_RescueShelfB           = null
    destructable            udg_BridgePlateC           = null
    sound                   udg_PlateActivationSound   = null
    sound                   udg_ElevatorSound          = null
    sound                   udg_PlateResetSound        = null
    group                   udg_FiendAmbushUnits       = null
    unit                    udg_TempUnit               = null
    group                   udg_AlleyAmbushUnits       = null
    destructable            udg_FountainGate           = null
    rect                    udg_LOSRegion              = null
    fogmodifier             udg_PrisonVMA              = null
    fogmodifier             udg_PrisonVMB              = null
    boolean                 udg_PrisonVMsExist         = false
    boolean                 udg_ArmoryChurchVMExists   = false
    fogmodifier             udg_ArmoryChurchVM         = null
    group                   udg_HorsieCorpses          = null
    unit                    udg_HorsieRunner           = null
    group                   udg_HorsieEaters           = null
    unit                    udg_HorsieChaser           = null
    unit                    udg_RescueGuyA             = null
    unit                    udg_RescueGuyB             = null
    unit                    udg_HallPatrollerA         = null
    unit                    udg_HallPatrollerB         = null
    unit                    udg_HallPatrollerC         = null
    integer                 udg_HallPatrolTarget       = 0
    rect                    udg_HallPatrollerTargetA   = null
    rect                    udg_HallPatrollerTargetB   = null
    rect                    udg_HallPatrollerTargetC   = null
    timer                   udg_HallPatrolTimer        = null
    destructable            udg_GargoyleDoor           = null
    unit                    udg_ChantingNecroA         = null
    unit                    udg_ChantingNecroB         = null
    unit                    udg_ChantingNecroC         = null
    group                   udg_ChantingUnits          = null
    boolean                 udg_ChantingInterrupted    = false
    fogmodifier             udg_NookVM                 = null
    boolean                 udg_NookVMExists           = false
    boolean                 udg_HorsieSceneStarted     = false
    group                   udg_SkelAmbushers          = null
    unit                    udg_RescueCageA            = null
    unit                    udg_RescueCageB            = null
    group                   udg_CorpsePile01Units      = null
    group                   udg_CorpsePile02Units      = null
    unit                    udg_RescueWagonA           = null
    unit                    udg_RescueWagonB           = null
    group                   udg_ArmoryGuards           = null
    group                   udg_ExitEnemyUnits         = null
    unit                    udg_Marketplace            = null
    unit                    udg_ExitGhoul01            = null
    unit                    udg_ExitGhoul02            = null
    unit                    udg_ExitAbom01             = null
    unit                    udg_ExitAbom02             = null
    unit                    udg_ExitAbom03             = null
    unit                    udg_ExitAbom04             = null
    boolean                 udg_FiendAmbushStarted     = false
    boolean                 udg_AlleyAmbushStarted     = false
    boolean                 udg_SkelAmbushStarted      = false
    unit                    udg_ExitBanshee01          = null
    unit                    udg_ExitBanshee02          = null
    unit                    udg_ExitBanshee03          = null
    unit                    udg_ExitBanshee04          = null
    group                   udg_ExitBanshees           = null
    group                   udg_ExitAboms              = null
    destructable            udg_BridgeElevatorB        = null
    group                   udg_CorpsePile03Units      = null
    unit                    udg_DireLich01             = null
    unit                    udg_DireLich02             = null
    unit                    udg_IntroGhoul01           = null
    unit                    udg_IntroGhoul02           = null
    unit                    udg_IntroGhoul03           = null
    unit                    udg_IntroGhoul04           = null
    real                    udg_SpeakingDistance       = 0
    fogmodifier             udg_ArmoryRoomVM           = null
    fogmodifier             udg_ArmoryElevatorVM       = null
    boolean                 udg_ArmoryElevatorVMExists = false
    timer                   udg_WaveSpawnTimer         = null
    group                   udg_WaveUnits              = null
    timer                   udg_WaveOrdersTimer        = null
    location                udg_WaveSpawnSource        = null
    location                udg_WaveSpawnSourceA       = null
    location                udg_WaveSpawnSourceB       = null
    integer                 udg_WaveSource             = 0
    real                    udg_WaveSpawnDelay         = 0
    unit                    udg_RescueNecroD           = null
    location                udg_PolitePanTarget        = null
    integer                 udg_WaveSpawnUnitTypeA     = 0
    group                   udg_RescueNecroCorpses     = null
    boolean                 udg_BloodfeastLinesDone    = false
    group                   udg_BloodfeastUnits        = null
    fogmodifier             udg_BloodfeastVM           = null
    group                   udg_BattleRoomUnits        = null
    fogmodifier             udg_BattleRoomVM           = null
    group                   udg_BattleRoomCorpseUnits  = null
    group                   udg_CryptLeftUnits         = null
    group                   udg_CryptRightUnits        = null
    timer                   udg_CryptLeftTimer         = null
    timer                   udg_CryptRightTimer        = null
    integer                 udg_CryptLeftMax           = 0
    integer                 udg_CryptRightMax          = 0
    real                    udg_CryptLeftDelay         = 0
    real                    udg_CryptRightDelay        = 0
    unit                    udg_CryptLeft              = null
    unit                    udg_CryptRight             = null
    unit                    udg_Varimathras            = null
    unit                    udg_NecroCorpseA           = null
    unit                    udg_NecroCorpseB           = null
    location                udg_VSourcePrison          = null
    location                udg_VSourceChurchA         = null
    location                udg_VSourceChurchB         = null
    location                udg_VSourceNook            = null
    location                udg_VSourceArmoryA         = null
    location                udg_VSourceArmoryB         = null
    location                udg_VSourceArmoryC         = null
    location                udg_VSourceArmoryD         = null
    location                udg_VSourceArmoryE         = null
    location                udg_VSourceArmoryF         = null
    location                udg_VSourceArmoryG         = null
    location                udg_VSourceCorpsePile01    = null
    location                udg_VSourceCorpsePile02    = null
    location                udg_VSourceCorpsePile03    = null
    location                udg_VSourceSkelAmbushA     = null
    location                udg_VSourceSkelAmbushB     = null
    location                udg_VSourceSkelAmbushC     = null
    location                udg_VSourceHorsieA         = null
    unit                    udg_LootVictim             = null
    location                udg_VSourceFountainPlate   = null
    location                udg_VSourceBridgePlateA    = null
    location                udg_VSourceBridgePlateB    = null
    location                udg_VSourceBridgePlateC    = null
    location                udg_VSourceArmoryPlate     = null
    boolean                 udg_FountainPlateGlowing   = false
    boolean                 udg_BridgePlateGlowingA    = false
    boolean                 udg_BridgePlateGlowingB    = false
    boolean                 udg_BridgePlateGlowingC    = false
    location                udg_PointCorpsePile01      = null
    location                udg_PointCorpsePile02      = null
    location                udg_PointCorpsePile03      = null
    location                udg_TempPoint              = null
    location                udg_PointWaveSource01A     = null
    location                udg_PointWaveSource01B     = null
    location                udg_PointWaveSource02A     = null
    location                udg_PointWaveSource02B     = null
    location                udg_PointWaveSource03A     = null
    location                udg_PointWaveSource03B     = null
    location                udg_PointWaveSource04A     = null
    location                udg_PointWaveSource04B     = null
    location                udg_PointWaveSource05A     = null
    location                udg_PointWaveSource05B     = null
    location                udg_PointWaveSource06A     = null
    location                udg_PointWaveSource06B     = null
    location                udg_PointWaveSource07A     = null
    location                udg_PointWaveSource07B     = null
    location                udg_PointCryptLeftSpawn    = null
    location                udg_PointCryptRightSpawn   = null
    location                udg_PointHallPatrollerTargetA = null
    location                udg_PointHallPatrollerTargetB = null
    location                udg_PointHallPatrollerTargetC = null
    location                udg_PointHallPatrol01A     = null
    location                udg_PointHallPatrol01B     = null
    location                udg_PointHallPatrol01C     = null
    location                udg_PointHallPatrol02A     = null
    location                udg_PointHallPatrol02B     = null
    location                udg_PointHallPatrol02C     = null
    location                udg_PointHallPatrol03A     = null
    location                udg_PointHallPatrol03B     = null
    location                udg_PointHallPatrol03C     = null
    location                udg_PointHallPatrol04A     = null
    location                udg_PointHallPatrol04B     = null
    location                udg_PointHallPatrol04C     = null
    location                udg_PointHallPatrol05A     = null
    location                udg_PointHallPatrol05B     = null
    location                udg_PointHallPatrol05C     = null
    location                udg_PointHallPatrol06A     = null
    location                udg_PointHallPatrol06B     = null
    location                udg_PointHallPatrol06C     = null
    location                udg_PointVisionAChurch     = null
    group                   udg_ZombieGroupA           = null
    integer                 udg_WaveSpawnMax           = 0
    integer                 udg_WaveSpawnPackSize      = 0
    integer                 udg_TempInteger            = 0
    real                    udg_WaveSpawnDelayLate     = 0
    integer                 udg_WaveSpawnUnitTypeB     = 0
    integer                 udg_WaveSpawnNumA          = 0
    integer                 udg_WaveSpawnNumB          = 0
    location                udg_PointArthasLoc         = null
    integer                 udg_WaveSpawnUnitType      = 0
    group                   udg_IntroDreadlordGhouls   = null

    // Generated
    rect                    gg_rct_Abom_Ambush_Source_Left = null
    rect                    gg_rct_Abom_Ambush_Source_Right = null
    rect                    gg_rct_Abom_Ambush_Target_Left = null
    rect                    gg_rct_Abom_Ambush_Target_Right = null
    rect                    gg_rct_Abom_Ambush_Tripwire = null
    rect                    gg_rct_Alley_Ambush_Source = null
    rect                    gg_rct_Alley_Ambush_Tripwire = null
    rect                    gg_rct_Armory_Guards_Source = null
    rect                    gg_rct_Armory_PanTarg      = null
    rect                    gg_rct_Armory_Ping         = null
    rect                    gg_rct_Armory_Tripwire     = null
    rect                    gg_rct_Armory_VM           = null
    rect                    gg_rct_Barricade_BeforeShade = null
    rect                    gg_rct_Barricade_FiendA    = null
    rect                    gg_rct_Barricade_FiendB    = null
    rect                    gg_rct_BattleRoom_PanTarg  = null
    rect                    gg_rct_BattleRoom_Units    = null
    rect                    gg_rct_BattleRoom_VM       = null
    rect                    gg_rct_Bloodfeast_Source   = null
    rect                    gg_rct_Bloodfeast_Tripwire = null
    rect                    gg_rct_Bloodfeast_Units_Source = null
    rect                    gg_rct_Bridge_PlateA       = null
    rect                    gg_rct_Bridge_PlateB       = null
    rect                    gg_rct_Bridge_PlateC       = null
    rect                    gg_rct_Chanting_MoveTargA  = null
    rect                    gg_rct_Chanting_MoveTargB  = null
    rect                    gg_rct_Chanting_MoveTargC  = null
    rect                    gg_rct_Chanting_Necro_SourceA = null
    rect                    gg_rct_Chanting_Necro_SourceB = null
    rect                    gg_rct_Chanting_Necro_SourceC = null
    rect                    gg_rct_Chanting_Necros_Source = null
    rect                    gg_rct_Chanting_Skulls     = null
    rect                    gg_rct_Corpse_Pile_01      = null
    rect                    gg_rct_Corpse_Pile_02      = null
    rect                    gg_rct_Corpse_Pile_03      = null
    rect                    gg_rct_CryptLeft_Sitting_Area = null
    rect                    gg_rct_CryptLeft_Spawn_Point = null
    rect                    gg_rct_CryptLeftUnits_Source = null
    rect                    gg_rct_CryptRight_Sitting_Area = null
    rect                    gg_rct_CryptRight_Spawn_Point = null
    rect                    gg_rct_CryptRightUnits_Source = null
    rect                    gg_rct_Entrance_Hallway_CorpseA = null
    rect                    gg_rct_Entrance_Hallway_CorpseA_Dest = null
    rect                    gg_rct_Entrance_Hallway_CorpseB = null
    rect                    gg_rct_Entrance_Hallway_CorpseB_Dest = null
    rect                    gg_rct_Exit_Abom01_MoveTarg = null
    rect                    gg_rct_Exit_Abom01_MoveTargB = null
    rect                    gg_rct_Exit_Abom01_Source  = null
    rect                    gg_rct_Exit_Abom02_MoveTarg = null
    rect                    gg_rct_Exit_Abom02_Source  = null
    rect                    gg_rct_Exit_Abom03_MoveTarg = null
    rect                    gg_rct_Exit_Abom03_Source  = null
    rect                    gg_rct_Exit_Abom04_MoveTarg = null
    rect                    gg_rct_Exit_Abom04_MoveTargB = null
    rect                    gg_rct_Exit_Abom04_Source  = null
    rect                    gg_rct_Exit_Aboms_Source   = null
    rect                    gg_rct_Exit_Arthas_Look_Here = null
    rect                    gg_rct_Exit_Arthas_Start   = null
    rect                    gg_rct_Exit_Banshee01_MoveTarg = null
    rect                    gg_rct_Exit_Banshee01_MoveTargB = null
    rect                    gg_rct_Exit_Banshee01_Source = null
    rect                    gg_rct_Exit_Banshee02_Source = null
    rect                    gg_rct_Exit_Banshee03_Source = null
    rect                    gg_rct_Exit_Banshee04_MoveTarg = null
    rect                    gg_rct_Exit_Banshee04_MoveTargB = null
    rect                    gg_rct_Exit_Banshee04_Source = null
    rect                    gg_rct_Exit_CombatArea     = null
    rect                    gg_rct_Exit_VM             = null
    rect                    gg_rct_Fiend_Ambush_Fiend_Source = null
    rect                    gg_rct_Fiend_Ambush_TripwireA = null
    rect                    gg_rct_Fiend_Ambush_TripwireB = null
    rect                    gg_rct_Fiend_Ambush_TripwireC = null
    rect                    gg_rct_Fountain_Elevator_Ping = null
    rect                    gg_rct_Fountain_Elevator_VM = null
    rect                    gg_rct_Fountain_Room_Plate = null
    rect                    gg_rct_Gameplay_Arthas_Start = null
    rect                    gg_rct_Hall_Patrol_01A     = null
    rect                    gg_rct_Hall_Patrol_01B     = null
    rect                    gg_rct_Hall_Patrol_01C     = null
    rect                    gg_rct_Hall_Patrol_02A     = null
    rect                    gg_rct_Hall_Patrol_02B     = null
    rect                    gg_rct_Hall_Patrol_02C     = null
    rect                    gg_rct_Hall_Patrol_03A     = null
    rect                    gg_rct_Hall_Patrol_03B     = null
    rect                    gg_rct_Hall_Patrol_03C     = null
    rect                    gg_rct_Hall_Patrol_04A     = null
    rect                    gg_rct_Hall_Patrol_04B     = null
    rect                    gg_rct_Hall_Patrol_04C     = null
    rect                    gg_rct_Hall_Patrol_05A     = null
    rect                    gg_rct_Hall_Patrol_05B     = null
    rect                    gg_rct_Hall_Patrol_05C     = null
    rect                    gg_rct_Hall_Patrol_06A     = null
    rect                    gg_rct_Hall_Patrol_06B     = null
    rect                    gg_rct_Hall_Patrol_06C     = null
    rect                    gg_rct_Hall_Patrol_SourceA = null
    rect                    gg_rct_Hall_Patrol_SourceB = null
    rect                    gg_rct_Hall_Patrol_SourceC = null
    rect                    gg_rct_HardDifficultyCrate01 = null
    rect                    gg_rct_HardDifficultyCrate02 = null
    rect                    gg_rct_HardDifficultyCrate03 = null
    rect                    gg_rct_HardDifficultyCrate04 = null
    rect                    gg_rct_HardDifficultyUnit01 = null
    rect                    gg_rct_HardDifficultyUnit02 = null
    rect                    gg_rct_HardDifficultyUnit03 = null
    rect                    gg_rct_HardDifficultyUnit04 = null
    rect                    gg_rct_HardDifficultyUnit05 = null
    rect                    gg_rct_HardDifficultyUnit06 = null
    rect                    gg_rct_HardDifficultyUnit07 = null
    rect                    gg_rct_HardDifficultyUnit08 = null
    rect                    gg_rct_HardDifficultyUnit09 = null
    rect                    gg_rct_HardDifficultyUnit10 = null
    rect                    gg_rct_HardDifficultyUnit11 = null
    rect                    gg_rct_HardDifficultyUnit12 = null
    rect                    gg_rct_HardDifficultyUnit13 = null
    rect                    gg_rct_HardDifficultyUnit14 = null
    rect                    gg_rct_HardDifficultyUnit15 = null
    rect                    gg_rct_HardDifficultyUnit16 = null
    rect                    gg_rct_HardDifficultyUnit17 = null
    rect                    gg_rct_HardDifficultyUnit18 = null
    rect                    gg_rct_HardDifficultyUnit19 = null
    rect                    gg_rct_HardDifficultyUnit20 = null
    rect                    gg_rct_HardDifficultyUnit21 = null
    rect                    gg_rct_HardDifficultyUnit22 = null
    rect                    gg_rct_HardDifficultyUnit23 = null
    rect                    gg_rct_HardDifficultyUnit24 = null
    rect                    gg_rct_HardDifficultyUnit25 = null
    rect                    gg_rct_Horsie_Attackers_MoveTarg = null
    rect                    gg_rct_Horsie_Chaser_Source = null
    rect                    gg_rct_Horsie_Corpses_Source = null
    rect                    gg_rct_Horsie_Eaters_Source = null
    rect                    gg_rct_Horsie_Runner_MoveTarg = null
    rect                    gg_rct_Horsie_Runner_Source = null
    rect                    gg_rct_Horsie_Scene_Tripwire = null
    rect                    gg_rct_Horsie_Scene_Tripwire_Copy = null
    rect                    gg_rct_Horsie_Scene_VTripwire = null
    rect                    gg_rct_Intro_Arthas_Fights = null
    rect                    gg_rct_Intro_Arthas_Go_Here = null
    rect                    gg_rct_Intro_Arthas_Look_Here = null
    rect                    gg_rct_Intro_Arthas_Through_Gate = null
    rect                    gg_rct_Intro_Dreadlord_Ghouls = null
    rect                    gg_rct_Intro_Ghoul_Source01 = null
    rect                    gg_rct_Intro_Ghoul_Source02 = null
    rect                    gg_rct_Intro_Ghoul_Source03 = null
    rect                    gg_rct_Intro_Ghoul_Source04 = null
    rect                    gg_rct_Intro_Kel_at_Gate   = null
    rect                    gg_rct_Intro_Kel_Go_Here   = null
    rect                    gg_rct_Intro_Necro_Final01 = null
    rect                    gg_rct_Intro_Necro_FInal02 = null
    rect                    gg_rct_Intro_Necro_Go_Here01 = null
    rect                    gg_rct_Intro_Necro_Go_Here02 = null
    rect                    gg_rct_KelThuzad_Loot_01   = null
    rect                    gg_rct_KelThuzad_Loot_02   = null
    rect                    gg_rct_KelThuzad_Loot_03   = null
    rect                    gg_rct_KelThuzad_Loot_04   = null
    rect                    gg_rct_KelThuzad_Loot_05   = null
    rect                    gg_rct_KelThuzad_Loot_06   = null
    rect                    gg_rct_KelThuzad_Loot_Spawn = null
    rect                    gg_rct_LOSBlockers_AbomRoom_Left = null
    rect                    gg_rct_LOSBlockers_AbomRoom_Right = null
    rect                    gg_rct_LOSBlockers_CourtyardDoor = null
    rect                    gg_rct_LOSBlockers_ExitDoor = null
    rect                    gg_rct_LOSBlockers_FountainRoom = null
    rect                    gg_rct_LOSBlockers_GargoyleDoor = null
    rect                    gg_rct_LOSBlockers_SpiderRoom = null
    rect                    gg_rct_LOSBlockers_StartingDoor = null
    rect                    gg_rct_LOSBlockers_ThroneRoom = null
    rect                    gg_rct_LOSBlockers_WallSecret = null
    rect                    gg_rct_Prison_Guard_SourceA = null
    rect                    gg_rct_Prison_Guard_SourceB = null
    rect                    gg_rct_Prison_Guards       = null
    rect                    gg_rct_Prison_Guards_AttackTargA = null
    rect                    gg_rct_Prison_Guards_AttackTargB = null
    rect                    gg_rct_Rescue_Abom_MoveTarg = null
    rect                    gg_rct_Rescue_Abom_PanTarg = null
    rect                    gg_rct_Rescue_Abom_Source  = null
    rect                    gg_rct_Rescue_Abom_TripwireA = null
    rect                    gg_rct_Rescue_Abom_TripwireB = null
    rect                    gg_rct_Rescue_CageA_MoveTarg = null
    rect                    gg_rct_Rescue_CageA_Source = null
    rect                    gg_rct_Rescue_CageB_MoveTarg = null
    rect                    gg_rct_Rescue_CageB_Source = null
    rect                    gg_rct_Rescue_Fiends_MoveTargA = null
    rect                    gg_rct_Rescue_Fiends_MoveTargB = null
    rect                    gg_rct_Rescue_Fiends_PanTarg = null
    rect                    gg_rct_Rescue_Fiends_SourceA = null
    rect                    gg_rct_Rescue_Fiends_SourceB = null
    rect                    gg_rct_Rescue_Ghouls_MoveTargA = null
    rect                    gg_rct_Rescue_Ghouls_MoveTargB = null
    rect                    gg_rct_Rescue_Ghouls_PanTarg = null
    rect                    gg_rct_Rescue_Ghouls_SourceA = null
    rect                    gg_rct_Rescue_Ghouls_SourceB = null
    rect                    gg_rct_Rescue_Ghouls_Tripwire = null
    rect                    gg_rct_Rescue_Guys_MoveTargA = null
    rect                    gg_rct_Rescue_Guys_MoveTargB = null
    rect                    gg_rct_Rescue_Guys_PanTarg = null
    rect                    gg_rct_Rescue_Guys_SourceA = null
    rect                    gg_rct_Rescue_Guys_SourceB = null
    rect                    gg_rct_Rescue_Guys_Tripwire = null
    rect                    gg_rct_Rescue_Necro_MoveTargA = null
    rect                    gg_rct_Rescue_Necro_MoveTargB = null
    rect                    gg_rct_Rescue_Necro_MoveTargC = null
    rect                    gg_rct_Rescue_Necro_MoveTargD = null
    rect                    gg_rct_Rescue_Necro_PanTarg = null
    rect                    gg_rct_Rescue_Necro_SourceA = null
    rect                    gg_rct_Rescue_Necro_SourceB = null
    rect                    gg_rct_Rescue_Necro_SourceC = null
    rect                    gg_rct_Rescue_Necro_SourceD = null
    rect                    gg_rct_Rescue_Necro_Tripwire = null
    rect                    gg_rct_Rescue_Shade_PanTarg = null
    rect                    gg_rct_Rescue_Shade_Source = null
    rect                    gg_rct_Rescue_Shade_Tripwire = null
    rect                    gg_rct_Rescue_Shelf_MoveTargA = null
    rect                    gg_rct_Rescue_Shelf_MoveTargB = null
    rect                    gg_rct_Rescue_Shelf_PanTarg = null
    rect                    gg_rct_Rescue_Shelf_SourceA = null
    rect                    gg_rct_Rescue_Shelf_SourceB = null
    rect                    gg_rct_Rescue_Shelf_Tripwire = null
    rect                    gg_rct_Rescue_Wagon_PanTarg = null
    rect                    gg_rct_Rescue_WagonA_MoveTarg = null
    rect                    gg_rct_Rescue_WagonA_Source = null
    rect                    gg_rct_Rescue_WagonB_MoveTarg = null
    rect                    gg_rct_Rescue_WagonB_Source = null
    rect                    gg_rct_Skel_Ambush_MoveTarg = null
    rect                    gg_rct_Skel_Ambush_SampleA = null
    rect                    gg_rct_Skel_Ambush_SampleB = null
    rect                    gg_rct_Skel_Ambush_SampleC = null
    rect                    gg_rct_Skel_Ambush_Units_Source = null
    rect                    gg_rct_Victory_Tripwire    = null
    rect                    gg_rct_Vision_AChurch      = null
    rect                    gg_rct_Vision_AChurch_SourceA = null
    rect                    gg_rct_Vision_AChurch_SourceB = null
    rect                    gg_rct_Vision_Bloodfeast_VM = null
    rect                    gg_rct_Vision_Bridge_Tripwire = null
    rect                    gg_rct_Vision_Bridge_VM    = null
    rect                    gg_rct_Vision_Nook_Source  = null
    rect                    gg_rct_Vision_Nook_VM      = null
    rect                    gg_rct_Vision_Prison_Source = null
    rect                    gg_rct_Vision_PrisonA_VM   = null
    rect                    gg_rct_Vision_PrisonB_VM   = null
    rect                    gg_rct_Vision_WallSecret_Source = null
    rect                    gg_rct_VSource_Bridge_Plate_A = null
    rect                    gg_rct_VSource_Bridge_Plate_B = null
    rect                    gg_rct_VSource_Bridge_Plate_C = null
    rect                    gg_rct_VSource_Fountain_Plate = null
    rect                    gg_rct_Wave_Source_01A     = null
    rect                    gg_rct_Wave_Source_01B     = null
    rect                    gg_rct_Wave_Source_02A     = null
    rect                    gg_rct_Wave_Source_02B     = null
    rect                    gg_rct_Wave_Source_03A     = null
    rect                    gg_rct_Wave_Source_03B     = null
    rect                    gg_rct_Wave_Source_04A     = null
    rect                    gg_rct_Wave_Source_04B     = null
    rect                    gg_rct_Wave_Source_05A     = null
    rect                    gg_rct_Wave_Source_05B     = null
    rect                    gg_rct_Wave_Source_06A     = null
    rect                    gg_rct_Wave_Source_06B     = null
    rect                    gg_rct_Wave_Source_07A     = null
    rect                    gg_rct_Wave_Source_07B     = null
    rect                    gg_rct_Wave_Source_A       = null
    rect                    gg_rct_Wave_Source_B       = null
    rect                    gg_rct_Wave_Source_Tripwire_01A = null
    rect                    gg_rct_Wave_Source_Tripwire_01B = null
    rect                    gg_rct_Wave_Source_Tripwire_02A = null
    rect                    gg_rct_Wave_Source_Tripwire_02B = null
    rect                    gg_rct_Wave_Source_Tripwire_02C = null
    rect                    gg_rct_Wave_Source_Tripwire_03A = null
    rect                    gg_rct_Wave_Source_Tripwire_03B = null
    rect                    gg_rct_Wave_Source_Tripwire_04A = null
    rect                    gg_rct_Wave_Source_Tripwire_04B = null
    rect                    gg_rct_Wave_Source_Tripwire_04C = null
    rect                    gg_rct_Wave_Source_Tripwire_05A = null
    rect                    gg_rct_Wave_Source_Tripwire_05B = null
    rect                    gg_rct_Wave_Source_Tripwire_06A = null
    rect                    gg_rct_Wave_Source_Tripwire_06B = null
    rect                    gg_rct_Wave_Source_Tripwire_06C = null
    rect                    gg_rct_Wave_Source_Tripwire_07A = null
    rect                    gg_rct_Wave_Source_Tripwire_07B = null
    rect                    gg_rct_Wave_Start_TripwireA = null
    rect                    gg_rct_Wave_Start_TripwireB = null
    rect                    gg_rct_Wave_Start_TripwireC = null
    rect                    gg_rct_Wave_Start_TripwireD = null
    rect                    gg_rct_Wave_Type_Tripwire_01A = null
    rect                    gg_rct_Wave_Type_Tripwire_01B = null
    rect                    gg_rct_Wave_Type_Tripwire_01C = null
    rect                    gg_rct_Wave_Type_Tripwire_02A = null
    rect                    gg_rct_Wave_Type_Tripwire_03A = null
    rect                    gg_rct_Wave_Type_Tripwire_04A = null
    rect                    gg_rct_Wave_Type_Tripwire_04B = null
    rect                    gg_rct_Zombie_Group_A      = null
    camerasetup             gg_cam_Camera_009          = null
    camerasetup             gg_cam_Camera_010          = null
    camerasetup             gg_cam_Camera_011          = null
    camerasetup             gg_cam_Camera_012          = null
    camerasetup             gg_cam_Camera_013          = null
    camerasetup             gg_cam_Camera_014          = null
    camerasetup             gg_cam_Camera_015          = null
    camerasetup             gg_cam_Camera_016          = null
    camerasetup             gg_cam_Camera_017          = null
    camerasetup             gg_cam_Camera_018          = null
    camerasetup             gg_cam_Camera_019          = null
    camerasetup             gg_cam_Exit_B01            = null
    camerasetup             gg_cam_Fountain_Elevator_Shot = null
    camerasetup             gg_cam_Intro_01            = null
    camerasetup             gg_cam_OLD_Intro_01        = null
    camerasetup             gg_cam_OLD_Intro_02        = null
    camerasetup             gg_cam_OLD_Intro_03        = null
    camerasetup             gg_cam_OLD_Intro_Skipped   = null
    camerasetup             gg_cam_Intro_Hall01        = null
    camerasetup             gg_cam_Intro_Hall02        = null
    camerasetup             gg_cam_Intro_Hall03        = null
    camerasetup             gg_cam_Intro_Hall04        = null
    camerasetup             gg_cam_Victory_01          = null
    camerasetup             gg_cam_Intro_Arthas_Gate   = null
    camerasetup             gg_cam_Intro_Dread_Brothers = null
    camerasetup             gg_cam_Intro_Dread_Brothers02 = null
    camerasetup             gg_cam_Intro_Dread_Brothers03 = null
    camerasetup             gg_cam_Intro_Gate_Slam     = null
    camerasetup             gg_cam_Intro_Arthas_GAte02 = null
    camerasetup             gg_cam_Exit02              = null
    camerasetup             gg_cam_Exit03              = null
    sound                   gg_snd_AbominationWhat3    = null
    sound                   gg_snd_AbominationWhat4    = null
    sound                   gg_snd_AbominationYes2     = null
    sound                   gg_snd_AbominationYes5     = null
    sound                   gg_snd_AncientProtectorMissileLaunch2 = null
    sound                   gg_snd_AncientProtectorMissileLaunch3 = null
    sound                   gg_snd_BattlenetBirth1     = null
    sound                   gg_snd_BattleNetDoorsStereo2 = null
    sound                   gg_snd_ChimaeraAlternateMissileHit1 = null
    sound                   gg_snd_FootmanDeath        = null
    sound                   gg_snd_GateEpicDeath       = null
    sound                   gg_snd_InGameChatWhat1     = null
    sound                   gg_snd_KnightNoRiderWhat2  = null
    sound                   gg_snd_KnightNoRiderWhat3  = null
    sound                   gg_snd_L02Abomination25    = null
    sound                   gg_snd_L02Arthas02         = null
    sound                   gg_snd_L02Arthas08         = null
    sound                   gg_snd_L02Arthas12         = null
    sound                   gg_snd_L02Arthas14         = null
    sound                   gg_snd_L02Arthas15         = null
    sound                   gg_snd_L02Arthas16         = null
    sound                   gg_snd_L02Arthas18         = null
    sound                   gg_snd_L02Arthas19         = null
    sound                   gg_snd_L02Arthas23         = null
    sound                   gg_snd_L02Arthas24         = null
    sound                   gg_snd_L02Arthas26         = null
    sound                   gg_snd_L02Arthas37         = null
    sound                   gg_snd_L02Arthas39         = null
    sound                   gg_snd_L02Balnazzar06      = null
    sound                   gg_snd_L02Banshee27        = null
    sound                   gg_snd_L02CryptFiend38     = null
    sound                   gg_snd_L02CryptFiend40     = null
    sound                   gg_snd_L02Detheroc04       = null
    sound                   gg_snd_L02KelThuzad01      = null
    sound                   gg_snd_L02KelThuzad03      = null
    sound                   gg_snd_L02KelThuzad05      = null
    sound                   gg_snd_L02KelThuzad07      = null
    sound                   gg_snd_L02Necromancer11    = null
    sound                   gg_snd_L02Shade20          = null
    sound                   gg_snd_LargeCityGateOpen1  = null
    sound                   gg_snd_NecromancerYesAttack1 = null
    sound                   gg_snd_NecromancerYesAttack2 = null
    sound                   gg_snd_NecromancerYesAttack3 = null
    sound                   gg_snd_ShadeReady1         = null
    sound                   gg_snd_HorseLoop1          = null
    sound                   gg_snd_HorseLoop2          = null
    sound                   gg_snd_HorseLoop3          = null
    sound                   gg_snd_Switch              = null
    sound                   gg_snd_Elevator            = null
    sound                   gg_snd_Switch01            = null
    sound                   gg_snd_Elevator01          = null
    trigger                 gg_trg_Initialization      = null
    trigger                 gg_trg_Init_01_Players     = null
    trigger                 gg_trg_Init_02_RegionsToPoints = null
    trigger                 gg_trg_Init_03a_Player_Units = null
    trigger                 gg_trg_Init_03b_Enemy_Units = null
    trigger                 gg_trg_Init_03c_Scene_Units = null
    trigger                 gg_trg_Init_03d_Cinematic_Units = null
    trigger                 gg_trg_Init_04_Music       = null
    trigger                 gg_trg_Init_05_Sounds      = null
    trigger                 gg_trg_Init_06a_Environment = null
    trigger                 gg_trg_Init_06b_Elevators  = null
    trigger                 gg_trg_Init_06c_Vision     = null
    trigger                 gg_trg_Init_07_Quests      = null
    trigger                 gg_trg_Init_08a_Hard       = null
    trigger                 gg_trg_Init_08b_Normal     = null
    trigger                 gg_trg_Init_08c_Easy       = null
    trigger                 gg_trg_Load_Heroes         = null
    trigger                 gg_trg_Load_Arthas         = null
    trigger                 gg_trg_Loot_KelThuzad      = null
    trigger                 gg_trg_DEBUG_end           = null
    trigger                 gg_trg_DEBUG_fountain      = null
    trigger                 gg_trg_Cinematic_Revival   = null
    trigger                 gg_trg_Post_Cinematic_Pause = null
    trigger                 gg_trg_Intro_Cinematic_Q   = null
    trigger                 gg_trg_Intro_Skipped       = null
    trigger                 gg_trg_Intro_Setup         = null
    trigger                 gg_trg_Intro_Cleanup       = null
    trigger                 gg_trg_Gameplay            = null
    trigger                 gg_trg_Victory_Cinematic_Q = null
    trigger                 gg_trg_Victory_Skipped     = null
    trigger                 gg_trg_Victory_Setup       = null
    trigger                 gg_trg_Exit_Banshee_Strike = null
    trigger                 gg_trg_Fountain_MiniCinematic_Q = null
    trigger                 gg_trg_Fountain_Setup      = null
    trigger                 gg_trg_Fountain_Cleanup    = null
    trigger                 gg_trg_Next_Level_Prep     = null
    trigger                 gg_trg_Next_Level_Run      = null
    trigger                 gg_trg_Victory_Cheat       = null
    trigger                 gg_trg_Defeat_Cheat        = null
    trigger                 gg_trg_Quest_Exit_Create   = null
    trigger                 gg_trg_Quest_Exit_Discover = null
    trigger                 gg_trg_Quest_Exit_Completed = null
    trigger                 gg_trg_Quest_Meat_Create   = null
    trigger                 gg_trg_Quest_Meat_Discover = null
    trigger                 gg_trg_Quest_Meat_UpdateA  = null
    trigger                 gg_trg_Quest_Meat_UpdateB  = null
    trigger                 gg_trg_Quest_Meat_Completed = null
    trigger                 gg_trg_Mission_Failed_Arthas_Dead = null
    trigger                 gg_trg_Quest_Exit_Discover_Q = null
    trigger                 gg_trg_Quest_Exit_Completed_Q = null
    trigger                 gg_trg_Hint_Keep_Clean_Q   = null
    trigger                 gg_trg_Secret_Found_Q      = null
    trigger                 gg_trg_Victory_Exit_Reached = null
    trigger                 gg_trg_Defeat_Arthas_Dead  = null
    trigger                 gg_trg_Armory_Found        = null
    trigger                 gg_trg_Armory_Found_Q      = null
    trigger                 gg_trg_Armory_Guards_Dead  = null
    trigger                 gg_trg_Armory_Guards_Dead_Q = null
    trigger                 gg_trg_Meat_Quest_Msg_A    = null
    trigger                 gg_trg_Meat_Quest_Msg_B    = null
    trigger                 gg_trg_Combat_Detected     = null
    trigger                 gg_trg_Combat_Resolved     = null
    trigger                 gg_trg_Marketplace_Config  = null
    trigger                 gg_trg_Marketplace_Item_Sold = null
    trigger                 gg_trg_Fountain_Plate      = null
    trigger                 gg_trg_Bridge_Plate_C      = null
    trigger                 gg_trg_Bridge_Plate_TripwireA = null
    trigger                 gg_trg_Bridge_Plate_TripwireB = null
    trigger                 gg_trg_Bridge_Plate        = null
    trigger                 gg_trg_Bridge_Elevator_Rising = null
    trigger                 gg_trg_Bridge_Elevator_Falling = null
    trigger                 gg_trg_Group_Cleanup_Death = null
    trigger                 gg_trg_Group_Cleanup_OwnerChange = null
    trigger                 gg_trg_Uproot_Picked_Fiend = null
    trigger                 gg_trg_Restock_Corpse_Piles = null
    trigger                 gg_trg_Corpse_Pile_Found   = null
    trigger                 gg_trg_Corpse_Pile_Lines_Q = null
    trigger                 gg_trg_LOS_Block           = null
    trigger                 gg_trg_LOS_Clear           = null
    trigger                 gg_trg_LOS_Clear_StartingDoor = null
    trigger                 gg_trg_LOS_Clear_ThroneRoom = null
    trigger                 gg_trg_LOS_Clear_AbomDoor_Left = null
    trigger                 gg_trg_LOS_Clear_AbomDoor_Right = null
    trigger                 gg_trg_LOS_Clear_FountainRoom = null
    trigger                 gg_trg_LOS_Clear_SpiderRoom = null
    trigger                 gg_trg_LOS_Clear_GargRoom  = null
    trigger                 gg_trg_LOS_Clear_CourtyardDoor = null
    trigger                 gg_trg_LOS_Clear_ExitDoor  = null
    trigger                 gg_trg_LOS_Clear_WallSecret = null
    trigger                 gg_trg_Bridge_Revealer     = null
    trigger                 gg_trg_Prison_Revealer_On  = null
    trigger                 gg_trg_Prison_Revealer_Off = null
    trigger                 gg_trg_ArmoryChurch_Revealer_On = null
    trigger                 gg_trg_ArmoryChurch_Revealer_Off = null
    trigger                 gg_trg_Nook_Revealer_On    = null
    trigger                 gg_trg_Nook_Revealer_Off   = null
    trigger                 gg_trg_FountainPlate_Glow_On = null
    trigger                 gg_trg_FountainPlate_Glow_Off = null
    trigger                 gg_trg_BridgePlateA_Glow_On = null
    trigger                 gg_trg_BridgePlateA_Glow_Off = null
    trigger                 gg_trg_BridgePlateB_Glow_On = null
    trigger                 gg_trg_BridgePlateB_Glow_Off = null
    trigger                 gg_trg_BridgePlateC_Glow_On = null
    trigger                 gg_trg_BridgePlateC_Glow_Off = null
    trigger                 gg_trg_Barricade_FiendA    = null
    trigger                 gg_trg_Barricade_FiendB    = null
    trigger                 gg_trg_Barricade_BelowShade = null
    trigger                 gg_trg_Polite_Pan          = null
    trigger                 gg_trg_Rescue_Necro_Corpses = null
    trigger                 gg_trg_Rescue_Necro        = null
    trigger                 gg_trg_Rescue_Necro_Q      = null
    trigger                 gg_trg_Rescue_Abom         = null
    trigger                 gg_trg_Rescue_Shade        = null
    trigger                 gg_trg_Rescue_Shade_Q      = null
    trigger                 gg_trg_Rescue_Fiends       = null
    trigger                 gg_trg_Rescue_Fiends_Q     = null
    trigger                 gg_trg_Rescue_Ghouls       = null
    trigger                 gg_trg_Rescue_Ghouls_Q     = null
    trigger                 gg_trg_Rescue_Shelf        = null
    trigger                 gg_trg_Rescue_Shelf_Q      = null
    trigger                 gg_trg_Rescue_Wagons       = null
    trigger                 gg_trg_Rescue_Wagons_Q     = null
    trigger                 gg_trg_Rescue_Guys         = null
    trigger                 gg_trg_Rescue_Guys_Q       = null
    trigger                 gg_trg_Rescue_CageA        = null
    trigger                 gg_trg_Rescue_CageB        = null
    trigger                 gg_trg_Hall_Patrol_Start   = null
    trigger                 gg_trg_Hall_Patrol_Orders  = null
    trigger                 gg_trg_Hall_Patrol_Attacked = null
    trigger                 gg_trg_Hall_Patrol_Attacking = null
    trigger                 gg_trg_Hall_Patrol_01      = null
    trigger                 gg_trg_Hall_Patrol_02      = null
    trigger                 gg_trg_Hall_Patrol_03      = null
    trigger                 gg_trg_Hall_Patrol_04      = null
    trigger                 gg_trg_Hall_Patrol_05      = null
    trigger                 gg_trg_Hall_Patrol_06      = null
    trigger                 gg_trg_Wave_Source_01_Tripwire = null
    trigger                 gg_trg_Wave_Source_02_Tripwire = null
    trigger                 gg_trg_Wave_Source_03_Tripwire = null
    trigger                 gg_trg_Wave_Source_04_Tripwire = null
    trigger                 gg_trg_Wave_Source_05_Tripwire = null
    trigger                 gg_trg_Wave_Source_06_Tripwire = null
    trigger                 gg_trg_Wave_Source_07_Tripwire = null
    trigger                 gg_trg_Wave_Types_Starting = null
    trigger                 gg_trg_Wave_Types_Upgrade01_Tripwire = null
    trigger                 gg_trg_Wave_Types_Upgrade02_Tripwire = null
    trigger                 gg_trg_Wave_Types_Upgrade03_Tripwire = null
    trigger                 gg_trg_Wave_Types_Upgrade04_Tripwire = null
    trigger                 gg_trg_Wave_Start          = null
    trigger                 gg_trg_Wave_Spawn          = null
    trigger                 gg_trg_Wave_Spawn_Single   = null
    trigger                 gg_trg_Wave_Orders         = null
    trigger                 gg_trg_Abom_Ambush         = null
    trigger                 gg_trg_Alley_Ambush        = null
    trigger                 gg_trg_Prison_Guards_Pestering = null
    trigger                 gg_trg_Prison_Gate_Regen   = null
    trigger                 gg_trg_Prison_Guards_Attacked = null
    trigger                 gg_trg_Zombie_Group_Attacked = null
    trigger                 gg_trg_Fiend_Ambush        = null
    trigger                 gg_trg_Skel_Ambush         = null
    trigger                 gg_trg_Horsie_Scene_Setup  = null
    trigger                 gg_trg_Horsie_Scene_Tripwire = null
    trigger                 gg_trg_Horsie_Scene_VTripwire = null
    trigger                 gg_trg_Horsie_Scene        = null
    trigger                 gg_trg_Chanting_Corpse     = null
    trigger                 gg_trg_Chanting_Cycle      = null
    trigger                 gg_trg_Chanting_Necro_Attacked = null
    trigger                 gg_trg_Chanting_Necro_Attacks = null
    trigger                 gg_trg_Chanting_Necros_Interrupted = null
    trigger                 gg_trg_Battle_Room_Corpses = null
    trigger                 gg_trg_Battle_Room_Door_Opened = null
    trigger                 gg_trg_CryptLeft_Start     = null
    trigger                 gg_trg_CryptLeft_Spawn     = null
    trigger                 gg_trg_CryptRight_Start    = null
    trigger                 gg_trg_CryptRight_Spawn    = null
    trigger                 gg_trg_Bloodfeast_Found    = null
    trigger                 gg_trg_Bloodfeast_Attacked = null
    trigger                 gg_trg_Bloodfeast_Scene    = null
    trigger                 gg_trg_Bloodfeast_Lines_Q  = null
    unit                    gg_unit_unec_0173          = null
    unit                    gg_unit_Udth_0137          = null
    unit                    gg_unit_unec_0149          = null
    unit                    gg_unit_Udre_0135          = null
    unit                    gg_unit_ugho_0248          = null
    unit                    gg_unit_ugho_0246          = null
    unit                    gg_unit_ncp3_0047          = null
    unit                    gg_unit_ugho_0247          = null
    unit                    gg_unit_uktn_0011          = null
    unit                    gg_unit_uktn_0010          = null
    unit                    gg_unit_u001_0071          = null
    unit                    gg_unit_Uktl_0009          = null
    unit                    gg_unit_Udre_0184          = null
    unit                    gg_unit_unec_0240          = null
    unit                    gg_unit_usep_0206          = null
    unit                    gg_unit_usep_0207          = null
    unit                    gg_unit_Udre_0226          = null
    unit                    gg_unit_Uvar_0062          = null
    unit                    gg_unit_Uear_0214          = null
    unit                    gg_unit_Ubal_0161          = null
    unit                    gg_unit_ugho_0252          = null
    unit                    gg_unit_ugho_0250          = null
    unit                    gg_unit_ugho_0241          = null
    unit                    gg_unit_ugho_0242          = null
    unit                    gg_unit_ugho_0249          = null
    unit                    gg_unit_ugho_0251          = null
    unit                    gg_unit_ugho_0245          = null
    destructable            gg_dest_LTe1_0000          = null
    destructable            gg_dest_DTg5_2767          = null
    destructable            gg_dest_DTg5_0114          = null
    destructable            gg_dest_DTg5_2766          = null
    destructable            gg_dest_DTg1_0394          = null
    destructable            gg_dest_DTfx_0751          = null
    destructable            gg_dest_DTfx_0750          = null
    destructable            gg_dest_DTg3_1073          = null
    destructable            gg_dest_LTe1_2572          = null
    destructable            gg_dest_L000_1875          = null
    destructable            gg_dest_DTrx_0274          = null
    destructable            gg_dest_DTrx_0171          = null
    destructable            gg_dest_DTrx_2599          = null
    destructable            gg_dest_DTrx_0874          = null
    destructable            gg_dest_DTfx_0411          = null
    destructable            gg_dest_DTfx_1998          = null
    destructable            gg_dest_DTg5_2636          = null
    trigger                 gg_trg_Keep_Cinematic_Arthas_Alive = null
endglobals

function InitGlobals takes nothing returns nothing
    set udg_GameOver = false
    set udg_AP1_Player = Player(0)
    set udg_APG1_Player = bj_FORCE_PLAYER[0]
    set udg_Arthas = null
    set udg_HiddenUnits = CreateGroup()
    set udg_SelectedUnits = CreateGroup()
    set udg_P7_Dreadlords = Player(6)
    set udg_IntroSkipped = false
    set udg_ExitSkipped = false
    set udg_RevivalHero = null
    set udg_RevivalAltar = null
    set udg_InCinematic = false
    set udg_VictorySkipped = false
    set udg_ExpDisabledForArthas = false
    set udg_CombatCheckTimer = CreateTimer()
    set udg_InCombat = false
    set udg_P2_Rescuables = Player(1)
    set udg_P5_Sylvanas = Player(4)
    set udg_P8_KelThuzad = Player(7)
    set udg_AbomAmbushLeftUnits = CreateGroup()
    set udg_AbomAmbushRightUnits = CreateGroup()
    set udg_PrisonGuards = CreateGroup()
    set udg_BridgePlateBusy = false
    set udg_FiendAmbushUnits = CreateGroup()
    set udg_AlleyAmbushUnits = CreateGroup()
    set udg_PrisonVMsExist = false
    set udg_ArmoryChurchVMExists = false
    set udg_HorsieCorpses = CreateGroup()
    set udg_HorsieEaters = CreateGroup()
    set udg_HallPatrolTarget = 0
    set udg_HallPatrolTimer = CreateTimer()
    set udg_ChantingUnits = CreateGroup()
    set udg_ChantingInterrupted = false
    set udg_NookVMExists = false
    set udg_HorsieSceneStarted = false
    set udg_SkelAmbushers = CreateGroup()
    set udg_CorpsePile01Units = CreateGroup()
    set udg_CorpsePile02Units = CreateGroup()
    set udg_ArmoryGuards = CreateGroup()
    set udg_ExitEnemyUnits = CreateGroup()
    set udg_FiendAmbushStarted = false
    set udg_AlleyAmbushStarted = false
    set udg_SkelAmbushStarted = false
    set udg_ExitBanshees = CreateGroup()
    set udg_ExitAboms = CreateGroup()
    set udg_CorpsePile03Units = CreateGroup()
    set udg_SpeakingDistance = 1500.00
    set udg_ArmoryElevatorVMExists = false
    set udg_WaveSpawnTimer = CreateTimer()
    set udg_WaveUnits = CreateGroup()
    set udg_WaveOrdersTimer = CreateTimer()
    set udg_WaveSource = 0
    set udg_WaveSpawnDelay = 0
    set udg_RescueNecroCorpses = CreateGroup()
    set udg_BloodfeastLinesDone = false
    set udg_BloodfeastUnits = CreateGroup()
    set udg_BattleRoomUnits = CreateGroup()
    set udg_BattleRoomCorpseUnits = CreateGroup()
    set udg_CryptLeftUnits = CreateGroup()
    set udg_CryptRightUnits = CreateGroup()
    set udg_CryptLeftTimer = CreateTimer()
    set udg_CryptRightTimer = CreateTimer()
    set udg_CryptLeftMax = 0
    set udg_CryptRightMax = 0
    set udg_CryptLeftDelay = 0
    set udg_CryptRightDelay = 0
    set udg_FountainPlateGlowing = false
    set udg_BridgePlateGlowingA = false
    set udg_BridgePlateGlowingB = false
    set udg_BridgePlateGlowingC = false
    set udg_ZombieGroupA = CreateGroup()
    set udg_WaveSpawnMax = 0
    set udg_WaveSpawnPackSize = 0
    set udg_TempInteger = 0
    set udg_WaveSpawnDelayLate = 0
    set udg_WaveSpawnNumA = 0
    set udg_WaveSpawnNumB = 0
    set udg_IntroDreadlordGhouls = CreateGroup()
endfunction

//***************************************************************************
//*
//*  Unit Item Tables
//*
//***************************************************************************

function Unit000019_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rhe3', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000073_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'stre', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000075_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rhe2', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000123_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rde1', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000126_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rman', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000138_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'tdex', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000139_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'tint', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000224_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rma2', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000227_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rma2', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction


//***************************************************************************
//*
//*  Destructible Item Tables
//*
//***************************************************************************

function Doodad000199_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rhe2', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Doodad000480_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rhe1', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Doodad000907_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rhe2', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Doodad001217_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rsps', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Doodad001429_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'I001', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Doodad001630_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'I001', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Doodad001637_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'tstr', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Doodad001689_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rsps', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Doodad001862_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rhe2', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Doodad001984_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'pman', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Doodad002018_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'sneg', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Doodad002706_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'shea', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Doodad002707_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rsps', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Doodad002713_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rhe2', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Doodad002717_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'sres', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Doodad002719_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'sman', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Doodad002726_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rhe2', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Doodad002750_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rre2', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Doodad002751_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rhe2', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Doodad002752_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rman', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction


//***************************************************************************
//*
//*  Sounds
//*
//***************************************************************************

function InitSounds takes nothing returns nothing
    set gg_snd_AbominationWhat3 = CreateSound( "Units\\Undead\\Abomination\\AbominationWhat3.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_AbominationWhat3, "AbominationWhat" )
    call SetSoundDuration( gg_snd_AbominationWhat3, 1918 )
    set gg_snd_AbominationWhat4 = CreateSound( "Units\\Undead\\Abomination\\AbominationWhat4.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_AbominationWhat4, "AbominationWhat" )
    call SetSoundDuration( gg_snd_AbominationWhat4, 917 )
    set gg_snd_AbominationYes2 = CreateSound( "Units\\Undead\\Abomination\\AbominationYes2.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_AbominationYes2, "AbominationYes" )
    call SetSoundDuration( gg_snd_AbominationYes2, 955 )
    set gg_snd_AbominationYes5 = CreateSound( "Units\\Undead\\Abomination\\AbominationYes5.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_AbominationYes5, "AbominationYes" )
    call SetSoundDuration( gg_snd_AbominationYes5, 1172 )
    set gg_snd_AncientProtectorMissileLaunch2 = CreateSound( "Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissileLaunch2.wav", false, true, true, 10, 10, "MissilesEAX" )
    call SetSoundParamsFromLabel( gg_snd_AncientProtectorMissileLaunch2, "AncientProtectorMissileLaunch" )
    call SetSoundDuration( gg_snd_AncientProtectorMissileLaunch2, 868 )
    set gg_snd_AncientProtectorMissileLaunch3 = CreateSound( "Abilities\\Weapons\\AncientProtectorMissile\\AncientProtectorMissileLaunch3.wav", false, true, true, 10, 10, "MissilesEAX" )
    call SetSoundParamsFromLabel( gg_snd_AncientProtectorMissileLaunch3, "AncientProtectorMissileLaunch" )
    call SetSoundDuration( gg_snd_AncientProtectorMissileLaunch3, 868 )
    set gg_snd_BattlenetBirth1 = CreateSound( "Sound\\Interface\\BattlenetBirth1.wav", false, false, false, 10, 10, "SpellsEAX" )
    call SetSoundParamsFromLabel( gg_snd_BattlenetBirth1, "GlueScreenBNetClose" )
    call SetSoundDuration( gg_snd_BattlenetBirth1, 2000 )
    set gg_snd_BattleNetDoorsStereo2 = CreateSound( "Sound\\Interface\\BattleNetDoorsStereo2.wav", false, false, false, 10, 10, "SpellsEAX" )
    call SetSoundParamsFromLabel( gg_snd_BattleNetDoorsStereo2, "GlueScreenBNetSlam" )
    call SetSoundDuration( gg_snd_BattleNetDoorsStereo2, 2646 )
    set gg_snd_ChimaeraAlternateMissileHit1 = CreateSound( "Abilities\\Weapons\\ChimaeraAcidMissile\\ChimaeraAlternateMissileHit1.wav", false, true, true, 10, 10, "AcidsEAX" )
    call SetSoundParamsFromLabel( gg_snd_ChimaeraAlternateMissileHit1, "ChimaeraAcidHit" )
    call SetSoundDuration( gg_snd_ChimaeraAlternateMissileHit1, 736 )
    set gg_snd_FootmanDeath = CreateSound( "Units\\Human\\Footman\\FootmanDeath.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_FootmanDeath, "FootmanDeath" )
    call SetSoundDuration( gg_snd_FootmanDeath, 1245 )
    set gg_snd_GateEpicDeath = CreateSound( "Doodads\\LordaeronSummer\\Terrain\\Gate\\GateEpicDeath.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_GateEpicDeath, "GateDeath" )
    call SetSoundDuration( gg_snd_GateEpicDeath, 1582 )
    call SetSoundChannel( gg_snd_GateEpicDeath, 5 )
    set gg_snd_InGameChatWhat1 = CreateSound( "Sound\\Interface\\InGameChatWhat1.wav", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_InGameChatWhat1, "InGameChatWhat" )
    call SetSoundDuration( gg_snd_InGameChatWhat1, 208 )
    set gg_snd_KnightNoRiderWhat2 = CreateSound( "Units\\Human\\KnightNoRider\\KnightNoRiderWhat2.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_KnightNoRiderWhat2, "KnightNoRiderWhat" )
    call SetSoundDuration( gg_snd_KnightNoRiderWhat2, 1974 )
    set gg_snd_KnightNoRiderWhat3 = CreateSound( "Units\\Human\\KnightNoRider\\KnightNoRiderWhat3.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_KnightNoRiderWhat3, "KnightNoRiderWhat" )
    call SetSoundDuration( gg_snd_KnightNoRiderWhat3, 1858 )
    set gg_snd_L02Abomination25 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02Abomination25.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02Abomination25, "L02Abomination25" )
    call SetSoundDuration( gg_snd_L02Abomination25, 7131 )
    set gg_snd_L02Arthas02 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02Arthas02.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02Arthas02, "L02Arthas02" )
    call SetSoundDuration( gg_snd_L02Arthas02, 11024 )
    set gg_snd_L02Arthas08 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02Arthas08.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02Arthas08, "L02Arthas08" )
    call SetSoundDuration( gg_snd_L02Arthas08, 2064 )
    set gg_snd_L02Arthas12 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02Arthas12.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02Arthas12, "L02Arthas12" )
    call SetSoundDuration( gg_snd_L02Arthas12, 6661 )
    set gg_snd_L02Arthas14 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02Arthas14.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02Arthas14, "L02Arthas14" )
    call SetSoundDuration( gg_snd_L02Arthas14, 3239 )
    set gg_snd_L02Arthas15 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02Arthas15.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02Arthas15, "L02Arthas15" )
    call SetSoundDuration( gg_snd_L02Arthas15, 3840 )
    set gg_snd_L02Arthas16 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02Arthas16.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02Arthas16, "L02Arthas16" )
    call SetSoundDuration( gg_snd_L02Arthas16, 2560 )
    set gg_snd_L02Arthas18 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02Arthas18.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02Arthas18, "L02Arthas18" )
    call SetSoundDuration( gg_snd_L02Arthas18, 6583 )
    set gg_snd_L02Arthas19 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02Arthas19.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02Arthas19, "L02Arthas19" )
    call SetSoundDuration( gg_snd_L02Arthas19, 4127 )
    set gg_snd_L02Arthas23 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02Arthas23.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02Arthas23, "L02Arthas23" )
    call SetSoundDuration( gg_snd_L02Arthas23, 7445 )
    set gg_snd_L02Arthas24 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02Arthas24.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02Arthas24, "L02Arthas24" )
    call SetSoundDuration( gg_snd_L02Arthas24, 4598 )
    set gg_snd_L02Arthas26 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02Arthas26.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02Arthas26, "L02Arthas26" )
    call SetSoundDuration( gg_snd_L02Arthas26, 4989 )
    set gg_snd_L02Arthas37 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02Arthas37.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02Arthas37, "L02Arthas37" )
    call SetSoundDuration( gg_snd_L02Arthas37, 3291 )
    set gg_snd_L02Arthas39 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02Arthas39.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02Arthas39, "L02Arthas39" )
    call SetSoundDuration( gg_snd_L02Arthas39, 3553 )
    set gg_snd_L02Balnazzar06 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02Balnazzar06.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02Balnazzar06, "L02Balnazzar06" )
    call SetSoundDuration( gg_snd_L02Balnazzar06, 12304 )
    set gg_snd_L02Banshee27 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02Banshee27.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02Banshee27, "L02Banshee27" )
    call SetSoundDuration( gg_snd_L02Banshee27, 10397 )
    set gg_snd_L02CryptFiend38 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02CryptFiend38.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02CryptFiend38, "L02CryptFiend38" )
    call SetSoundDuration( gg_snd_L02CryptFiend38, 4859 )
    set gg_snd_L02CryptFiend40 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02CryptFiend40.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02CryptFiend40, "L02CryptFiend40" )
    call SetSoundDuration( gg_snd_L02CryptFiend40, 2978 )
    set gg_snd_L02Detheroc04 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02Detheroc04.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02Detheroc04, "L02Detheroc04" )
    call SetSoundDuration( gg_snd_L02Detheroc04, 6531 )
    set gg_snd_L02KelThuzad01 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02KelThuzad01.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02KelThuzad01, "L02KelThuzad01" )
    call SetSoundDuration( gg_snd_L02KelThuzad01, 2534 )
    set gg_snd_L02KelThuzad03 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02KelThuzad03.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02KelThuzad03, "L02KelThuzad03" )
    call SetSoundDuration( gg_snd_L02KelThuzad03, 6609 )
    set gg_snd_L02KelThuzad05 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02KelThuzad05.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02KelThuzad05, "L02KelThuzad05" )
    call SetSoundDuration( gg_snd_L02KelThuzad05, 1959 )
    set gg_snd_L02KelThuzad07 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02KelThuzad07.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02KelThuzad07, "L02KelThuzad07" )
    call SetSoundDuration( gg_snd_L02KelThuzad07, 7706 )
    set gg_snd_L02Necromancer11 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02Necromancer11.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02Necromancer11, "L02Necromancer11" )
    call SetSoundDuration( gg_snd_L02Necromancer11, 5773 )
    set gg_snd_L02Shade20 = CreateSound( "Sound\\Dialogue\\UndeadExpCamp\\Undead02x\\L02Shade20.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_L02Shade20, "L02Shade20" )
    call SetSoundDuration( gg_snd_L02Shade20, 2952 )
    set gg_snd_LargeCityGateOpen1 = CreateSound( "Sound\\Ambient\\DoodadEffects\\LargeCityGateOpen1.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_LargeCityGateOpen1, "GateOpenSound" )
    call SetSoundDuration( gg_snd_LargeCityGateOpen1, 1445 )
    set gg_snd_NecromancerYesAttack1 = CreateSound( "Units\\Undead\\Necromancer\\NecromancerYesAttack1.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_NecromancerYesAttack1, "NecromancerYesAttack" )
    call SetSoundDuration( gg_snd_NecromancerYesAttack1, 1001 )
    set gg_snd_NecromancerYesAttack2 = CreateSound( "Units\\Undead\\Necromancer\\NecromancerYesAttack2.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_NecromancerYesAttack2, "NecromancerYesAttack" )
    call SetSoundDuration( gg_snd_NecromancerYesAttack2, 2334 )
    set gg_snd_NecromancerYesAttack3 = CreateSound( "Units\\Undead\\Necromancer\\NecromancerYesAttack3.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_NecromancerYesAttack3, "NecromancerYesAttack" )
    call SetSoundDuration( gg_snd_NecromancerYesAttack3, 2159 )
    set gg_snd_ShadeReady1 = CreateSound( "Units\\Undead\\Shade\\ShadeReady1.wav", false, true, true, 10, 10, "HeroAcksEAX" )
    call SetSoundParamsFromLabel( gg_snd_ShadeReady1, "ShadeReady" )
    call SetSoundDuration( gg_snd_ShadeReady1, 2312 )
    set gg_snd_HorseLoop1 = CreateSound( "Units\\Human\\Knight\\HorseLoop1.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_HorseLoop1, "HumanKnightMovement" )
    call SetSoundDuration( gg_snd_HorseLoop1, 2101 )
    set gg_snd_HorseLoop2 = CreateSound( "Units\\Human\\Knight\\HorseLoop2.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_HorseLoop2, "HumanKnightMovement" )
    call SetSoundDuration( gg_snd_HorseLoop2, 3228 )
    set gg_snd_HorseLoop3 = CreateSound( "Units\\Human\\Knight\\HorseLoop3.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_HorseLoop3, "HumanKnightMovement" )
    call SetSoundDuration( gg_snd_HorseLoop3, 5317 )
    set gg_snd_Switch = CreateSound( "Sound\\Ambient\\DoodadEffects\\Switch.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_Switch, "Switch" )
    call SetSoundDuration( gg_snd_Switch, 2606 )
    set gg_snd_Elevator = CreateSound( "Sound\\Ambient\\DoodadEffects\\Elevator.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_Elevator, "Elevator" )
    call SetSoundDuration( gg_snd_Elevator, 2276 )
    set gg_snd_Switch01 = CreateSound( "Sound\\Ambient\\DoodadEffects\\Switch.wav", false, false, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_Switch01, "Switch" )
    call SetSoundDuration( gg_snd_Switch01, 2606 )
    set gg_snd_Elevator01 = CreateSound( "Sound\\Ambient\\DoodadEffects\\Elevator.wav", false, false, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_Elevator01, "Elevator" )
    call SetSoundDuration( gg_snd_Elevator01, 2276 )
endfunction

//***************************************************************************
//*
//*  Destructable Objects
//*
//***************************************************************************

function CreateAllDestructables takes nothing returns nothing
    local destructable d
    local trigger t
    local real life
    set gg_dest_DTfx_1998 = CreateDestructable( 'DTfx', 3840.0, -2048.0, 270.000, 1.000, 0 )
    set gg_dest_DTfx_0750 = CreateDestructable( 'DTfx', 3904.0, -640.0, 270.000, 1.000, 0 )
    set gg_dest_DTfx_0751 = CreateDestructable( 'DTfx', 2880.0, -640.0, 270.000, 1.000, 0 )
    set gg_dest_DTfx_0411 = CreateDestructable( 'DTfx', 2048.0, -1984.0, 270.000, 1.000, 0 )
    set gg_dest_DTg1_0394 = CreateDestructable( 'DTg1', 192.0, -896.0, 270.000, 0.900, 0 )
    set gg_dest_DTg3_1073 = CreateDestructable( 'DTg3', 5760.0, -3648.0, 0.000, 0.900, 0 )
    set gg_dest_DTg5_0114 = CreateDestructable( 'DTg5', 2496.0, -5824.0, 90.000, 0.900, 0 )
    set gg_dest_DTg5_2767 = CreateDestructable( 'DTg5', 3648.0, -5824.0, 90.000, 0.900, 0 )
    set gg_dest_DTg5_2766 = CreateDestructable( 'DTg5', 3392.0, 1728.0, 270.000, 0.900, 0 )
    set gg_dest_DTg5_2636 = CreateDestructable( 'DTg5', 1088.0, -896.0, 270.000, 0.900, 0 )
    set gg_dest_DTrx_0874 = CreateDestructableZ( 'DTrx', 3584.0, -640.0, 128.0, 270.000, 1.000, 0 )
    set gg_dest_DTrx_2599 = CreateDestructableZ( 'DTrx', 3392.0, -640.0, 128.0, 270.000, 1.000, 0 )
    set gg_dest_DTrx_0274 = CreateDestructableZ( 'DTrx', 3200.0, -640.0, 128.0, 270.000, 1.000, 0 )
    set gg_dest_DTrx_0171 = CreateDestructable( 'DTrx', 3840.0, -3968.0, 270.000, 1.000, 0 )
    set gg_dest_L000_1875 = CreateDestructable( 'L000', 3072.0, 6080.0, 270.000, 1.000, 0 )
    set d = CreateDestructable( 'LTbr', 352.0, 8160.0, 304.000, 1.286, 0 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad002719_DropItems )
    set d = CreateDestructable( 'LTbr', 992.0, 7456.0, 318.000, 1.402, 0 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad002717_DropItems )
    set d = CreateDestructable( 'LTbr', 736.0, -2208.0, 302.000, 1.500, 0 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad002018_DropItems )
    set d = CreateDestructable( 'LTbs', 3488.0, 9248.0, 47.910, 1.315, 0 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad002752_DropItems )
    set d = CreateDestructable( 'LTbs', 2912.0, 8736.0, 84.540, 1.316, 0 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad000480_DropItems )
    set d = CreateDestructable( 'LTbx', 3744.0, 10080.0, 230.407, 1.300, 0 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad002751_DropItems )
    set d = CreateDestructable( 'LTbx', 3040.0, 2464.0, 108.000, 1.161, 0 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad001429_DropItems )
    set d = CreateDestructable( 'LTbx', 1056.0, 9440.0, 336.000, 1.212, 0 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad002713_DropItems )
    set d = CreateDestructable( 'LTcr', 256.0, 5888.0, 304.000, 1.500, 1 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad001630_DropItems )
    set d = CreateDestructable( 'LTcr', 1280.0, 10240.0, 245.000, 1.265, 1 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad001217_DropItems )
    set d = CreateDestructable( 'LTcr', 1984.0, 0.0, 340.000, 0.983, 1 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad001984_DropItems )
    set d = CreateDestructable( 'LTcr', 2560.0, 9280.0, 311.138, 1.370, 1 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad001862_DropItems )
    set d = CreateDestructable( 'LTcr', 4992.0, 7616.0, 185.000, 1.459, 1 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad002706_DropItems )
    set d = CreateDestructable( 'LTcr', 4928.0, 10176.0, 279.000, 0.883, 1 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad002707_DropItems )
    set d = CreateDestructable( 'LTcr', 512.0, 2176.0, 107.240, 1.250, 0 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad001689_DropItems )
    set d = CreateDestructable( 'LTcr', 6144.0, -1664.0, 212.000, 1.081, 0 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad000907_DropItems )
    set d = CreateDestructable( 'LTcr', -64.0, 192.0, 230.000, 1.195, 1 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad000199_DropItems )
    set d = CreateDestructable( 'LTcr', 576.0, 5056.0, 304.000, 1.485, 0 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad001637_DropItems )
    set d = CreateDestructable( 'LTcr', 5056.0, 9344.0, 198.000, 1.211, 0 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad002726_DropItems )
    set d = CreateDestructable( 'LTcr', 2624.0, 10112.0, 168.480, 1.336, 1 )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function Doodad002750_DropItems )
    set gg_dest_LTe1_2572 = CreateDestructable( 'LTe1', 2048.0, -2432.0, 270.000, 1.000, 0 )
    set gg_dest_LTe1_0000 = CreateDestructable( 'LTe1', 768.0, -5632.0, 270.000, 1.000, 0 )
endfunction

//***************************************************************************
//*
//*  Items
//*
//***************************************************************************

function CreateAllItems takes nothing returns nothing
    local integer itemID

    call CreateItem( 'belv', 4201.7, -3432.2 )
    call CreateItem( 'cnob', 3984.3, 1686.1 )
    call CreateItem( 'gold', 2113.9, 2424.9 )
    call CreateItem( 'gold', 1930.6, -152.7 )
    call CreateItem( 'gold', 4856.1, -6536.0 )
    call CreateItem( 'gold', 6047.8, -1191.2 )
    call CreateItem( 'gold', 5955.0, -3638.3 )
    call CreateItem( 'gold', 3864.6, -8347.9 )
    call CreateItem( 'gold', 603.7, 1362.7 )
    call CreateItem( 'gold', 2053.9, -3635.5 )
    call CreateItem( 'gold', 2589.4, -637.0 )
    call CreateItem( 'gold', 187.6, -2753.9 )
    call CreateItem( 'gold', 3413.5, -1453.7 )
    call CreateItem( 'oven', 3403.3, 1051.9 )
    call CreateItem( 'penr', 2555.5, 126.5 )
    call CreateItem( 'phea', 3071.4, -5182.6 )
    call CreateItem( 'prvt', 6123.8, 4992.2 )
    call CreateItem( 'rat3', 5599.8, -798.2 )
    call CreateItem( 'rej1', 6025.2, 3184.4 )
    call CreateItem( 'rman', 4848.0, -3708.8 )
    call CreateItem( 'rnec', 4470.6, 3995.4 )
    call CreateItem( 'rre2', 3363.6, -1849.5 )
    call CreateItem( 'spro', 768.1, -3936.1 )
endfunction

//***************************************************************************
//*
//*  Unit Creation
//*
//***************************************************************************

//===========================================================================
function CreateUnitsForPlayer0 takes nothing returns nothing
    local player p = Player(0)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_Uear_0214 = CreateUnit( p, 'Uear', 3199.5, -5276.7, 171.000 )
    call SetHeroLevel( gg_unit_Uear_0214, 10, false )
    call SetUnitState( gg_unit_Uear_0214, UNIT_STATE_MANA, 495 )
    call SelectHeroSkill( gg_unit_Uear_0214, 'AUdc' )
    call SelectHeroSkill( gg_unit_Uear_0214, 'AUdc' )
    call SelectHeroSkill( gg_unit_Uear_0214, 'AUdc' )
    call SelectHeroSkill( gg_unit_Uear_0214, 'AUdp' )
    call SelectHeroSkill( gg_unit_Uear_0214, 'AUdp' )
    call SelectHeroSkill( gg_unit_Uear_0214, 'AUdp' )
    call SelectHeroSkill( gg_unit_Uear_0214, 'AUau' )
    call SelectHeroSkill( gg_unit_Uear_0214, 'AUau' )
    call SelectHeroSkill( gg_unit_Uear_0214, 'AUau' )
    call SelectHeroSkill( gg_unit_Uear_0214, 'AUan' )
endfunction

//===========================================================================
function CreateUnitsForPlayer1 takes nothing returns nothing
    local player p = Player(1)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'ugho', 179.2, -2353.3, 97.932 )
    set u = CreateUnit( p, 'ugho', 164.6, -2639.8, 218.355 )
    set u = CreateUnit( p, 'ucry', 6096.0, -3345.6, 222.157 )
    set u = CreateUnit( p, 'ucry', 4365.6, 322.6, 191.867 )
    set u = CreateUnit( p, 'uabo', 6042.0, -5109.9, 184.128 )
    set u = CreateUnit( p, 'ugho', 2845.8, 6828.4, 179.313 )
    set u = CreateUnit( p, 'ugho', 3261.8, 6808.3, 30.741 )
    set u = CreateUnit( p, 'ugho', 1888.7, -5148.4, 200.211 )
    set u = CreateUnit( p, 'ushd', 3070.9, -3200.4, 269.708 )
    set u = CreateUnit( p, 'uabo', -28.4, -150.1, 302.620 )
    set u = CreateUnit( p, 'ushd', 4251.4, 196.1, 334.458 )
    set u = CreateUnit( p, 'ucry', 6097.5, -3932.5, 148.375 )
    set u = CreateUnit( p, 'umtw', 60.2, -1341.1, 223.954 )
    set u = CreateUnit( p, 'umtw', 322.3, -1407.2, 339.175 )
    set u = CreateUnit( p, 'unec', 1689.9, -4982.0, 193.041 )
    set u = CreateUnit( p, 'unec', 1726.4, -5152.0, 190.400 )
    set u = CreateUnit( p, 'uabo', 3104.0, 6967.2, 48.010 )
    set u = CreateUnit( p, 'unec', 3018.5, 6742.7, 124.028 )
endfunction

//===========================================================================
function CreateUnitsForPlayer3 takes nothing returns nothing
    local player p = Player(3)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_unec_0173 = CreateUnit( p, 'unec', 3261.8, 10966.7, 91.490 )
    set gg_unit_unec_0240 = CreateUnit( p, 'unec', 2852.6, 10973.3, 86.584 )
endfunction

//===========================================================================
function CreateUnitsForPlayer4 takes nothing returns nothing
    local player p = Player(4)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'uban', 2080.4, 11510.2, 317.098 )
    set u = CreateUnit( p, 'uban', 2143.9, 11392.9, 286.942 )
    set u = CreateUnit( p, 'uban', 3959.6, 11481.2, 239.666 )
    set u = CreateUnit( p, 'uban', 3989.6, 11607.2, 205.154 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer6 takes nothing returns nothing
    local player p = Player(6)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'uzg2', 224.0, 1312.0, 270.000 )
    set u = CreateUnit( p, 'uzg1', 3744.0, -1760.0, 270.000 )
    set u = CreateUnit( p, 'uzg1', 3744.0, -1184.0, 270.000 )
    set u = CreateUnit( p, 'uzg2', 32.0, 1248.0, 270.000 )
    set u = CreateUnit( p, 'uzg2', 3488.0, 5920.0, 270.000 )
    set u = CreateUnit( p, 'uzg2', 2656.0, 5920.0, 270.000 )
    set gg_unit_usep_0206 = CreateUnit( p, 'usep', 5632.0, 9920.0, 270.000 )
    set gg_unit_usep_0207 = CreateUnit( p, 'usep', 640.0, 9856.0, 270.000 )
endfunction

//===========================================================================
function CreateUnitsForPlayer6 takes nothing returns nothing
    local player p = Player(6)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'ucry', 2766.9, 7283.5, 307.769 )
    set u = CreateUnit( p, 'ugho', 390.5, -6033.8, 336.226 )
    set u = CreateUnit( p, 'ugho', 1154.9, -6026.6, 263.797 )
    set u = CreateUnit( p, 'ugho', 959.4, -6246.4, 192.203 )
    set u = CreateUnit( p, 'uske', 2488.0, -1177.1, 188.878 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'ugho', 574.5, -6262.6, 192.203 )
    set u = CreateUnit( p, 'uskm', 5489.6, -963.5, 2.533 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'ugho', 611.8, -4103.8, 297.110 )
    set u = CreateUnit( p, 'n000', 3944.9, -8253.1, 242.370 )
    call SetUnitState( u, UNIT_STATE_MANA, 0 )
    call SetUnitAcquireRange( u, 200.0 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000123_DropItems )
    set u = CreateUnit( p, 'n001', 3754.9, -8352.9, 249.780 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'ucry', 2444.8, 7226.6, 239.421 )
    set u = CreateUnit( p, 'ucry', 3707.4, 7204.1, 307.769 )
    set u = CreateUnit( p, 'ucry', 3402.3, 7323.8, 239.421 )
    set u = CreateUnit( p, 'uske', 2730.8, 6818.5, 317.823 )
    set u = CreateUnit( p, 'nzom', 4052.9, -8411.5, 217.616 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'nzom', 3807.8, -8183.5, 280.920 )
    call SetUnitAcquireRange( u, 200.0 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000126_DropItems )
    set u = CreateUnit( p, 'uske', 5543.3, -1612.4, 138.514 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uske', 2997.2, 7125.5, 291.589 )
    set u = CreateUnit( p, 'ugho', 2745.4, 6974.6, 315.115 )
    set u = CreateUnit( p, 'ugho', 1084.9, 5997.3, 14.783 )
    set u = CreateUnit( p, 'ugho', 1228.4, 5894.6, 85.574 )
    set u = CreateUnit( p, 'uske', 3258.7, 7089.2, 211.067 )
    set u = CreateUnit( p, 'uske', 3447.7, 6839.9, 198.442 )
    set u = CreateUnit( p, 'uske', 2551.0, 7151.6, 310.980 )
    set u = CreateUnit( p, 'uske', 3648.5, 7050.2, 207.787 )
    set u = CreateUnit( p, 'nzom', 5267.3, 1327.9, 207.844 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'ushd', 869.1, 2841.3, 286.192 )
    set u = CreateUnit( p, 'uske', 2489.5, -1498.7, 188.878 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'ushd', 4837.2, 1179.8, 129.720 )
    set u = CreateUnit( p, 'ushd', 2164.2, -1320.0, 185.176 )
    set gg_unit_Uvar_0062 = CreateUnit( p, 'Uvar', 966.1, -7478.5, 99.460 )
    call UnitAddItemToSlotById( gg_unit_Uvar_0062, 'ofir', 0 )
    call UnitAddItemToSlotById( gg_unit_Uvar_0062, 'phlt', 1 )
    call UnitAddItemToSlotById( gg_unit_Uvar_0062, 'phlt', 2 )
    call UnitAddItemToSlotById( gg_unit_Uvar_0062, 'phlt', 3 )
    call UnitAddItemToSlotById( gg_unit_Uvar_0062, 'phlt', 4 )
    call UnitAddItemToSlotById( gg_unit_Uvar_0062, 'phlt', 5 )
    set u = CreateUnit( p, 'uskm', 5726.3, -1287.4, 66.536 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uske', 5149.9, 1303.4, 247.694 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'ugho', 5625.9, -3547.9, 321.104 )
    set u = CreateUnit( p, 'ugho', 5636.1, -3703.1, 9.512 )
    set u = CreateUnit( p, 'ushd', 1406.3, 8193.4, 301.860 )
    set u = CreateUnit( p, 'uabo', 2494.0, -6058.2, 8.030 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000073_DropItems )
    set u = CreateUnit( p, 'uabo', 3660.9, -6044.8, 111.304 )
    set u = CreateUnit( p, 'uabo', 3125.0, -6938.0, 186.590 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000075_DropItems )
    set u = CreateUnit( p, 'u002', 1983.2, 3010.9, 304.830 )
    set u = CreateUnit( p, 'ugho', 945.5, -4097.0, 225.254 )
    set u = CreateUnit( p, 'uske', 5073.1, -1489.4, 95.705 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uskm', 5917.4, -1348.1, 77.568 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'npfl', 5243.2, 8118.3, 221.274 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'unec', 5761.7, -980.5, 38.259 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'unec', 5999.5, -1006.2, 137.976 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'u002', 1917.8, 2435.2, 324.534 )
    set u = CreateUnit( p, 'n004', 855.3, 3315.3, 263.060 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000019_DropItems )
    set u = CreateUnit( p, 'uske', 5503.3, 1072.4, 283.785 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'u002', 2061.3, 2239.9, 173.439 )
    set u = CreateUnit( p, 'nzom', 5078.3, 1148.5, 78.080 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'nzom', 5258.5, 1179.0, 121.932 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'ugho', 5529.6, 2332.0, 287.905 )
    set u = CreateUnit( p, 'ugho', 5351.7, 2280.4, 135.718 )
    set u = CreateUnit( p, 'unec', 5279.7, 2445.4, 309.475 )
    call SetUnitState( u, UNIT_STATE_MANA, 0 )
    set u = CreateUnit( p, 'umtw', 5618.3, 2465.9, 240.188 )
    set u = CreateUnit( p, 'ucry', 3482.0, 239.8, 266.457 )
    set u = CreateUnit( p, 'ucry', 3308.2, 224.5, 288.291 )
    set u = CreateUnit( p, 'unec', 5882.7, -745.0, 266.072 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uske', 3281.3, 1527.5, 89.254 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uabo', 2667.8, 8666.1, 263.658 )
    set u = CreateUnit( p, 'nzom', 3854.1, -8503.6, 87.108 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uabo', 3496.7, 8665.0, 261.083 )
    set u = CreateUnit( p, 'uske', 3491.6, 1520.8, 89.254 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'nzom', 3276.1, 1427.7, 78.080 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uskm', 259.0, 1033.4, 42.440 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uskm', 522.3, 946.7, 208.187 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uskm', 45.8, 1033.4, 299.242 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'nzom', 3493.6, 1418.0, 90.518 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'n001', 3170.5, -7713.9, 115.820 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'n001', 3038.0, -7759.4, 58.164 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'n001', 3007.0, -7638.9, 43.111 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'nzom', 5159.8, -5043.9, 221.690 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'n001', 5032.0, -4992.1, 266.543 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'n001', 5061.7, -5172.7, 266.543 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'n001', 4951.9, -5088.3, 49.007 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'n001', 5137.0, -4876.0, 266.543 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'n001', 5258.5, -5117.3, 266.543 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'ushd', 4739.4, 8198.3, 228.417 )
    set u = CreateUnit( p, 'unec', 2493.4, 8693.7, 281.489 )
    call SetUnitState( u, UNIT_STATE_MANA, 0 )
    set u = CreateUnit( p, 'ucry', 1079.8, -2559.2, 303.002 )
    set u = CreateUnit( p, 'ucry', 1103.7, -2780.9, 330.749 )
    set u = CreateUnit( p, 'npfl', 5143.4, 8335.6, 177.573 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'npfl', 810.8, 8084.6, 313.870 )
    call SetUnitAcquireRange( u, 200.0 )
    set gg_unit_Udre_0135 = CreateUnit( p, 'Udre', 5225.0, -3636.5, 356.430 )
    call SelectHeroSkill( gg_unit_Udre_0135, 'AUsl' )
    call UnitAddItemToSlotById( gg_unit_Udre_0135, 'phlt', 0 )
    call UnitAddItemToSlotById( gg_unit_Udre_0135, 'phlt', 1 )
    call UnitAddItemToSlotById( gg_unit_Udre_0135, 'phlt', 2 )
    call UnitAddItemToSlotById( gg_unit_Udre_0135, 'phlt', 3 )
    call UnitAddItemToSlotById( gg_unit_Udre_0135, 'phlt', 4 )
    call UnitAddItemToSlotById( gg_unit_Udre_0135, 'phlt', 5 )
    set gg_unit_Udth_0137 = CreateUnit( p, 'Udth', 569.4, -7481.8, 90.600 )
    call UnitAddItemToSlotById( gg_unit_Udth_0137, 'oven', 0 )
    call UnitAddItemToSlotById( gg_unit_Udth_0137, 'phlt', 1 )
    call UnitAddItemToSlotById( gg_unit_Udth_0137, 'phlt', 2 )
    call UnitAddItemToSlotById( gg_unit_Udth_0137, 'phlt', 3 )
    call UnitAddItemToSlotById( gg_unit_Udth_0137, 'phlt', 4 )
    call UnitAddItemToSlotById( gg_unit_Udth_0137, 'phlt', 5 )
    set u = CreateUnit( p, 'unec', 777.0, -4028.5, 315.691 )
    set u = CreateUnit( p, 'uskm', 3312.1, 1294.8, 91.082 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uskm', 3490.3, 1302.0, 91.082 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'ucry', 3967.5, -2907.4, 14.933 )
    set u = CreateUnit( p, 'ucry', 3961.0, -2721.6, 344.561 )
    set u = CreateUnit( p, 'unec', 3777.2, -2812.8, 359.109 )
    set u = CreateUnit( p, 'uske', 3388.9, 1492.0, 89.254 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'unec', 479.5, 5149.2, 294.092 )
    set u = CreateUnit( p, 'ucry', 4913.0, -6375.1, 315.119 )
    call IssueImmediateOrder( u, "burrow" )
    set gg_unit_unec_0149 = CreateUnit( p, 'unec', 3402.2, 1373.5, 89.130 )
    call SetUnitState( gg_unit_unec_0149, UNIT_STATE_MANA, 0 )
    call SetUnitAcquireRange( gg_unit_unec_0149, 200.0 )
    set u = CreateUnit( p, 'ucry', 5200.4, -6589.6, 189.238 )
    call IssueImmediateOrder( u, "burrow" )
    set u = CreateUnit( p, 'ucry', 4615.7, -6551.8, 178.522 )
    call IssueImmediateOrder( u, "burrow" )
    set u = CreateUnit( p, 'nzom', 3150.7, -7875.7, 116.050 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'nzom', 3020.6, -7941.2, 28.176 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'nzom', 3226.0, -7359.5, 99.509 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uabo', 2936.3, 11913.0, 280.185 )
    set u = CreateUnit( p, 'uabo', 3267.6, 11907.8, 187.196 )
    set u = CreateUnit( p, 'n003', 1006.8, 3124.8, 218.142 )
    set u = CreateUnit( p, 'n003', 656.6, 3090.7, 314.198 )
    set u = CreateUnit( p, 'uske', 2566.4, -1240.9, 188.878 )
    call SetUnitAcquireRange( u, 200.0 )
    set gg_unit_Ubal_0161 = CreateUnit( p, 'Ubal', 766.7, -7482.2, 91.140 )
    call UnitAddItemToSlotById( gg_unit_Ubal_0161, 'odef', 0 )
    call UnitAddItemToSlotById( gg_unit_Ubal_0161, 'phlt', 1 )
    call UnitAddItemToSlotById( gg_unit_Ubal_0161, 'phlt', 2 )
    call UnitAddItemToSlotById( gg_unit_Ubal_0161, 'phlt', 3 )
    call UnitAddItemToSlotById( gg_unit_Ubal_0161, 'phlt', 4 )
    call UnitAddItemToSlotById( gg_unit_Ubal_0161, 'phlt', 5 )
    set u = CreateUnit( p, 'ushd', 318.6, -4166.5, 356.390 )
    set u = CreateUnit( p, 'uabo', 2227.0, 1279.2, 312.922 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uske', 2567.7, -1450.7, 160.341 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uskm', 2307.8, 1465.6, 314.001 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uskm', 2286.4, 1124.6, 56.207 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uskm', 2497.2, -1342.4, 193.565 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uske', 2374.7, -1241.1, 188.878 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uske', 2383.8, -1453.7, 160.341 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'ucry', 3774.6, -1498.2, 186.106 )
    call SetUnitAcquireRange( u, 200.0 )
    call IssueImmediateOrder( u, "burrow" )
    set u = CreateUnit( p, 'ucry', 3501.9, -1878.5, 96.268 )
    call SetUnitAcquireRange( u, 200.0 )
    call IssueImmediateOrder( u, "burrow" )
    set u = CreateUnit( p, 'ucry', 3139.5, -1843.8, 52.347 )
    call SetUnitAcquireRange( u, 200.0 )
    call IssueImmediateOrder( u, "burrow" )
    set u = CreateUnit( p, 'ucry', 3251.9, -1078.6, 291.133 )
    call SetUnitAcquireRange( u, 200.0 )
    call IssueImmediateOrder( u, "burrow" )
    set gg_unit_Udre_0184 = CreateUnit( p, 'Udre', 1057.0, -29.1, 269.270 )
    call SetUnitAcquireRange( gg_unit_Udre_0184, 200.0 )
    call SelectHeroSkill( gg_unit_Udre_0184, 'AUav' )
    call UnitAddItemToSlotById( gg_unit_Udre_0184, 'phlt', 0 )
    call UnitAddItemToSlotById( gg_unit_Udre_0184, 'phlt', 1 )
    call UnitAddItemToSlotById( gg_unit_Udre_0184, 'phlt', 2 )
    call UnitAddItemToSlotById( gg_unit_Udre_0184, 'phlt', 3 )
    call UnitAddItemToSlotById( gg_unit_Udre_0184, 'phlt', 4 )
    call UnitAddItemToSlotById( gg_unit_Udre_0184, 'phlt', 5 )
    set u = CreateUnit( p, 'ugrm', 3005.6, 1728.0, 289.890 )
    set u = CreateUnit( p, 'ugrm', 3747.8, 1697.0, 237.500 )
    set u = CreateUnit( p, 'unec', 3171.6, 8648.5, 279.610 )
    call SetUnitState( u, UNIT_STATE_MANA, 0 )
    set u = CreateUnit( p, 'narg', 1246.0, 74.7, 244.317 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'unec', 3689.8, 8725.3, 241.486 )
    call SetUnitState( u, UNIT_STATE_MANA, 0 )
    set u = CreateUnit( p, 'narg', 859.3, 61.3, 303.343 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uabo', 2747.2, 11749.3, 280.185 )
    set u = CreateUnit( p, 'uabo', 3491.9, 11788.3, 187.196 )
    set u = CreateUnit( p, 'u000', 3066.7, 10034.2, 259.570 )
    call SetUnitState( u, UNIT_STATE_MANA, 600 )
    set u = CreateUnit( p, 'uabo', 3340.1, 9914.1, 261.083 )
    set u = CreateUnit( p, 'uabo', 2797.0, 9911.2, 261.083 )
    set u = CreateUnit( p, 'ucry', 2870.1, 10175.1, 307.769 )
    set u = CreateUnit( p, 'ucry', 3327.4, 10149.5, 239.421 )
    set u = CreateUnit( p, 'ugho', 5693.2, -7611.3, 218.997 )
    set u = CreateUnit( p, 'ugho', 5222.5, 9861.6, 192.146 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'ugho', 5349.6, 9765.8, 232.214 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'ugho', 5682.7, 9593.8, 17.315 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'ugho', 5485.6, 9559.5, 112.229 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'ugho', 349.8, 9520.0, 264.284 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'ugho', 522.5, 9622.6, 232.214 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'ugho', 946.0, 9656.6, 17.315 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'ugho', 857.9, 9522.8, 112.229 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'umtw', 933.2, 9997.7, 168.096 )
    set u = CreateUnit( p, 'umtw', 369.7, 9794.9, 289.488 )
    set u = CreateUnit( p, 'umtw', 5315.5, 10106.2, 168.096 )
    set u = CreateUnit( p, 'umtw', 5836.5, 9696.3, 254.108 )
    set u = CreateUnit( p, 'npfl', 874.1, 8286.9, 343.639 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'nbal', 5302.0, 8302.1, 208.500 )
    call SetUnitAcquireRange( u, 200.0 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000224_DropItems )
    set u = CreateUnit( p, 'npfl', 5047.3, -3671.2, 219.771 )
    set u = CreateUnit( p, 'nbal', 697.7, 8284.2, 348.526 )
    call SetUnitAcquireRange( u, 200.0 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000227_DropItems )
    set gg_unit_Udre_0226 = CreateUnit( p, 'Udre', 3088.3, 9795.7, 243.200 )
    call SetHeroLevel( gg_unit_Udre_0226, 3, false )
    call SetUnitState( gg_unit_Udre_0226, UNIT_STATE_MANA, 345 )
    call SelectHeroSkill( gg_unit_Udre_0226, 'AUcs' )
    call SelectHeroSkill( gg_unit_Udre_0226, 'AUsl' )
    call SelectHeroSkill( gg_unit_Udre_0226, 'AUav' )
    call UnitAddItemToSlotById( gg_unit_Udre_0226, 'phlt', 0 )
    call UnitAddItemToSlotById( gg_unit_Udre_0226, 'phlt', 1 )
    call UnitAddItemToSlotById( gg_unit_Udre_0226, 'phlt', 2 )
    call UnitAddItemToSlotById( gg_unit_Udre_0226, 'phlt', 3 )
    call UnitAddItemToSlotById( gg_unit_Udre_0226, 'phlt', 4 )
    call UnitAddItemToSlotById( gg_unit_Udre_0226, 'phlt', 5 )
    set u = CreateUnit( p, 'npfl', 5122.1, -3556.6, 301.095 )
    set u = CreateUnit( p, 'uabo', 4613.5, 5886.1, 128.484 )
    set u = CreateUnit( p, 'unec', 5010.1, 5582.2, 161.164 )
    set u = CreateUnit( p, 'ugho', 5567.0, -7613.3, 321.950 )
    set u = CreateUnit( p, 'ugho', 3163.7, 7176.0, 239.077 )
    set u = CreateUnit( p, 'ugho', 944.8, -7191.0, 106.942 )
    set u = CreateUnit( p, 'ugho', 579.5, -7168.0, 68.722 )
    set u = CreateUnit( p, 'unec', 4967.5, 5714.7, 233.462 )
    set u = CreateUnit( p, 'uske', 4899.7, 5524.6, 197.636 )
    set u = CreateUnit( p, 'ugho', 1225.8, -7041.4, 123.620 )
    set u = CreateUnit( p, 'ugho', 319.0, -7035.8, 36.162 )
    set u = CreateUnit( p, 'ugho', 1365.2, -6650.8, 125.299 )
    set u = CreateUnit( p, 'ugho', 162.8, -6639.6, 17.511 )
    set u = CreateUnit( p, 'ugho', 847.7, -6883.5, 73.139 )
    set u = CreateUnit( p, 'ugho', 688.0, -6877.3, 99.638 )
    set u = CreateUnit( p, 'ugho', 355.6, -6785.9, 43.364 )
    set u = CreateUnit( p, 'ugho', 1130.6, -6795.6, 329.138 )
    set u = CreateUnit( p, 'ucry', 584.2, 5209.7, 246.229 )
    set u = CreateUnit( p, 'ucry', 734.9, 5103.4, 304.174 )
    set u = CreateUnit( p, 'uske', 5267.8, -1406.4, 138.924 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uske', 5294.8, -1130.9, 189.674 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'uskm', 5551.6, -1144.3, 39.029 )
    call SetUnitAcquireRange( u, 200.0 )
endfunction

//===========================================================================
function CreateUnitsForPlayer7 takes nothing returns nothing
    local player p = Player(7)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_Uktl_0009 = CreateUnit( p, 'Uktl', 3136.3, -5081.0, 176.230 )
    set gg_unit_uktn_0010 = CreateUnit( p, 'uktn', 3431.4, -5371.3, 168.519 )
    set gg_unit_uktn_0011 = CreateUnit( p, 'uktn', 3440.3, -4974.7, 176.412 )
endfunction

//===========================================================================
function CreateNeutralPassiveBuildings takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'nfoh', 3264.0, 3264.0, 270.000 )
    set u = CreateUnit( p, 'nmoo', 1856.0, -3776.0, 270.000 )
    set gg_unit_ncp3_0047 = CreateUnit( p, 'ncp3', 3072.0, 10880.0, 270.000 )
    set gg_unit_u001_0071 = CreateUnit( p, 'u001', 5952.0, 192.0, 270.000 )
    set u = CreateUnit( p, 'nbsm', 1024.0, -3968.0, 270.000 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000138_DropItems )
    set u = CreateUnit( p, 'nbsm', 512.0, -3968.0, 270.000 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000139_DropItems )
endfunction

//===========================================================================
function CreateNeutralPassive takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'nshe', 4000.0, 4977.2, 192.728 )
    set u = CreateUnit( p, 'nshe', 4062.5, 4914.0, 229.742 )
    set u = CreateUnit( p, 'nshe', 4340.0, 4905.9, 197.562 )
    set u = CreateUnit( p, 'nshe', 4220.5, 4984.7, 259.593 )
    set u = CreateUnit( p, 'nshe', 4137.0, 4905.9, 130.807 )
    set u = CreateUnit( p, 'unec', 2883.5, 6984.8, 259.944 )
    set u = CreateUnit( p, 'unec', 3338.1, 6938.3, 111.427 )
    set u = CreateUnit( p, 'hhdl', 2052.8, 2749.2, 278.621 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'hhdl', 1978.7, 2182.7, 320.953 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'hhdl', 2198.3, 2274.9, 13.239 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'hhdl', 1986.9, 2383.5, 233.643 )
    call SetUnitAcquireRange( u, 200.0 )
    set u = CreateUnit( p, 'ugho', 2875.2, 7160.5, 92.222 )
    set u = CreateUnit( p, 'ugho', 3458.6, 7024.6, 339.246 )
    set u = CreateUnit( p, 'ugho', 3278.4, 6654.0, 222.062 )
endfunction

//===========================================================================
function CreatePlayerBuildings takes nothing returns nothing
    call CreateBuildingsForPlayer6(  )
endfunction

//===========================================================================
function CreatePlayerUnits takes nothing returns nothing
    call CreateUnitsForPlayer0(  )
    call CreateUnitsForPlayer1(  )
    call CreateUnitsForPlayer3(  )
    call CreateUnitsForPlayer4(  )
    call CreateUnitsForPlayer6(  )
    call CreateUnitsForPlayer7(  )
endfunction

//===========================================================================
function CreateAllUnits takes nothing returns nothing
    call CreateNeutralPassiveBuildings(  )
    call CreatePlayerBuildings(  )
    call CreateNeutralPassive(  )
    call CreatePlayerUnits(  )
endfunction

//***************************************************************************
//*
//*  Regions
//*
//***************************************************************************

function CreateRegions takes nothing returns nothing
    local weathereffect we

    set gg_rct_Abom_Ambush_Source_Left = Rect( 2304.0, -6144.0, 2688.0, -5888.0 )
    set gg_rct_Abom_Ambush_Source_Right = Rect( 3456.0, -6144.0, 3840.0, -5888.0 )
    set gg_rct_Abom_Ambush_Target_Left = Rect( 2688.0, -5248.0, 2816.0, -5120.0 )
    set gg_rct_Abom_Ambush_Target_Right = Rect( 3328.0, -5248.0, 3456.0, -5120.0 )
    set gg_rct_Abom_Ambush_Tripwire = Rect( 2880.0, -5376.0, 3264.0, -4992.0 )
    set gg_rct_Alley_Ambush_Source = Rect( 4352.0, -6912.0, 5376.0, -6144.0 )
    set gg_rct_Alley_Ambush_Tripwire = Rect( 4608.0, -6784.0, 5120.0, -6272.0 )
    set gg_rct_Armory_Guards_Source = Rect( 640.0, -128.0, 1408.0, 256.0 )
    set gg_rct_Armory_PanTarg = Rect( 960.0, -256.0, 1088.0, -128.0 )
    set gg_rct_Armory_Ping = Rect( 992.0, -224.0, 1056.0, -160.0 )
    set gg_rct_Armory_Tripwire = Rect( 768.0, -1792.0, 1664.0, -896.0 )
    set gg_rct_Armory_VM = Rect( 640.0, -768.0, 1408.0, 384.0 )
    set gg_rct_Barricade_BeforeShade = Rect( 2752.0, -4608.0, 3328.0, -4224.0 )
    set gg_rct_Barricade_FiendA = Rect( 1408.0, -2752.0, 1728.0, -2496.0 )
    set gg_rct_Barricade_FiendB = Rect( 1280.0, -3072.0, 1600.0, -2816.0 )
    set gg_rct_BattleRoom_PanTarg = Rect( 3008.0, 6656.0, 3136.0, 6784.0 )
    set gg_rct_BattleRoom_Units = Rect( 2048.0, 6400.0, 4096.0, 7552.0 )
    set gg_rct_BattleRoom_VM = Rect( 2304.0, 6528.0, 3840.0, 7424.0 )
    set gg_rct_Bloodfeast_Source = Rect( 2976.0, 9920.0, 3168.0, 10112.0 )
    set gg_rct_Bloodfeast_Tripwire = Rect( 2176.0, 9088.0, 3968.0, 10368.0 )
    set gg_rct_Bloodfeast_Units_Source = Rect( 2560.0, 9600.0, 3584.0, 10368.0 )
    set gg_rct_Bridge_PlateA = Rect( 2816.0, -704.0, 2944.0, -576.0 )
    set gg_rct_Bridge_PlateB = Rect( 3840.0, -704.0, 3968.0, -576.0 )
    set gg_rct_Bridge_PlateC = Rect( 3776.0, -2112.0, 3904.0, -1984.0 )
    set gg_rct_Chanting_MoveTargA = Rect( 5344.0, -1312.0, 5472.0, -1184.0 )
    set gg_rct_Chanting_MoveTargB = Rect( 5536.0, -1632.0, 5664.0, -1504.0 )
    set gg_rct_Chanting_MoveTargC = Rect( 5280.0, -1600.0, 5408.0, -1472.0 )
    set gg_rct_Chanting_Necro_SourceA = Rect( 5792.0, -832.0, 5952.0, -672.0 )
    set gg_rct_Chanting_Necro_SourceB = Rect( 5920.0, -1088.0, 6080.0, -928.0 )
    set gg_rct_Chanting_Necro_SourceC = Rect( 5664.0, -1056.0, 5824.0, -896.0 )
    set gg_rct_Chanting_Necros_Source = Rect( 5632.0, -1120.0, 6112.0, -640.0 )
    set gg_rct_Chanting_Skulls = Rect( 5824.0, -960.0, 5952.0, -832.0 )
    set gg_rct_Corpse_Pile_01 = Rect( 4896.0, 2688.0, 5120.0, 2912.0 )
    set gg_rct_Corpse_Pile_02 = Rect( 3008.0, 8192.0, 3264.0, 8448.0 )
    set gg_rct_Corpse_Pile_03 = Rect( 4864.0, 5888.0, 5120.0, 6144.0 )
    set gg_rct_CryptLeft_Sitting_Area = Rect( 384.0, 9280.0, 1280.0, 9792.0 )
    set gg_rct_CryptLeft_Spawn_Point = Rect( 512.0, 9632.0, 768.0, 9728.0 )
    set gg_rct_CryptLeftUnits_Source = Rect( 256.0, 9344.0, 1024.0, 9728.0 )
    set gg_rct_CryptRight_Sitting_Area = Rect( 4928.0, 9280.0, 5824.0, 9792.0 )
    set gg_rct_CryptRight_Spawn_Point = Rect( 5504.0, 9632.0, 5760.0, 9728.0 )
    set gg_rct_CryptRightUnits_Source = Rect( 5120.0, 9472.0, 5760.0, 9984.0 )
    set gg_rct_Entrance_Hallway_CorpseA = Rect( 5504.0, -7680.0, 5632.0, -7552.0 )
    set gg_rct_Entrance_Hallway_CorpseA_Dest = Rect( 1344.0, -4928.0, 1472.0, -4800.0 )
    set gg_rct_Entrance_Hallway_CorpseB = Rect( 5632.0, -7680.0, 5760.0, -7552.0 )
    set gg_rct_Entrance_Hallway_CorpseB_Dest = Rect( 1536.0, -5184.0, 1664.0, -5056.0 )
    set gg_rct_Exit_Abom01_MoveTarg = Rect( 2720.0, 11584.0, 2848.0, 11712.0 )
    set gg_rct_Exit_Abom01_MoveTargB = Rect( 2880.0, 11488.0, 3008.0, 11616.0 )
    set gg_rct_Exit_Abom01_Source = Rect( 2688.0, 11680.0, 2816.0, 11808.0 )
    set gg_rct_Exit_Abom02_MoveTarg = Rect( 2912.0, 11744.0, 3040.0, 11872.0 )
    set gg_rct_Exit_Abom02_Source = Rect( 2880.0, 11840.0, 3008.0, 11968.0 )
    set gg_rct_Exit_Abom03_MoveTarg = Rect( 3168.0, 11744.0, 3296.0, 11872.0 )
    set gg_rct_Exit_Abom03_Source = Rect( 3200.0, 11840.0, 3328.0, 11968.0 )
    set gg_rct_Exit_Abom04_MoveTarg = Rect( 3360.0, 11616.0, 3488.0, 11744.0 )
    set gg_rct_Exit_Abom04_MoveTargB = Rect( 3136.0, 11488.0, 3264.0, 11616.0 )
    set gg_rct_Exit_Abom04_Source = Rect( 3424.0, 11712.0, 3552.0, 11840.0 )
    set gg_rct_Exit_Aboms_Source = Rect( 2304.0, 11392.0, 3840.0, 12032.0 )
    set gg_rct_Exit_Arthas_Look_Here = Rect( 3040.0, 11200.0, 3104.0, 11264.0 )
    set gg_rct_Exit_Arthas_Start = Rect( 3008.0, 10976.0, 3136.0, 11104.0 )
    set gg_rct_Exit_Banshee01_MoveTarg = Rect( 2944.0, 11584.0, 3072.0, 11712.0 )
    set gg_rct_Exit_Banshee01_MoveTargB = Rect( 2944.0, 11296.0, 3072.0, 11424.0 )
    set gg_rct_Exit_Banshee01_Source = Rect( 2016.0, 11456.0, 2144.0, 11584.0 )
    set gg_rct_Exit_Banshee02_Source = Rect( 2080.0, 11328.0, 2208.0, 11456.0 )
    set gg_rct_Exit_Banshee03_Source = Rect( 3904.0, 11424.0, 4032.0, 11552.0 )
    set gg_rct_Exit_Banshee04_MoveTarg = Rect( 3072.0, 11584.0, 3200.0, 11712.0 )
    set gg_rct_Exit_Banshee04_MoveTargB = Rect( 3072.0, 11296.0, 3200.0, 11424.0 )
    set gg_rct_Exit_Banshee04_Source = Rect( 3936.0, 11552.0, 4064.0, 11680.0 )
    set gg_rct_Exit_CombatArea = Rect( 2304.0, 10624.0, 3840.0, 12160.0 )
    set gg_rct_Exit_VM = Rect( 2944.0, 10752.0, 3200.0, 11008.0 )
    set gg_rct_Fiend_Ambush_Fiend_Source = Rect( 2816.0, -2176.0, 3968.0, -896.0 )
    set gg_rct_Fiend_Ambush_TripwireA = Rect( 3136.0, -1920.0, 3968.0, -896.0 )
    set gg_rct_Fiend_Ambush_TripwireB = Rect( 2816.0, -2304.0, 3968.0, -1792.0 )
    set gg_rct_Fiend_Ambush_TripwireC = Rect( 3072.0, -1024.0, 3840.0, -768.0 )
    set gg_rct_Fountain_Elevator_Ping = Rect( 3776.0, -4032.0, 3904.0, -3904.0 )
    set gg_rct_Fountain_Elevator_VM = Rect( 3680.0, -4128.0, 4000.0, -3808.0 )
    set gg_rct_Fountain_Room_Plate = Rect( 1984.0, -2048.0, 2112.0, -1920.0 )
    set gg_rct_Gameplay_Arthas_Start = Rect( 704.0, -6016.0, 832.0, -5888.0 )
    set gg_rct_Hall_Patrol_01A = Rect( 4256.0, -2784.0, 4384.0, -2656.0 )
    set gg_rct_Hall_Patrol_01B = Rect( 4256.0, -2976.0, 4384.0, -2848.0 )
    set gg_rct_Hall_Patrol_01C = Rect( 4096.0, -2880.0, 4224.0, -2752.0 )
    set gg_rct_Hall_Patrol_02A = Rect( 4096.0, -2784.0, 4224.0, -2656.0 )
    set gg_rct_Hall_Patrol_02B = Rect( 4096.0, -2976.0, 4224.0, -2848.0 )
    set gg_rct_Hall_Patrol_02C = Rect( 4256.0, -2880.0, 4384.0, -2752.0 )
    set gg_rct_Hall_Patrol_03A = Rect( 2944.0, -2880.0, 3072.0, -2752.0 )
    set gg_rct_Hall_Patrol_03B = Rect( 2944.0, -3072.0, 3072.0, -2944.0 )
    set gg_rct_Hall_Patrol_03C = Rect( 3104.0, -2976.0, 3232.0, -2848.0 )
    set gg_rct_Hall_Patrol_04A = Rect( 1824.0, -2784.0, 1952.0, -2656.0 )
    set gg_rct_Hall_Patrol_04B = Rect( 1824.0, -2976.0, 1952.0, -2848.0 )
    set gg_rct_Hall_Patrol_04C = Rect( 1984.0, -2880.0, 2112.0, -2752.0 )
    set gg_rct_Hall_Patrol_05A = Rect( 1984.0, -2784.0, 2112.0, -2656.0 )
    set gg_rct_Hall_Patrol_05B = Rect( 1984.0, -2976.0, 2112.0, -2848.0 )
    set gg_rct_Hall_Patrol_05C = Rect( 1824.0, -2880.0, 1952.0, -2752.0 )
    set gg_rct_Hall_Patrol_06A = Rect( 3104.0, -2880.0, 3232.0, -2752.0 )
    set gg_rct_Hall_Patrol_06B = Rect( 3104.0, -3072.0, 3232.0, -2944.0 )
    set gg_rct_Hall_Patrol_06C = Rect( 2944.0, -2976.0, 3072.0, -2848.0 )
    set gg_rct_Hall_Patrol_SourceA = Rect( 3904.0, -2784.0, 4032.0, -2656.0 )
    set gg_rct_Hall_Patrol_SourceB = Rect( 3904.0, -2976.0, 4032.0, -2848.0 )
    set gg_rct_Hall_Patrol_SourceC = Rect( 3712.0, -2880.0, 3840.0, -2752.0 )
    set gg_rct_HardDifficultyCrate01 = Rect( 2528.0, 10016.0, 2720.0, 10208.0 )
    set gg_rct_HardDifficultyCrate02 = Rect( 3616.0, 9984.0, 3808.0, 10176.0 )
    set gg_rct_HardDifficultyCrate03 = Rect( 2336.0, 9184.0, 2624.0, 9376.0 )
    set gg_rct_HardDifficultyCrate04 = Rect( 3392.0, 9184.0, 3616.0, 9376.0 )
    set gg_rct_HardDifficultyUnit01 = Rect( 1152.0, -2752.0, 1312.0, -2592.0 )
    set gg_rct_HardDifficultyUnit02 = Rect( 704.0, -4256.0, 864.0, -4096.0 )
    set gg_rct_HardDifficultyUnit03 = Rect( 3328.0, -32.0, 3488.0, 128.0 )
    set gg_rct_HardDifficultyUnit04 = Rect( 5728.0, 2240.0, 5888.0, 2400.0 )
    set gg_rct_HardDifficultyUnit05 = Rect( 5344.0, 2336.0, 5504.0, 2496.0 )
    set gg_rct_HardDifficultyUnit06 = Rect( 5056.0, 2464.0, 5216.0, 2624.0 )
    set gg_rct_HardDifficultyUnit07 = Rect( 2816.0, 8544.0, 2976.0, 8704.0 )
    set gg_rct_HardDifficultyUnit08 = Rect( 3264.0, 8544.0, 3424.0, 8704.0 )
    set gg_rct_HardDifficultyUnit09 = Rect( 3680.0, 8544.0, 3840.0, 8704.0 )
    set gg_rct_HardDifficultyUnit10 = Rect( 2400.0, 8448.0, 2560.0, 8608.0 )
    set gg_rct_HardDifficultyUnit11 = Rect( 736.0, 8352.0, 896.0, 8512.0 )
    set gg_rct_HardDifficultyUnit12 = Rect( 576.0, 8032.0, 736.0, 8192.0 )
    set gg_rct_HardDifficultyUnit13 = Rect( 448.0, 8352.0, 608.0, 8512.0 )
    set gg_rct_HardDifficultyUnit14 = Rect( 5152.0, 8416.0, 5312.0, 8576.0 )
    set gg_rct_HardDifficultyUnit15 = Rect( 5344.0, 8064.0, 5504.0, 8224.0 )
    set gg_rct_HardDifficultyUnit16 = Rect( 5408.0, 8288.0, 5568.0, 8448.0 )
    set gg_rct_HardDifficultyUnit17 = Rect( 3200.0, 9952.0, 3328.0, 10080.0 )
    set gg_rct_HardDifficultyUnit18 = Rect( 2816.0, 9952.0, 2944.0, 10080.0 )
    set gg_rct_HardDifficultyUnit19 = Rect( 5792.0, -1696.0, 5952.0, -1536.0 )
    set gg_rct_HardDifficultyUnit20 = Rect( 3872.0, -8448.0, 4032.0, -8288.0 )
    set gg_rct_HardDifficultyUnit21 = Rect( 352.0, 1088.0, 512.0, 1248.0 )
    set gg_rct_HardDifficultyUnit22 = Rect( 544.0, 3200.0, 704.0, 3360.0 )
    set gg_rct_HardDifficultyUnit23 = Rect( 1024.0, 3200.0, 1184.0, 3360.0 )
    set gg_rct_HardDifficultyUnit24 = Rect( 800.0, 5888.0, 960.0, 6048.0 )
    set gg_rct_HardDifficultyUnit25 = Rect( 4928.0, 5312.0, 5088.0, 5472.0 )
    set gg_rct_Horsie_Attackers_MoveTarg = Rect( 2176.0, 2176.0, 2432.0, 2560.0 )
    set gg_rct_Horsie_Chaser_Source = Rect( 1920.0, 2944.0, 2048.0, 3072.0 )
    set gg_rct_Horsie_Corpses_Source = Rect( 1856.0, 2112.0, 2272.0, 2464.0 )
    set gg_rct_Horsie_Eaters_Source = Rect( 1824.0, 2144.0, 2112.0, 2496.0 )
    set gg_rct_Horsie_Runner_MoveTarg = Rect( 4544.0, 2816.0, 4672.0, 2944.0 )
    set gg_rct_Horsie_Runner_Source = Rect( 1984.0, 2688.0, 2112.0, 2816.0 )
    set gg_rct_Horsie_Scene_Tripwire = Rect( 2304.0, 1792.0, 2816.0, 2816.0 )
    set gg_rct_Horsie_Scene_Tripwire_Copy = Rect( 3072.0, 1792.0, 3584.0, 2688.0 )
    set gg_rct_Horsie_Scene_VTripwire = Rect( 1952.0, 2624.0, 2080.0, 2752.0 )
    set gg_rct_Intro_Arthas_Fights = Rect( 672.0, -6624.0, 864.0, -6432.0 )
    set gg_rct_Intro_Arthas_Go_Here = Rect( 672.0, -5344.0, 864.0, -5184.0 )
    set gg_rct_Intro_Arthas_Look_Here = Rect( 704.0, -6208.0, 832.0, -6080.0 )
    set gg_rct_Intro_Arthas_Through_Gate = Rect( 704.0, -5888.0, 832.0, -5760.0 )
    set gg_rct_Intro_Dreadlord_Ghouls = Rect( 0.0, -7264.0, 1472.0, -6560.0 )
    set gg_rct_Intro_Ghoul_Source01 = Rect( 320.0, -6080.0, 448.0, -5952.0 )
    set gg_rct_Intro_Ghoul_Source02 = Rect( 512.0, -6336.0, 640.0, -6208.0 )
    set gg_rct_Intro_Ghoul_Source03 = Rect( 896.0, -6336.0, 1024.0, -6208.0 )
    set gg_rct_Intro_Ghoul_Source04 = Rect( 1120.0, -6080.0, 1248.0, -5952.0 )
    set gg_rct_Intro_Kel_at_Gate = Rect( 672.0, -5600.0, 832.0, -5472.0 )
    set gg_rct_Intro_Kel_Go_Here = Rect( 672.0, -5152.0, 864.0, -4992.0 )
    set gg_rct_Intro_Necro_Final01 = Rect( 928.0, -5184.0, 1056.0, -5056.0 )
    set gg_rct_Intro_Necro_FInal02 = Rect( 448.0, -5184.0, 608.0, -5056.0 )
    set gg_rct_Intro_Necro_Go_Here01 = Rect( 960.0, -5440.0, 1088.0, -5312.0 )
    set gg_rct_Intro_Necro_Go_Here02 = Rect( 960.0, -4992.0, 1088.0, -4864.0 )
    set gg_rct_KelThuzad_Loot_01 = Rect( 256.0, -4864.0, 320.0, -4800.0 )
    set gg_rct_KelThuzad_Loot_02 = Rect( 320.0, -4864.0, 384.0, -4800.0 )
    set gg_rct_KelThuzad_Loot_03 = Rect( 256.0, -4928.0, 320.0, -4864.0 )
    set gg_rct_KelThuzad_Loot_04 = Rect( 320.0, -4928.0, 384.0, -4864.0 )
    set gg_rct_KelThuzad_Loot_05 = Rect( 256.0, -4992.0, 320.0, -4928.0 )
    set gg_rct_KelThuzad_Loot_06 = Rect( 320.0, -4992.0, 384.0, -4928.0 )
    set gg_rct_KelThuzad_Loot_Spawn = Rect( 384.0, -4960.0, 512.0, -4832.0 )
    set gg_rct_LOSBlockers_AbomRoom_Left = Rect( 2240.0, -5888.0, 2752.0, -5760.0 )
    set gg_rct_LOSBlockers_AbomRoom_Right = Rect( 3392.0, -5888.0, 3904.0, -5760.0 )
    set gg_rct_LOSBlockers_CourtyardDoor = Rect( 2816.0, 6016.0, 3328.0, 6144.0 )
    set gg_rct_LOSBlockers_ExitDoor = Rect( 2688.0, 10368.0, 3456.0, 10496.0 )
    set gg_rct_LOSBlockers_FountainRoom = Rect( 1792.0, -2496.0, 2304.0, -2368.0 )
    set gg_rct_LOSBlockers_GargoyleDoor = Rect( 3136.0, 1664.0, 3648.0, 1792.0 )
    set gg_rct_LOSBlockers_SpiderRoom = Rect( 2624.0, -1600.0, 2752.0, -1088.0 )
    set gg_rct_LOSBlockers_StartingDoor = Rect( 512.0, -5696.0, 1024.0, -5568.0 )
    set gg_rct_LOSBlockers_ThroneRoom = Rect( 512.0, -4672.0, 1024.0, -4544.0 )
    set gg_rct_LOSBlockers_WallSecret = Rect( 2080.0, -448.0, 2368.0, -64.0 )
    set gg_rct_Prison_Guard_SourceA = Rect( 5568.0, -3616.0, 5696.0, -3488.0 )
    set gg_rct_Prison_Guard_SourceB = Rect( 5568.0, -3776.0, 5696.0, -3648.0 )
    set gg_rct_Prison_Guards = Rect( 4736.0, -3968.0, 5760.0, -3328.0 )
    set gg_rct_Prison_Guards_AttackTargA = Rect( 5248.0, -3584.0, 5376.0, -3456.0 )
    set gg_rct_Prison_Guards_AttackTargB = Rect( 5248.0, -3808.0, 5376.0, -3680.0 )
    set gg_rct_Rescue_Abom_MoveTarg = Rect( 5696.0, -5280.0, 5824.0, -5152.0 )
    set gg_rct_Rescue_Abom_PanTarg = Rect( 5504.0, -5376.0, 5632.0, -5248.0 )
    set gg_rct_Rescue_Abom_Source = Rect( 5952.0, -5216.0, 6144.0, -5024.0 )
    set gg_rct_Rescue_Abom_TripwireA = Rect( 5376.0, -5376.0, 6144.0, -4864.0 )
    set gg_rct_Rescue_Abom_TripwireB = Rect( 5504.0, -5632.0, 6144.0, -5248.0 )
    set gg_rct_Rescue_CageA_MoveTarg = Rect( 5536.0, 5536.0, 5664.0, 5664.0 )
    set gg_rct_Rescue_CageA_Source = Rect( 5696.0, 5600.0, 5824.0, 5728.0 )
    set gg_rct_Rescue_CageB_MoveTarg = Rect( 5536.0, 5312.0, 5664.0, 5440.0 )
    set gg_rct_Rescue_CageB_Source = Rect( 5696.0, 5248.0, 5824.0, 5376.0 )
    set gg_rct_Rescue_Fiends_MoveTargA = Rect( 5824.0, -3616.0, 5952.0, -3488.0 )
    set gg_rct_Rescue_Fiends_MoveTargB = Rect( 5824.0, -3808.0, 5952.0, -3680.0 )
    set gg_rct_Rescue_Fiends_PanTarg = Rect( 5600.0, -3712.0, 5728.0, -3584.0 )
    set gg_rct_Rescue_Fiends_SourceA = Rect( 6016.0, -3424.0, 6208.0, -3232.0 )
    set gg_rct_Rescue_Fiends_SourceB = Rect( 6016.0, -4032.0, 6208.0, -3840.0 )
    set gg_rct_Rescue_Ghouls_MoveTargA = Rect( 320.0, -2400.0, 416.0, -2304.0 )
    set gg_rct_Rescue_Ghouls_MoveTargB = Rect( 288.0, -2592.0, 384.0, -2496.0 )
    set gg_rct_Rescue_Ghouls_PanTarg = Rect( 576.0, -2496.0, 704.0, -2368.0 )
    set gg_rct_Rescue_Ghouls_SourceA = Rect( 96.0, -2464.0, 256.0, -2304.0 )
    set gg_rct_Rescue_Ghouls_SourceB = Rect( 96.0, -2720.0, 256.0, -2560.0 )
    set gg_rct_Rescue_Ghouls_Tripwire = Rect( -128.0, -2816.0, 640.0, -2176.0 )
    set gg_rct_Rescue_Guys_MoveTargA = Rect( 4544.0, 256.0, 4640.0, 352.0 )
    set gg_rct_Rescue_Guys_MoveTargB = Rect( 4480.0, 96.0, 4576.0, 192.0 )
    set gg_rct_Rescue_Guys_PanTarg = Rect( 4608.0, 128.0, 4736.0, 256.0 )
    set gg_rct_Rescue_Guys_SourceA = Rect( 4288.0, 256.0, 4416.0, 384.0 )
    set gg_rct_Rescue_Guys_SourceB = Rect( 4192.0, 128.0, 4320.0, 256.0 )
    set gg_rct_Rescue_Guys_Tripwire = Rect( 4096.0, -128.0, 4864.0, 512.0 )
    set gg_rct_Rescue_Necro_MoveTargA = Rect( 1184.0, -5248.0, 1280.0, -5152.0 )
    set gg_rct_Rescue_Necro_MoveTargB = Rect( 1152.0, -5088.0, 1248.0, -4992.0 )
    set gg_rct_Rescue_Necro_MoveTargC = Rect( 1344.0, -5248.0, 1440.0, -5152.0 )
    set gg_rct_Rescue_Necro_MoveTargD = Rect( 1312.0, -5088.0, 1408.0, -4992.0 )
    set gg_rct_Rescue_Necro_PanTarg = Rect( 960.0, -5472.0, 1088.0, -5344.0 )
    set gg_rct_Rescue_Necro_SourceA = Rect( 1664.0, -5216.0, 1792.0, -5088.0 )
    set gg_rct_Rescue_Necro_SourceB = Rect( 1632.0, -5056.0, 1760.0, -4928.0 )
    set gg_rct_Rescue_Necro_SourceC = Rect( 1824.0, -5216.0, 1952.0, -5088.0 )
    set gg_rct_Rescue_Necro_SourceD = Rect( 1792.0, -5056.0, 1920.0, -4928.0 )
    set gg_rct_Rescue_Necro_Tripwire = Rect( 256.0, -5632.0, 1280.0, -4992.0 )
    set gg_rct_Rescue_Shade_PanTarg = Rect( 3008.0, -3264.0, 3136.0, -3136.0 )
    set gg_rct_Rescue_Shade_Source = Rect( 2976.0, -3296.0, 3168.0, -3104.0 )
    set gg_rct_Rescue_Shade_Tripwire = Rect( 2560.0, -3840.0, 3584.0, -2560.0 )
    set gg_rct_Rescue_Shelf_MoveTargA = Rect( 96.0, -192.0, 192.0, -96.0 )
    set gg_rct_Rescue_Shelf_MoveTargB = Rect( 128.0, -416.0, 224.0, -320.0 )
    set gg_rct_Rescue_Shelf_PanTarg = Rect( 96.0, -256.0, 224.0, -128.0 )
    set gg_rct_Rescue_Shelf_SourceA = Rect( -96.0, -256.0, 64.0, -96.0 )
    set gg_rct_Rescue_Shelf_SourceB = Rect( -64.0, -480.0, 96.0, -320.0 )
    set gg_rct_Rescue_Shelf_Tripwire = Rect( -128.0, -640.0, 384.0, 256.0 )
    set gg_rct_Rescue_Wagon_PanTarg = Rect( 352.0, -1216.0, 480.0, -1088.0 )
    set gg_rct_Rescue_WagonA_MoveTarg = Rect( 32.0, -1216.0, 128.0, -1120.0 )
    set gg_rct_Rescue_WagonA_Source = Rect( 0.0, -1408.0, 128.0, -1280.0 )
    set gg_rct_Rescue_WagonB_MoveTarg = Rect( 224.0, -1248.0, 320.0, -1152.0 )
    set gg_rct_Rescue_WagonB_Source = Rect( 256.0, -1472.0, 384.0, -1344.0 )
    set gg_rct_Skel_Ambush_MoveTarg = Rect( 3200.0, 2304.0, 3456.0, 2560.0 )
    set gg_rct_Skel_Ambush_SampleA = Rect( 3200.0, 1216.0, 3328.0, 1344.0 )
    set gg_rct_Skel_Ambush_SampleB = Rect( 3456.0, 1216.0, 3584.0, 1344.0 )
    set gg_rct_Skel_Ambush_SampleC = Rect( 3328.0, 1472.0, 3456.0, 1600.0 )
    set gg_rct_Skel_Ambush_Units_Source = Rect( 3200.0, 1216.0, 3584.0, 1600.0 )
    set gg_rct_Victory_Tripwire = Rect( 2432.0, 10752.0, 3712.0, 11008.0 )
    set gg_rct_Vision_AChurch = Rect( 2240.0, 512.0, 2368.0, 640.0 )
    set gg_rct_Vision_AChurch_SourceA = Rect( 1792.0, 192.0, 1920.0, 320.0 )
    set gg_rct_Vision_AChurch_SourceB = Rect( 2432.0, 128.0, 2560.0, 256.0 )
    set gg_rct_Vision_Bloodfeast_VM = Rect( 3008.0, 9664.0, 3136.0, 9792.0 )
    set gg_rct_Vision_Bridge_Tripwire = Rect( 2752.0, -1664.0, 2944.0, -1024.0 )
    set gg_rct_Vision_Bridge_VM = Rect( 3072.0, -1024.0, 3712.0, -640.0 )
    set gg_rct_Vision_Nook_Source = Rect( 3872.0, 1440.0, 3968.0, 1536.0 )
    set gg_rct_Vision_Nook_VM = Rect( 3968.0, 1664.0, 4096.0, 1856.0 )
    set gg_rct_Vision_Prison_Source = Rect( 5952.0, -3712.0, 6080.0, -3584.0 )
    set gg_rct_Vision_PrisonA_VM = Rect( 6048.0, -3392.0, 6144.0, -3296.0 )
    set gg_rct_Vision_PrisonB_VM = Rect( 6048.0, -3968.0, 6144.0, -3872.0 )
    set gg_rct_Vision_WallSecret_Source = Rect( 2336.0, -320.0, 2464.0, -128.0 )
    set gg_rct_VSource_Bridge_Plate_A = Rect( 2848.0, -672.0, 2912.0, -608.0 )
    set gg_rct_VSource_Bridge_Plate_B = Rect( 3872.0, -672.0, 3936.0, -608.0 )
    set gg_rct_VSource_Bridge_Plate_C = Rect( 3808.0, -2080.0, 3872.0, -2016.0 )
    set gg_rct_VSource_Fountain_Plate = Rect( 2016.0, -2016.0, 2080.0, -1952.0 )
    set gg_rct_Wave_Source_01A = Rect( 512.0, -7296.0, 640.0, -7168.0 )
    set gg_rct_Wave_Source_01B = Rect( 896.0, -7296.0, 1024.0, -7168.0 )
    set gg_rct_Wave_Source_02A = Rect( 3392.0, -7040.0, 3520.0, -6912.0 )
    set gg_rct_Wave_Source_02B = Rect( 3648.0, -7040.0, 3776.0, -6912.0 )
    set gg_rct_Wave_Source_03A = Rect( 0.0, -2560.0, 128.0, -2432.0 )
    set gg_rct_Wave_Source_03B = Rect( 256.0, -2816.0, 384.0, -2688.0 )
    set gg_rct_Wave_Source_04A = Rect( 3072.0, -2304.0, 3200.0, -2176.0 )
    set gg_rct_Wave_Source_04B = Rect( 3712.0, -2304.0, 3840.0, -2176.0 )
    set gg_rct_Wave_Source_05A = Rect( 2304.0, 896.0, 2432.0, 1024.0 )
    set gg_rct_Wave_Source_05B = Rect( 2464.0, 896.0, 2592.0, 1024.0 )
    set gg_rct_Wave_Source_06A = Rect( 1536.0, 3712.0, 1664.0, 3840.0 )
    set gg_rct_Wave_Source_06B = Rect( 1664.0, 3712.0, 1792.0, 3840.0 )
    set gg_rct_Wave_Source_07A = Rect( 2528.0, 6368.0, 2656.0, 6496.0 )
    set gg_rct_Wave_Source_07B = Rect( 3488.0, 6368.0, 3616.0, 6496.0 )
    set gg_rct_Wave_Source_A = Rect( 512.0, -7296.0, 640.0, -7168.0 )
    set gg_rct_Wave_Source_B = Rect( 896.0, -7296.0, 1024.0, -7168.0 )
    set gg_rct_Wave_Source_Tripwire_01A = Rect( 2656.0, -4864.0, 3488.0, -4608.0 )
    set gg_rct_Wave_Source_Tripwire_01B = Rect( 4704.0, -4992.0, 5536.0, -4736.0 )
    set gg_rct_Wave_Source_Tripwire_02A = Rect( 2656.0, -4288.0, 3488.0, -4032.0 )
    set gg_rct_Wave_Source_Tripwire_02B = Rect( 4704.0, -4352.0, 5536.0, -4096.0 )
    set gg_rct_Wave_Source_Tripwire_02C = Rect( 1344.0, -1696.0, 1600.0, -992.0 )
    set gg_rct_Wave_Source_Tripwire_03A = Rect( 2176.0, -1696.0, 2432.0, -992.0 )
    set gg_rct_Wave_Source_Tripwire_03B = Rect( 3008.0, -1088.0, 3776.0, -832.0 )
    set gg_rct_Wave_Source_Tripwire_04A = Rect( 3040.0, 512.0, 3744.0, 768.0 )
    set gg_rct_Wave_Source_Tripwire_04B = Rect( 896.0, 1792.0, 1280.0, 2304.0 )
    set gg_rct_Wave_Source_Tripwire_04C = Rect( 640.0, 1664.0, 1152.0, 2048.0 )
    set gg_rct_Wave_Source_Tripwire_05A = Rect( 224.0, 2944.0, 1440.0, 3200.0 )
    set gg_rct_Wave_Source_Tripwire_05B = Rect( 2560.0, 3744.0, 2816.0, 4384.0 )
    set gg_rct_Wave_Source_Tripwire_06A = Rect( 2688.0, 4736.0, 3456.0, 4992.0 )
    set gg_rct_Wave_Source_Tripwire_06B = Rect( 2048.0, 7648.0, 2304.0, 8864.0 )
    set gg_rct_Wave_Source_Tripwire_06C = Rect( 3840.0, 7648.0, 4096.0, 8864.0 )
    set gg_rct_Wave_Source_Tripwire_07A = Rect( 1280.0, 7648.0, 1536.0, 8608.0 )
    set gg_rct_Wave_Source_Tripwire_07B = Rect( 4608.0, 7648.0, 4864.0, 8608.0 )
    set gg_rct_Wave_Start_TripwireA = Rect( 2272.0, -6080.0, 2720.0, -5824.0 )
    set gg_rct_Wave_Start_TripwireB = Rect( 3424.0, -6080.0, 3872.0, -5824.0 )
    set gg_rct_Wave_Start_TripwireC = Rect( 2752.0, -4512.0, 3360.0, -4256.0 )
    set gg_rct_Wave_Start_TripwireD = Rect( 3968.0, -5664.0, 4224.0, -4704.0 )
    set gg_rct_Wave_Type_Tripwire_01A = Rect( 736.0, -2304.0, 1440.0, -2048.0 )
    set gg_rct_Wave_Type_Tripwire_01B = Rect( 640.0, -2848.0, 896.0, -2144.0 )
    set gg_rct_Wave_Type_Tripwire_01C = Rect( 5760.0, -3968.0, 5952.0, -3328.0 )
    set gg_rct_Wave_Type_Tripwire_02A = Rect( 3040.0, 384.0, 3744.0, 640.0 )
    set gg_rct_Wave_Type_Tripwire_03A = Rect( 224.0, 2432.0, 1312.0, 2688.0 )
    set gg_rct_Wave_Type_Tripwire_04A = Rect( 2176.0, 7552.0, 2848.0, 7808.0 )
    set gg_rct_Wave_Type_Tripwire_04B = Rect( 3296.0, 7552.0, 3968.0, 7808.0 )
    set gg_rct_Zombie_Group_A = Rect( 3584.0, -8608.0, 4128.0, -8064.0 )
endfunction

//***************************************************************************
//*
//*  Cameras
//*
//***************************************************************************

function CreateCameras takes nothing returns nothing

    set gg_cam_Camera_009 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_009, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_009, CAMERA_FIELD_ROTATION, 189.4, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_009, CAMERA_FIELD_ANGLE_OF_ATTACK, 318.6, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_009, CAMERA_FIELD_TARGET_DISTANCE, 1127.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_009, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_009, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_009, CAMERA_FIELD_FARZ, 7320.5, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_009, 801.2, -9704.3, 0.0 )

    set gg_cam_Camera_010 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_010, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_010, CAMERA_FIELD_ROTATION, 189.4, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_010, CAMERA_FIELD_ANGLE_OF_ATTACK, 318.6, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_010, CAMERA_FIELD_TARGET_DISTANCE, 1127.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_010, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_010, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_010, CAMERA_FIELD_FARZ, 7320.5, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_010, 1632.2, -8641.2, 0.0 )

    set gg_cam_Camera_011 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_011, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_011, CAMERA_FIELD_ROTATION, 196.6, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_011, CAMERA_FIELD_ANGLE_OF_ATTACK, 347.1, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_011, CAMERA_FIELD_TARGET_DISTANCE, 1024.5, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_011, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_011, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_011, CAMERA_FIELD_FARZ, 7320.5, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_011, 639.9, -6878.8, 0.0 )

    set gg_cam_Camera_012 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_012, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_012, CAMERA_FIELD_ROTATION, 196.6, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_012, CAMERA_FIELD_ANGLE_OF_ATTACK, 347.1, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_012, CAMERA_FIELD_TARGET_DISTANCE, 1024.5, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_012, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_012, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_012, CAMERA_FIELD_FARZ, 7320.5, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_012, 549.8, -6205.9, 0.0 )

    set gg_cam_Camera_013 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_013, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_013, CAMERA_FIELD_ROTATION, 243.7, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_013, CAMERA_FIELD_ANGLE_OF_ATTACK, 326.1, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_013, CAMERA_FIELD_TARGET_DISTANCE, 1363.6, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_013, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_013, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_013, CAMERA_FIELD_FARZ, 7320.5, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_013, 754.9, -6601.0, 0.0 )

    set gg_cam_Camera_014 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_014, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_014, CAMERA_FIELD_ROTATION, 259.9, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_014, CAMERA_FIELD_ANGLE_OF_ATTACK, 9.5, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_014, CAMERA_FIELD_TARGET_DISTANCE, 3890.6, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_014, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_014, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_014, CAMERA_FIELD_FARZ, 7320.5, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_014, 441.3, -10066.7, 0.0 )

    set gg_cam_Camera_015 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_015, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_015, CAMERA_FIELD_ROTATION, 290.7, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_015, CAMERA_FIELD_ANGLE_OF_ATTACK, 345.1, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_015, CAMERA_FIELD_TARGET_DISTANCE, 1996.5, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_015, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_015, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_015, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_015, 745.6, -7109.2, 0.0 )

    set gg_cam_Camera_016 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_016, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_016, CAMERA_FIELD_ROTATION, 179.9, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_016, CAMERA_FIELD_ANGLE_OF_ATTACK, 345.7, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_016, CAMERA_FIELD_TARGET_DISTANCE, 3536.9, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_016, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_016, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_016, CAMERA_FIELD_FARZ, 5500.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_016, 332.1, -8991.4, 0.0 )

    set gg_cam_Camera_017 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_017, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_017, CAMERA_FIELD_ROTATION, 119.3, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_017, CAMERA_FIELD_ANGLE_OF_ATTACK, 340.8, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_017, CAMERA_FIELD_TARGET_DISTANCE, 2657.3, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_017, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_017, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_017, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_017, 4811.8, -4540.1, 0.0 )

    set gg_cam_Camera_018 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_018, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_018, CAMERA_FIELD_ROTATION, 119.3, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_018, CAMERA_FIELD_ANGLE_OF_ATTACK, 340.8, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_018, CAMERA_FIELD_TARGET_DISTANCE, 2657.3, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_018, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_018, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_018, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_018, 4844.0, -1784.4, 0.0 )

    set gg_cam_Camera_019 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_019, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_019, CAMERA_FIELD_ROTATION, 225.6, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_019, CAMERA_FIELD_ANGLE_OF_ATTACK, 344.3, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_019, CAMERA_FIELD_TARGET_DISTANCE, 4279.7, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_019, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_019, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_019, CAMERA_FIELD_FARZ, 6050.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_019, 2340.2, 8317.0, 0.0 )

    set gg_cam_Exit_B01 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Exit_B01, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Exit_B01, CAMERA_FIELD_ROTATION, 84.0, 0.0 )
    call CameraSetupSetField( gg_cam_Exit_B01, CAMERA_FIELD_ANGLE_OF_ATTACK, 328.3, 0.0 )
    call CameraSetupSetField( gg_cam_Exit_B01, CAMERA_FIELD_TARGET_DISTANCE, 954.3, 0.0 )
    call CameraSetupSetField( gg_cam_Exit_B01, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Exit_B01, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Exit_B01, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Exit_B01, 3060.8, 11243.8, 0.0 )

    set gg_cam_Fountain_Elevator_Shot = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Fountain_Elevator_Shot, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Fountain_Elevator_Shot, CAMERA_FIELD_ROTATION, 12.9, 0.0 )
    call CameraSetupSetField( gg_cam_Fountain_Elevator_Shot, CAMERA_FIELD_ANGLE_OF_ATTACK, 323.4, 0.0 )
    call CameraSetupSetField( gg_cam_Fountain_Elevator_Shot, CAMERA_FIELD_TARGET_DISTANCE, 1081.6, 0.0 )
    call CameraSetupSetField( gg_cam_Fountain_Elevator_Shot, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Fountain_Elevator_Shot, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Fountain_Elevator_Shot, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Fountain_Elevator_Shot, 3700.1, -3895.3, 0.0 )

    set gg_cam_Intro_01 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro_01, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_01, CAMERA_FIELD_ROTATION, 205.7, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_01, CAMERA_FIELD_ANGLE_OF_ATTACK, 349.8, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_01, CAMERA_FIELD_TARGET_DISTANCE, 2923.1, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_01, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_01, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_01, CAMERA_FIELD_FARZ, 7320.5, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro_01, 1532.0, -8525.6, 0.0 )

    set gg_cam_OLD_Intro_01 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_OLD_Intro_01, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_01, CAMERA_FIELD_ROTATION, 125.4, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_01, CAMERA_FIELD_ANGLE_OF_ATTACK, 334.8, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_01, CAMERA_FIELD_TARGET_DISTANCE, 600.9, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_01, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_01, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_01, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_OLD_Intro_01, 725.8, -6578.3, 0.0 )

    set gg_cam_OLD_Intro_02 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_OLD_Intro_02, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_02, CAMERA_FIELD_ROTATION, 153.4, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_02, CAMERA_FIELD_ANGLE_OF_ATTACK, 336.5, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_02, CAMERA_FIELD_TARGET_DISTANCE, 701.4, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_02, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_02, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_02, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_OLD_Intro_02, 723.5, -6551.1, 0.0 )

    set gg_cam_OLD_Intro_03 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_OLD_Intro_03, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_03, CAMERA_FIELD_ROTATION, 293.1, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_03, CAMERA_FIELD_ANGLE_OF_ATTACK, 326.0, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_03, CAMERA_FIELD_TARGET_DISTANCE, 845.0, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_03, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_03, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_03, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_OLD_Intro_03, 770.8, -7673.7, 0.0 )

    set gg_cam_OLD_Intro_Skipped = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_OLD_Intro_Skipped, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_Skipped, CAMERA_FIELD_ROTATION, 90.0, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_Skipped, CAMERA_FIELD_ANGLE_OF_ATTACK, 304.0, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_Skipped, CAMERA_FIELD_TARGET_DISTANCE, 1650.0, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_Skipped, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_Skipped, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_OLD_Intro_Skipped, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_OLD_Intro_Skipped, 768.0, -5952.0, 0.0 )

    set gg_cam_Intro_Hall01 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro_Hall01, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall01, CAMERA_FIELD_ROTATION, 217.6, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall01, CAMERA_FIELD_ANGLE_OF_ATTACK, 319.9, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall01, CAMERA_FIELD_TARGET_DISTANCE, 1293.9, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall01, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall01, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall01, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro_Hall01, 3147.7, -5189.4, 0.0 )

    set gg_cam_Intro_Hall02 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro_Hall02, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall02, CAMERA_FIELD_ROTATION, 217.6, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall02, CAMERA_FIELD_ANGLE_OF_ATTACK, 319.9, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall02, CAMERA_FIELD_TARGET_DISTANCE, 1293.9, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall02, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall02, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall02, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro_Hall02, 1786.8, -5227.4, 0.0 )

    set gg_cam_Intro_Hall03 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro_Hall03, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall03, CAMERA_FIELD_ROTATION, 0.3, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall03, CAMERA_FIELD_ANGLE_OF_ATTACK, 315.1, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall03, CAMERA_FIELD_TARGET_DISTANCE, 1061.4, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall03, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall03, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall03, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro_Hall03, 999.3, -5116.0, 0.0 )

    set gg_cam_Intro_Hall04 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro_Hall04, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall04, CAMERA_FIELD_ROTATION, 0.3, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall04, CAMERA_FIELD_ANGLE_OF_ATTACK, 332.1, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall04, CAMERA_FIELD_TARGET_DISTANCE, 1061.4, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall04, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall04, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Hall04, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro_Hall04, 428.3, -5116.0, 0.0 )

    set gg_cam_Victory_01 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Victory_01, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Victory_01, CAMERA_FIELD_ROTATION, 179.4, 0.0 )
    call CameraSetupSetField( gg_cam_Victory_01, CAMERA_FIELD_ANGLE_OF_ATTACK, 328.1, 0.0 )
    call CameraSetupSetField( gg_cam_Victory_01, CAMERA_FIELD_TARGET_DISTANCE, 812.2, 0.0 )
    call CameraSetupSetField( gg_cam_Victory_01, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Victory_01, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Victory_01, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Victory_01, 310.5, -5091.9, 0.0 )

    set gg_cam_Intro_Arthas_Gate = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro_Arthas_Gate, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Arthas_Gate, CAMERA_FIELD_ROTATION, 134.2, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Arthas_Gate, CAMERA_FIELD_ANGLE_OF_ATTACK, 317.2, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Arthas_Gate, CAMERA_FIELD_TARGET_DISTANCE, 1061.4, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Arthas_Gate, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Arthas_Gate, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Arthas_Gate, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro_Arthas_Gate, 744.3, -5546.2, 0.0 )

    set gg_cam_Intro_Dread_Brothers = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers, CAMERA_FIELD_ROTATION, 252.8, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers, CAMERA_FIELD_ANGLE_OF_ATTACK, 0.1, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers, CAMERA_FIELD_TARGET_DISTANCE, 366.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro_Dread_Brothers, 855.2, -6004.6, 0.0 )

    set gg_cam_Intro_Dread_Brothers02 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers02, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers02, CAMERA_FIELD_ROTATION, 269.2, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers02, CAMERA_FIELD_ANGLE_OF_ATTACK, 346.1, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers02, CAMERA_FIELD_TARGET_DISTANCE, 1353.8, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers02, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers02, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers02, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro_Dread_Brothers02, 746.1, -7219.7, 0.0 )

    set gg_cam_Intro_Dread_Brothers03 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers03, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers03, CAMERA_FIELD_ROTATION, 271.4, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers03, CAMERA_FIELD_ANGLE_OF_ATTACK, 353.5, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers03, CAMERA_FIELD_TARGET_DISTANCE, 1220.2, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers03, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers03, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Dread_Brothers03, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro_Dread_Brothers03, 804.7, -6823.2, 0.0 )

    set gg_cam_Intro_Gate_Slam = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro_Gate_Slam, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Gate_Slam, CAMERA_FIELD_ROTATION, 90.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Gate_Slam, CAMERA_FIELD_ANGLE_OF_ATTACK, 322.9, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Gate_Slam, CAMERA_FIELD_TARGET_DISTANCE, 1061.4, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Gate_Slam, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Gate_Slam, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Gate_Slam, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro_Gate_Slam, 744.3, -5546.2, 0.0 )

    set gg_cam_Intro_Arthas_GAte02 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro_Arthas_GAte02, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Arthas_GAte02, CAMERA_FIELD_ROTATION, 141.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Arthas_GAte02, CAMERA_FIELD_ANGLE_OF_ATTACK, 315.5, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Arthas_GAte02, CAMERA_FIELD_TARGET_DISTANCE, 1061.4, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Arthas_GAte02, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Arthas_GAte02, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Arthas_GAte02, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro_Arthas_GAte02, 770.1, -5628.5, 0.0 )

    set gg_cam_Exit02 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Exit02, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Exit02, CAMERA_FIELD_ROTATION, 328.7, 0.0 )
    call CameraSetupSetField( gg_cam_Exit02, CAMERA_FIELD_ANGLE_OF_ATTACK, 321.9, 0.0 )
    call CameraSetupSetField( gg_cam_Exit02, CAMERA_FIELD_TARGET_DISTANCE, 954.3, 0.0 )
    call CameraSetupSetField( gg_cam_Exit02, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Exit02, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Exit02, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Exit02, 3000.1, 11417.3, 0.0 )

    set gg_cam_Exit03 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Exit03, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Exit03, CAMERA_FIELD_ROTATION, 285.1, 0.0 )
    call CameraSetupSetField( gg_cam_Exit03, CAMERA_FIELD_ANGLE_OF_ATTACK, 327.0, 0.0 )
    call CameraSetupSetField( gg_cam_Exit03, CAMERA_FIELD_TARGET_DISTANCE, 954.3, 0.0 )
    call CameraSetupSetField( gg_cam_Exit03, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Exit03, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Exit03, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Exit03, 3000.1, 11417.3, 0.0 )

endfunction

//***************************************************************************
//*
//*  Triggers
//*
//***************************************************************************

//===========================================================================
// Trigger: Initialization
//===========================================================================
function Trig_Initialization_Actions takes nothing returns nothing
    call SetCampaignMenuRaceBJ( bj_CAMPAIGN_INDEX_XU )
    call SetAllyColorFilterState( 0 )
    call ConditionalTriggerExecute( gg_trg_Init_01_Players )
    call ConditionalTriggerExecute( gg_trg_Init_02_RegionsToPoints )
    call ConditionalTriggerExecute( gg_trg_Init_03a_Player_Units )
    call ConditionalTriggerExecute( gg_trg_Init_03b_Enemy_Units )
    call ConditionalTriggerExecute( gg_trg_Init_03c_Scene_Units )
    call ConditionalTriggerExecute( gg_trg_Init_03d_Cinematic_Units )
    call ConditionalTriggerExecute( gg_trg_Init_04_Music )
    call ConditionalTriggerExecute( gg_trg_Init_05_Sounds )
    call ConditionalTriggerExecute( gg_trg_Init_06a_Environment )
    call ConditionalTriggerExecute( gg_trg_Init_06b_Elevators )
    call ConditionalTriggerExecute( gg_trg_Init_06c_Vision )
    call ConditionalTriggerExecute( gg_trg_Init_07_Quests )
    call ConditionalTriggerExecute( gg_trg_Init_08a_Hard )
    call ConditionalTriggerExecute( gg_trg_Init_08b_Normal )
    call ConditionalTriggerExecute( gg_trg_Init_08c_Easy )
    // Start Intro Cinematic
    call QueuedTriggerAddBJ( gg_trg_Intro_Cinematic_Q, true )
endfunction

//===========================================================================
function InitTrig_Initialization takes nothing returns nothing
    set gg_trg_Initialization = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Initialization, function Trig_Initialization_Actions )
endfunction

//===========================================================================
// Trigger: Init 01 Players
//===========================================================================
function Trig_Init_01_Players_Actions takes nothing returns nothing
    // Alliance Settings
    call SetForceAllianceStateBJ( GetPlayersAll(), GetPlayersAll(), bj_ALLIANCE_NEUTRAL )
    call SetPlayerAllianceStateBJ( udg_AP1_Player, udg_P7_Dreadlords, bj_ALLIANCE_UNALLIED )
    call SetPlayerAllianceStateBJ( udg_AP1_Player, Player(PLAYER_NEUTRAL_AGGRESSIVE), bj_ALLIANCE_UNALLIED )
    call SetPlayerAllianceStateBJ( udg_P7_Dreadlords, udg_AP1_Player, bj_ALLIANCE_UNALLIED )
    call SetPlayerAllianceStateBJ( udg_P7_Dreadlords, udg_P8_KelThuzad, bj_ALLIANCE_UNALLIED )
    call SetPlayerAllianceStateBJ( udg_P8_KelThuzad, udg_P7_Dreadlords, bj_ALLIANCE_UNALLIED )
    call SetPlayerAllianceStateBJ( Player(PLAYER_NEUTRAL_AGGRESSIVE), udg_AP1_Player, bj_ALLIANCE_UNALLIED )
    call SetPlayerAllianceStateBJ( Player(PLAYER_NEUTRAL_PASSIVE), udg_AP1_Player, bj_ALLIANCE_ALLIED )
    // Initial Resources
    call SetPlayerStateBJ( udg_AP1_Player, PLAYER_STATE_RESOURCE_GOLD, 0 )
    call SetPlayerStateBJ( udg_AP1_Player, PLAYER_STATE_RESOURCE_LUMBER, 0 )
    // Player Colors
    call SetPlayerColorBJ( udg_AP1_Player, PLAYER_COLOR_PURPLE, true )
    call SetPlayerColorBJ( udg_P2_Rescuables, PLAYER_COLOR_YELLOW, true )
    call SetPlayerColorBJ( udg_P5_Sylvanas, PLAYER_COLOR_PURPLE, true )
    call SetPlayerColorBJ( udg_P7_Dreadlords, PLAYER_COLOR_GREEN, true )
    call SetPlayerColorBJ( udg_P8_KelThuzad, PLAYER_COLOR_PURPLE, true )
    // Hide Excess Players
    call SetPlayerOnScoreScreenBJ( false, udg_P2_Rescuables )
    call SetPlayerOnScoreScreenBJ( false, udg_P5_Sylvanas )
    call SetPlayerOnScoreScreenBJ( false, udg_P8_KelThuzad )
    // Disable Abilities
endfunction

//===========================================================================
function InitTrig_Init_01_Players takes nothing returns nothing
    set gg_trg_Init_01_Players = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_01_Players, function Trig_Init_01_Players_Actions )
endfunction

//===========================================================================
// Trigger: Init 02 RegionsToPoints
//===========================================================================
function Trig_Init_02_RegionsToPoints_Actions takes nothing returns nothing
    set udg_PointCorpsePile01 = GetRectCenter(gg_rct_Corpse_Pile_01)
    set udg_PointCorpsePile02 = GetRectCenter(gg_rct_Corpse_Pile_02)
    set udg_PointCorpsePile03 = GetRectCenter(gg_rct_Corpse_Pile_03)
    set udg_PointWaveSource01A = GetRectCenter(gg_rct_Wave_Source_01A)
    set udg_PointWaveSource01B = GetRectCenter(gg_rct_Wave_Source_01B)
    set udg_PointWaveSource02A = GetRectCenter(gg_rct_Wave_Source_02A)
    set udg_PointWaveSource02B = GetRectCenter(gg_rct_Wave_Source_02B)
    set udg_PointWaveSource03A = GetRectCenter(gg_rct_Wave_Source_03A)
    set udg_PointWaveSource03B = GetRectCenter(gg_rct_Wave_Source_03B)
    set udg_PointWaveSource04A = GetRectCenter(gg_rct_Wave_Source_04A)
    set udg_PointWaveSource04B = GetRectCenter(gg_rct_Wave_Source_04B)
    set udg_PointWaveSource05A = GetRectCenter(gg_rct_Wave_Source_05A)
    set udg_PointWaveSource05B = GetRectCenter(gg_rct_Wave_Source_05B)
    set udg_PointWaveSource06A = GetRectCenter(gg_rct_Wave_Source_06A)
    set udg_PointWaveSource06B = GetRectCenter(gg_rct_Wave_Source_06B)
    set udg_PointWaveSource07A = GetRectCenter(gg_rct_Wave_Source_07A)
    set udg_PointWaveSource07B = GetRectCenter(gg_rct_Wave_Source_07B)
    set udg_PointCryptLeftSpawn = GetRectCenter(gg_rct_CryptLeft_Spawn_Point)
    set udg_PointCryptRightSpawn = GetRectCenter(gg_rct_CryptRight_Spawn_Point)
    set udg_PointHallPatrol01A = GetRectCenter(gg_rct_Hall_Patrol_01A)
    set udg_PointHallPatrol01B = GetRectCenter(gg_rct_Hall_Patrol_01B)
    set udg_PointHallPatrol01C = GetRectCenter(gg_rct_Hall_Patrol_01C)
    set udg_PointHallPatrol02A = GetRectCenter(gg_rct_Hall_Patrol_02A)
    set udg_PointHallPatrol02B = GetRectCenter(gg_rct_Hall_Patrol_02B)
    set udg_PointHallPatrol02C = GetRectCenter(gg_rct_Hall_Patrol_02C)
    set udg_PointHallPatrol03A = GetRectCenter(gg_rct_Hall_Patrol_03A)
    set udg_PointHallPatrol03B = GetRectCenter(gg_rct_Hall_Patrol_03B)
    set udg_PointHallPatrol03C = GetRectCenter(gg_rct_Hall_Patrol_03C)
    set udg_PointHallPatrol04A = GetRectCenter(gg_rct_Hall_Patrol_04A)
    set udg_PointHallPatrol04B = GetRectCenter(gg_rct_Hall_Patrol_04B)
    set udg_PointHallPatrol04C = GetRectCenter(gg_rct_Hall_Patrol_04C)
    set udg_PointHallPatrol05A = GetRectCenter(gg_rct_Hall_Patrol_05A)
    set udg_PointHallPatrol05B = GetRectCenter(gg_rct_Hall_Patrol_05B)
    set udg_PointHallPatrol05C = GetRectCenter(gg_rct_Hall_Patrol_05C)
    set udg_PointHallPatrol06A = GetRectCenter(gg_rct_Hall_Patrol_06A)
    set udg_PointHallPatrol06B = GetRectCenter(gg_rct_Hall_Patrol_06B)
    set udg_PointHallPatrol06C = GetRectCenter(gg_rct_Hall_Patrol_06C)
    set udg_PointVisionAChurch = GetRectCenter(gg_rct_Vision_AChurch)
endfunction

//===========================================================================
function InitTrig_Init_02_RegionsToPoints takes nothing returns nothing
    set gg_trg_Init_02_RegionsToPoints = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_02_RegionsToPoints, function Trig_Init_02_RegionsToPoints_Actions )
endfunction

//===========================================================================
// Trigger: Init 03a Player Units
//===========================================================================
function Trig_Init_03a_Player_Units_Actions takes nothing returns nothing
    // Heroes
    call ConditionalTriggerExecute( gg_trg_Load_Heroes )
    call SetPlayerHandicapXPBJ( udg_AP1_Player, 75.00 )
    call SetPlayerHandicapXPBJ( udg_P7_Dreadlords, 0.00 )
    // Neutral Buildings
    set udg_Marketplace = gg_unit_u001_0071
    call ConditionalTriggerExecute( gg_trg_Marketplace_Config )
    // Rescuables
    set udg_RescueNecroA = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Rescue_Necro_SourceA, udg_P2_Rescuables))
    set udg_RescueNecroB = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Rescue_Necro_SourceB, udg_P2_Rescuables))
    set udg_RescueNecroC = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Rescue_Necro_SourceC, udg_P2_Rescuables))
    set udg_RescueNecroD = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Rescue_Necro_SourceD, udg_P2_Rescuables))
    set udg_RescueAbom = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Rescue_Abom_Source, udg_P2_Rescuables))
    set udg_RescueShade = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Rescue_Shade_Source, udg_P2_Rescuables))
    set udg_RescueFiendA = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Rescue_Fiends_SourceA, udg_P2_Rescuables))
    set udg_RescueFiendB = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Rescue_Fiends_SourceB, udg_P2_Rescuables))
    set udg_RescueGhoulA = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Rescue_Ghouls_SourceA, udg_P2_Rescuables))
    set udg_RescueGhoulB = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Rescue_Ghouls_SourceB, udg_P2_Rescuables))
    set udg_RescueShelfA = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Rescue_Shelf_SourceA, udg_P2_Rescuables))
    set udg_RescueShelfB = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Rescue_Shelf_SourceB, udg_P2_Rescuables))
    set udg_RescueGuyA = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Rescue_Guys_SourceA, udg_P2_Rescuables))
    set udg_RescueGuyB = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Rescue_Guys_SourceB, udg_P2_Rescuables))
    set udg_RescueWagonA = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Rescue_WagonA_Source, udg_P2_Rescuables))
    set udg_RescueWagonB = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Rescue_WagonB_Source, udg_P2_Rescuables))
endfunction

//===========================================================================
function InitTrig_Init_03a_Player_Units takes nothing returns nothing
    set gg_trg_Init_03a_Player_Units = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_03a_Player_Units, function Trig_Init_03a_Player_Units_Actions )
endfunction

//===========================================================================
// Trigger: Init 03b Enemy Units
//===========================================================================
function Trig_Init_03b_Enemy_Units_Func002A takes nothing returns nothing
    call SetUnitAcquireRangeBJ( GetEnumUnit(), 700.00 )
endfunction

function Trig_Init_03b_Enemy_Units_Func007002 takes nothing returns nothing
    call ShowUnitHide( GetEnumUnit() )
endfunction

function Trig_Init_03b_Enemy_Units_Func008002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_P7_Dreadlords )
endfunction

function Trig_Init_03b_Enemy_Units_Func008002002002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'ucry' )
endfunction

function Trig_Init_03b_Enemy_Units_Func008002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Init_03b_Enemy_Units_Func008002002001(), Trig_Init_03b_Enemy_Units_Func008002002002() )
endfunction

function Trig_Init_03b_Enemy_Units_Func009002 takes nothing returns nothing
    call ShowUnitHide( GetEnumUnit() )
endfunction

function Trig_Init_03b_Enemy_Units_Func011002 takes nothing returns nothing
    call ShowUnitHide( GetEnumUnit() )
endfunction

function Trig_Init_03b_Enemy_Units_Actions takes nothing returns nothing
    // Meat Wagon Aggro Range
    call ForGroupBJ( GetUnitsOfPlayerAndTypeId(udg_P7_Dreadlords, 'umtw'), function Trig_Init_03b_Enemy_Units_Func002A )
    // Ambushers
    set udg_AbomAmbushLeftUnits = GetUnitsInRectOfPlayer(gg_rct_Abom_Ambush_Source_Left, udg_P7_Dreadlords)
    set udg_AbomAmbushRightUnits = GetUnitsInRectOfPlayer(gg_rct_Abom_Ambush_Source_Right, udg_P7_Dreadlords)
    set udg_AlleyAmbushUnits = GetUnitsInRectOfPlayer(gg_rct_Alley_Ambush_Source, udg_P7_Dreadlords)
    call ForGroupBJ( udg_AlleyAmbushUnits, function Trig_Init_03b_Enemy_Units_Func007002 )
    set udg_FiendAmbushUnits = GetUnitsInRectMatching(gg_rct_Fiend_Ambush_Fiend_Source, Condition(function Trig_Init_03b_Enemy_Units_Func008002002))
    call ForGroupBJ( udg_FiendAmbushUnits, function Trig_Init_03b_Enemy_Units_Func009002 )
    set udg_SkelAmbushers = GetUnitsInRectOfPlayer(gg_rct_Skel_Ambush_Units_Source, udg_P7_Dreadlords)
    call ForGroupBJ( udg_SkelAmbushers, function Trig_Init_03b_Enemy_Units_Func011002 )
    // Patrollers
    set udg_HallPatrollerA = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Hall_Patrol_SourceA, udg_P7_Dreadlords))
    set udg_HallPatrollerB = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Hall_Patrol_SourceB, udg_P7_Dreadlords))
    set udg_HallPatrollerC = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Hall_Patrol_SourceC, udg_P7_Dreadlords))
    call RemoveGuardPosition( udg_HallPatrollerA )
    call RemoveGuardPosition( udg_HallPatrollerB )
    call RemoveGuardPosition( udg_HallPatrollerC )
    call ConditionalTriggerExecute( gg_trg_Hall_Patrol_Start )
    // Guards
    set udg_PrisonGuardA = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Prison_Guard_SourceA, udg_P7_Dreadlords))
    set udg_PrisonGuardB = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Prison_Guard_SourceB, udg_P7_Dreadlords))
    set udg_PrisonGuards = GetUnitsInRectOfPlayer(gg_rct_Prison_Guards, udg_P7_Dreadlords)
    set udg_ArmoryGuards = GetUnitsInRectOfPlayer(gg_rct_Armory_Guards_Source, udg_P7_Dreadlords)
    call GroupAddGroup( GetUnitsInRectOfPlayer(gg_rct_Armory_Guards_Source, Player(PLAYER_NEUTRAL_AGGRESSIVE)), udg_ArmoryGuards )
    // Other Assorted Varieties
    set udg_ZombieGroupA = GetUnitsInRectOfPlayer(gg_rct_Zombie_Group_A, udg_P7_Dreadlords)
endfunction

//===========================================================================
function InitTrig_Init_03b_Enemy_Units takes nothing returns nothing
    set gg_trg_Init_03b_Enemy_Units = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_03b_Enemy_Units, function Trig_Init_03b_Enemy_Units_Actions )
endfunction

//===========================================================================
// Trigger: Init 03c Scene Units
//===========================================================================
function Trig_Init_03c_Scene_Units_Func025A takes nothing returns nothing
    call ShowUnitHide( GetEnumUnit() )
    call PauseUnitBJ( true, GetEnumUnit() )
    call SetUnitInvulnerable( GetEnumUnit(), true )
endfunction

function Trig_Init_03c_Scene_Units_Actions takes nothing returns nothing
    // Rescue Necro Scene
    set udg_NecroCorpseA = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Entrance_Hallway_CorpseA, udg_P7_Dreadlords))
    set udg_NecroCorpseB = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Entrance_Hallway_CorpseB, udg_P7_Dreadlords))
    call PauseUnitBJ( true, udg_NecroCorpseA )
    call PauseUnitBJ( true, udg_NecroCorpseB )
    call ShowUnitHide( udg_NecroCorpseA )
    call ShowUnitHide( udg_NecroCorpseB )
    // Chanting Scene
    set udg_ChantingNecroA = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Chanting_Necro_SourceA, udg_P7_Dreadlords))
    set udg_ChantingNecroB = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Chanting_Necro_SourceB, udg_P7_Dreadlords))
    set udg_ChantingNecroC = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Chanting_Necro_SourceC, udg_P7_Dreadlords))
    set udg_ChantingUnits = GetUnitsInRectOfPlayer(gg_rct_Chanting_Necros_Source, udg_P7_Dreadlords)
    call RemoveGuardPosition( udg_ChantingNecroA )
    call RemoveGuardPosition( udg_ChantingNecroB )
    call RemoveGuardPosition( udg_ChantingNecroC )
    // Horse Scene
    set udg_HorsieCorpses = GetUnitsInRectOfPlayer(gg_rct_Horsie_Corpses_Source, Player(PLAYER_NEUTRAL_PASSIVE))
    set udg_HorsieEaters = GetUnitsInRectOfPlayer(gg_rct_Horsie_Eaters_Source, udg_P7_Dreadlords)
    set udg_HorsieRunner = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Horsie_Runner_Source, Player(PLAYER_NEUTRAL_PASSIVE)))
    set udg_HorsieChaser = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Horsie_Chaser_Source, udg_P7_Dreadlords))
    call ConditionalTriggerExecute( gg_trg_Horsie_Scene_Setup )
    // Battle Room Scene
    set udg_BattleRoomUnits = GetUnitsInRectAll(gg_rct_BattleRoom_Units)
    set udg_BattleRoomCorpseUnits = GetUnitsInRectOfPlayer(gg_rct_BattleRoom_Units, Player(PLAYER_NEUTRAL_PASSIVE))
    call ForGroupBJ( udg_BattleRoomUnits, function Trig_Init_03c_Scene_Units_Func025A )
    // CryptLeft Scene
    set udg_CryptLeft = gg_unit_usep_0207
    set udg_CryptLeftUnits = GetUnitsInRectOfPlayer(gg_rct_CryptLeftUnits_Source, udg_P7_Dreadlords)
    call GroupRemoveUnitSimple( udg_CryptLeft, udg_CryptLeftUnits )
    call ConditionalTriggerExecute( gg_trg_CryptLeft_Start )
    // CryptRight Scene
    set udg_CryptRight = gg_unit_usep_0206
    set udg_CryptRightUnits = GetUnitsInRectOfPlayer(gg_rct_CryptRightUnits_Source, udg_P7_Dreadlords)
    call GroupRemoveUnitSimple( udg_CryptRight, udg_CryptRightUnits )
    call ConditionalTriggerExecute( gg_trg_CryptRight_Start )
    // Bloodfeast Scene
    set udg_Bloodfeast = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Bloodfeast_Source, udg_P7_Dreadlords))
    set udg_BloodfeastUnits = GetUnitsInRectOfPlayer(gg_rct_Bloodfeast_Units_Source, udg_P7_Dreadlords)
endfunction

//===========================================================================
function InitTrig_Init_03c_Scene_Units takes nothing returns nothing
    set gg_trg_Init_03c_Scene_Units = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_03c_Scene_Units, function Trig_Init_03c_Scene_Units_Actions )
endfunction

//===========================================================================
// Trigger: Init 03d Cinematic Units
//===========================================================================
function Trig_Init_03d_Cinematic_Units_Func027002 takes nothing returns nothing
    call RemoveGuardPosition( GetEnumUnit() )
endfunction

function Trig_Init_03d_Cinematic_Units_Func028002 takes nothing returns nothing
    call ShowUnitHide( GetEnumUnit() )
endfunction

function Trig_Init_03d_Cinematic_Units_Func037002 takes nothing returns nothing
    call RemoveGuardPosition( GetEnumUnit() )
endfunction

function Trig_Init_03d_Cinematic_Units_Func038002 takes nothing returns nothing
    call ShowUnitHide( GetEnumUnit() )
endfunction

function Trig_Init_03d_Cinematic_Units_Actions takes nothing returns nothing
    // Intro Cinematic
    set udg_Balnazzar = gg_unit_Ubal_0161
    set udg_Detheroc = gg_unit_Udth_0137
    set udg_Varimathras = gg_unit_Uvar_0062
    call SetUnitColor( udg_Balnazzar, PLAYER_COLOR_PURPLE )
    call SetUnitColor( udg_Detheroc, PLAYER_COLOR_GREEN )
    call SetUnitColor( udg_Varimathras, PLAYER_COLOR_RED )
    set udg_KelThuzad = gg_unit_Uktl_0009
    call SetUnitColor( udg_KelThuzad, PLAYER_COLOR_GREEN )
    set udg_DireLich01 = gg_unit_uktn_0011
    set udg_DireLich02 = gg_unit_uktn_0010
    set udg_IntroGhoul01 = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Intro_Ghoul_Source01, udg_P7_Dreadlords))
    set udg_IntroGhoul02 = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Intro_Ghoul_Source02, udg_P7_Dreadlords))
    set udg_IntroGhoul03 = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Intro_Ghoul_Source03, udg_P7_Dreadlords))
    set udg_IntroGhoul04 = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Intro_Ghoul_Source04, udg_P7_Dreadlords))
    call RemoveGuardPosition( udg_IntroGhoul01 )
    call RemoveGuardPosition( udg_IntroGhoul02 )
    call RemoveGuardPosition( udg_IntroGhoul03 )
    call RemoveGuardPosition( udg_IntroGhoul04 )
    set udg_IntroDreadlordGhouls = GetUnitsInRectOfPlayer(gg_rct_Intro_Dreadlord_Ghouls, udg_P7_Dreadlords)
    // Victory Cinematic
    set udg_ExitAbom01 = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Exit_Abom01_Source, udg_P7_Dreadlords))
    set udg_ExitAbom02 = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Exit_Abom02_Source, udg_P7_Dreadlords))
    set udg_ExitAbom03 = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Exit_Abom03_Source, udg_P7_Dreadlords))
    set udg_ExitAbom04 = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Exit_Abom04_Source, udg_P7_Dreadlords))
    set udg_ExitAboms = GetUnitsInRectOfPlayer(gg_rct_Exit_Aboms_Source, udg_P7_Dreadlords)
    call ForGroupBJ( udg_ExitAboms, function Trig_Init_03d_Cinematic_Units_Func027002 )
    call ForGroupBJ( udg_ExitAboms, function Trig_Init_03d_Cinematic_Units_Func028002 )
    set udg_ExitBanshee01 = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Exit_Banshee01_Source, udg_P5_Sylvanas))
    set udg_ExitBanshee02 = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Exit_Banshee02_Source, udg_P5_Sylvanas))
    set udg_ExitBanshee03 = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Exit_Banshee03_Source, udg_P5_Sylvanas))
    set udg_ExitBanshee04 = GroupPickRandomUnit(GetUnitsInRectOfPlayer(gg_rct_Exit_Banshee04_Source, udg_P5_Sylvanas))
    call GroupAddUnitSimple( udg_ExitBanshee01, udg_ExitBanshees )
    call GroupAddUnitSimple( udg_ExitBanshee02, udg_ExitBanshees )
    call GroupAddUnitSimple( udg_ExitBanshee03, udg_ExitBanshees )
    call GroupAddUnitSimple( udg_ExitBanshee04, udg_ExitBanshees )
    call ForGroupBJ( udg_ExitBanshees, function Trig_Init_03d_Cinematic_Units_Func037002 )
    call ForGroupBJ( udg_ExitBanshees, function Trig_Init_03d_Cinematic_Units_Func038002 )
endfunction

//===========================================================================
function InitTrig_Init_03d_Cinematic_Units takes nothing returns nothing
    set gg_trg_Init_03d_Cinematic_Units = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_03d_Cinematic_Units, function Trig_Init_03d_Cinematic_Units_Actions )
endfunction

//===========================================================================
// Trigger: Init 04 Music
//===========================================================================
function Trig_Init_04_Music_Actions takes nothing returns nothing
    call ClearMapMusicBJ(  )
    call TriggerSleepAction( 0.01 )
    call PlayThematicMusicExBJ( "Sound\\Music\\mp3Music\\ArthasTheme.mp3", 12.00 )
    call SetMapMusicIndexedBJ( "music", 1 )
endfunction

//===========================================================================
function InitTrig_Init_04_Music takes nothing returns nothing
    set gg_trg_Init_04_Music = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_04_Music, function Trig_Init_04_Music_Actions )
endfunction

//===========================================================================
// Trigger: Init 05 Sounds
//===========================================================================
function Trig_Init_05_Sounds_Actions takes nothing returns nothing
    set udg_PlateActivationSound = gg_snd_Switch
    set udg_PlateResetSound = gg_snd_InGameChatWhat1
    set udg_ElevatorSound = gg_snd_Elevator
endfunction

//===========================================================================
function InitTrig_Init_05_Sounds takes nothing returns nothing
    set gg_trg_Init_05_Sounds = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_05_Sounds, function Trig_Init_05_Sounds_Actions )
endfunction

//===========================================================================
// Trigger: Init 06a Environment
//===========================================================================
function Trig_Init_06a_Environment_Actions takes nothing returns nothing
    // Initial Time Of Day
    call SetTimeOfDay( 21.00 )
    call UseTimeOfDayBJ( false )
    // Weather Effects
    // Fog
    // Initial Visibility
    // Bridges
    // Gates (Vulnerable)
    set udg_StartingGate = gg_dest_LTe1_0000
    set udg_PrisonGate = gg_dest_DTg3_1073
    set udg_FountainGate = gg_dest_LTe1_2572
    // Doors (Invulnerable)
    set udg_AbomDoorLeft = gg_dest_DTg5_0114
    call SetDestructableInvulnerableBJ( udg_AbomDoorLeft, true )
    set udg_AbomDoorRight = gg_dest_DTg5_2767
    call SetDestructableInvulnerableBJ( udg_AbomDoorRight, true )
    set udg_GargoyleDoor = gg_dest_DTg5_2766
    call SetDestructableInvulnerableBJ( udg_GargoyleDoor, true )
    // Open Doors
    call ModifyGateBJ( bj_GATEOPERATION_OPEN, gg_dest_DTg5_2636 )
    // Pressure Plates
    set udg_FountainPlate = gg_dest_DTfx_0411
    set udg_BridgePlateA = gg_dest_DTfx_0751
    set udg_BridgePlateB = gg_dest_DTfx_0750
    set udg_BridgePlateC = gg_dest_DTfx_1998
    call SetDestructableAnimationBJ( udg_FountainPlate, "stand alternate" )
    call SetDestructableAnimationBJ( udg_BridgePlateA, "stand alternate" )
    call SetDestructableAnimationBJ( udg_BridgePlateB, "stand alternate" )
    call SetDestructableAnimationBJ( udg_BridgePlateC, "stand alternate" )
endfunction

//===========================================================================
function InitTrig_Init_06a_Environment takes nothing returns nothing
    set gg_trg_Init_06a_Environment = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_06a_Environment, function Trig_Init_06a_Environment_Actions )
endfunction

//===========================================================================
// Trigger: Init 06b Elevators
//===========================================================================
function Trig_Init_06b_Elevators_Actions takes nothing returns nothing
    // Fountain Elevator
    set udg_FountainElevator = gg_dest_DTrx_0171
    call ChangeElevatorHeight( udg_FountainElevator, 1 )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_ALL, udg_FountainElevator )
    // Bridge Elevators
    set udg_BridgeElevatorA = gg_dest_DTrx_0274
    set udg_BridgeElevatorB = gg_dest_DTrx_2599
    set udg_BridgeElevatorC = gg_dest_DTrx_0874
    call ChangeElevatorHeight( udg_BridgeElevatorA, 2 )
    call ChangeElevatorHeight( udg_BridgeElevatorB, 2 )
    call ChangeElevatorHeight( udg_BridgeElevatorC, 2 )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_NORTH, udg_BridgeElevatorA )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_NORTH, udg_BridgeElevatorB )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_NORTH, udg_BridgeElevatorC )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_SOUTH, udg_BridgeElevatorA )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_SOUTH, udg_BridgeElevatorB )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_SOUTH, udg_BridgeElevatorC )
endfunction

//===========================================================================
function InitTrig_Init_06b_Elevators takes nothing returns nothing
    set gg_trg_Init_06b_Elevators = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_06b_Elevators, function Trig_Init_06b_Elevators_Actions )
endfunction

//===========================================================================
// Trigger: Init 06c Vision
//===========================================================================
function Trig_Init_06c_Vision_Actions takes nothing returns nothing
    // Church Vision
    set udg_VSourceChurchA = GetRectCenter(gg_rct_Vision_AChurch_SourceA)
    set udg_VSourceChurchB = GetRectCenter(gg_rct_Vision_AChurch_SourceB)
    // Nook Vision
    set udg_VSourceNook = GetRectCenter(gg_rct_Vision_Nook_Source)
    // Prison Vision
    set udg_VSourcePrison = GetRectCenter(gg_rct_Vision_Prison_Source)
    // Corpse Pile Vision
    set udg_VSourceCorpsePile01 = GetRectCenter(gg_rct_Corpse_Pile_01)
    set udg_VSourceCorpsePile02 = GetRectCenter(gg_rct_Corpse_Pile_02)
    set udg_VSourceCorpsePile03 = GetRectCenter(gg_rct_Corpse_Pile_03)
    // Skel Ambush Vision
    set udg_VSourceSkelAmbushA = GetRectCenter(gg_rct_Skel_Ambush_SampleA)
    set udg_VSourceSkelAmbushB = GetRectCenter(gg_rct_Skel_Ambush_SampleB)
    set udg_VSourceSkelAmbushC = GetRectCenter(gg_rct_Skel_Ambush_SampleC)
    // Horsie Vision
    set udg_VSourceHorsieA = GetRectCenter(gg_rct_Horsie_Scene_VTripwire)
    // Plate Vision
    set udg_VSourceBridgePlateA = GetRectCenter(gg_rct_VSource_Bridge_Plate_A)
    set udg_VSourceBridgePlateB = GetRectCenter(gg_rct_VSource_Bridge_Plate_B)
    set udg_VSourceBridgePlateC = GetRectCenter(gg_rct_VSource_Bridge_Plate_C)
    set udg_VSourceFountainPlate = GetRectCenter(gg_rct_VSource_Fountain_Plate)
endfunction

//===========================================================================
function InitTrig_Init_06c_Vision takes nothing returns nothing
    set gg_trg_Init_06c_Vision = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_06c_Vision, function Trig_Init_06c_Vision_Actions )
endfunction

//===========================================================================
// Trigger: Init 07 Quests
//===========================================================================
function Trig_Init_07_Quests_Actions takes nothing returns nothing
    // Create Quests
    call ConditionalTriggerExecute( gg_trg_Quest_Exit_Create )
    call ConditionalTriggerExecute( gg_trg_Quest_Meat_Create )
endfunction

//===========================================================================
function InitTrig_Init_07_Quests takes nothing returns nothing
    set gg_trg_Init_07_Quests = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_07_Quests, function Trig_Init_07_Quests_Actions )
endfunction

//===========================================================================
// Trigger: Init 08a Hard
//===========================================================================
function Trig_Init_08a_Hard_Conditions takes nothing returns boolean
    if ( not ( GetGameDifficulty() == MAP_DIFFICULTY_HARD ) ) then
        return false
    endif
    return true
endfunction

function Trig_Init_08a_Hard_Func058002 takes nothing returns nothing
    call RemoveDestructable( GetEnumDestructable() )
endfunction

function Trig_Init_08a_Hard_Func059002 takes nothing returns nothing
    call RemoveDestructable( GetEnumDestructable() )
endfunction

function Trig_Init_08a_Hard_Func061002 takes nothing returns nothing
    call RemoveItem( GetEnumItem() )
endfunction

function Trig_Init_08a_Hard_Actions takes nothing returns nothing
    set udg_WaveSpawnDelay = 120.00
    set udg_WaveSpawnDelayLate = 120.00
    // Buff Up Player 7
    call SetPlayerTechResearchedSwap( 'Rume', 2, udg_P7_Dreadlords )
    call SetPlayerTechResearchedSwap( 'Rura', 2, udg_P7_Dreadlords )
    call SetPlayerTechResearchedSwap( 'Ruar', 2, udg_P7_Dreadlords )
    call SetPlayerTechResearchedSwap( 'Rucr', 2, udg_P7_Dreadlords )
    call SetPlayerTechResearchedSwap( 'Rugf', 1, udg_P7_Dreadlords )
    call SetPlayerTechResearchedSwap( 'Rune', 1, udg_P7_Dreadlords )
    call SetPlayerTechResearchedSwap( 'Rusl', 1, udg_P7_Dreadlords )
    // Extra Units
    call CreateNUnitsAtLoc( 1, 'uabo', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit01), 290.00 )
    call CreateNUnitsAtLoc( 1, 'uabo', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit02), 270.00 )
    call CreateNUnitsAtLoc( 1, 'uabo', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit03), 270.00 )
    call CreateNUnitsAtLoc( 1, 'ugho', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit04), 250.00 )
    call CreateNUnitsAtLoc( 1, 'ugho', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit05), 280.00 )
    call CreateNUnitsAtLoc( 1, 'uabo', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit06), 275.00 )
    call CreateNUnitsAtLoc( 1, 'ugho', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit07), 270.00 )
    call CreateNUnitsAtLoc( 1, 'ugho', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit08), 270.00 )
    call CreateNUnitsAtLoc( 1, 'ugho', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit09), 270.00 )
    call CreateNUnitsAtLoc( 1, 'ugho', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit10), 270.00 )
    call CreateNUnitsAtLoc( 1, 'uabo', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit11), 300.00 )
    call CreateNUnitsAtLoc( 1, 'uabo', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit12), 300.00 )
    call CreateNUnitsAtLoc( 1, 'unec', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit13), 300.00 )
    call CreateNUnitsAtLoc( 1, 'uabo', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit14), 220.00 )
    call CreateNUnitsAtLoc( 1, 'uabo', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit15), 220.00 )
    call CreateNUnitsAtLoc( 1, 'unec', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit16), 220.00 )
    call CreateNUnitsAtLoc( 1, 'unec', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit17), 260.00 )
    call CreateNUnitsAtLoc( 1, 'uabo', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit19), 120.00 )
    call CreateNUnitsAtLoc( 1, 'n000', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit20), 140.00 )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_ZombieGroupA )
    call CreateNUnitsAtLoc( 1, 'uabo', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit21), 260.00 )
    call CreateNUnitsAtLoc( 1, 'n003', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit22), 290.00 )
    call CreateNUnitsAtLoc( 1, 'n003', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit23), 250.00 )
    call CreateNUnitsAtLoc( 1, 'ugho', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit24), 135.00 )
    call CreateNUnitsAtLoc( 1, 'uabo', udg_P7_Dreadlords, GetRectCenter(gg_rct_HardDifficultyUnit25), 200.00 )
    // DreadLord
    call SetHeroLevelBJ( gg_unit_Udre_0184, 5, false )
    call SelectHeroSkill( gg_unit_Udre_0184, 'AUcs' )
    call SelectHeroSkill( gg_unit_Udre_0184, 'AUav' )
    call SelectHeroSkill( gg_unit_Udre_0184, 'AUcs' )
    call SelectHeroSkill( gg_unit_Udre_0184, 'AUcs' )
    // DreadLord
    call SetHeroLevelBJ( gg_unit_Udre_0135, 6, false )
    call SelectHeroSkill( gg_unit_Udre_0135, 'AUcs' )
    call SelectHeroSkill( gg_unit_Udre_0135, 'AUsl' )
    call SelectHeroSkill( gg_unit_Udre_0135, 'AUsl' )
    call SelectHeroSkill( gg_unit_Udre_0135, 'AUav' )
    call SelectHeroSkill( gg_unit_Udre_0135, 'AUav' )
    // DreadLord
    call SetHeroLevelBJ( gg_unit_Udre_0226, 7, false )
    call SelectHeroSkill( gg_unit_Udre_0226, 'AUcs' )
    call SelectHeroSkill( gg_unit_Udre_0226, 'AUsl' )
    call SelectHeroSkill( gg_unit_Udre_0226, 'AUav' )
    call SelectHeroSkill( gg_unit_Udre_0226, 'AUin' )
    // Remove Some Crates
    call EnumDestructablesInRectAll( gg_rct_HardDifficultyCrate02, function Trig_Init_08a_Hard_Func058002 )
    call EnumDestructablesInRectAll( gg_rct_HardDifficultyCrate03, function Trig_Init_08a_Hard_Func059002 )
    call EnumItemsInRectBJ( gg_rct_Bloodfeast_Tripwire, function Trig_Init_08a_Hard_Func061002 )
endfunction

//===========================================================================
function InitTrig_Init_08a_Hard takes nothing returns nothing
    set gg_trg_Init_08a_Hard = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Init_08a_Hard, Condition( function Trig_Init_08a_Hard_Conditions ) )
    call TriggerAddAction( gg_trg_Init_08a_Hard, function Trig_Init_08a_Hard_Actions )
endfunction

//===========================================================================
// Trigger: Init 08b Normal
//===========================================================================
function Trig_Init_08b_Normal_Conditions takes nothing returns boolean
    if ( not ( GetGameDifficulty() == MAP_DIFFICULTY_NORMAL ) ) then
        return false
    endif
    return true
endfunction

function Trig_Init_08b_Normal_Actions takes nothing returns nothing
    set udg_WaveSpawnDelay = 120.00
    set udg_WaveSpawnDelayLate = 180.00
endfunction

//===========================================================================
function InitTrig_Init_08b_Normal takes nothing returns nothing
    set gg_trg_Init_08b_Normal = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Init_08b_Normal, Condition( function Trig_Init_08b_Normal_Conditions ) )
    call TriggerAddAction( gg_trg_Init_08b_Normal, function Trig_Init_08b_Normal_Actions )
endfunction

//===========================================================================
// Trigger: Init 08c Easy
//===========================================================================
function Trig_Init_08c_Easy_Conditions takes nothing returns boolean
    if ( not ( GetGameDifficulty() == MAP_DIFFICULTY_EASY ) ) then
        return false
    endif
    return true
endfunction

function Trig_Init_08c_Easy_Actions takes nothing returns nothing
    set udg_WaveSpawnDelay = 120.00
    set udg_WaveSpawnDelayLate = 180.00
    // Handicap All Opponents
    call SetPlayerHandicapBJ( udg_P7_Dreadlords, bj_HANDICAP_EASY )
    call SetPlayerHandicapBJ( Player(PLAYER_NEUTRAL_AGGRESSIVE), bj_HANDICAP_EASY )
endfunction

//===========================================================================
function InitTrig_Init_08c_Easy takes nothing returns nothing
    set gg_trg_Init_08c_Easy = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Init_08c_Easy, Condition( function Trig_Init_08c_Easy_Conditions ) )
    call TriggerAddAction( gg_trg_Init_08c_Easy, function Trig_Init_08c_Easy_Actions )
endfunction

//===========================================================================
// Trigger: Load Heroes
//===========================================================================
function Trig_Load_Heroes_Actions takes nothing returns nothing
    // Create The Game Cache
    call InitGameCacheBJ( "Campaigns.w3v" )
    // Load Each Hero
    call ConditionalTriggerExecute( gg_trg_Load_Arthas )
    call ConditionalTriggerExecute( gg_trg_Loot_KelThuzad )
    // Disable Experience
    call SuspendHeroXPBJ( false, udg_Arthas )
    set udg_ExpDisabledForArthas = true
endfunction

//===========================================================================
function InitTrig_Load_Heroes takes nothing returns nothing
    set gg_trg_Load_Heroes = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Load_Heroes, function Trig_Load_Heroes_Actions )
endfunction

//===========================================================================
// Trigger: Load Arthas
//===========================================================================
function Trig_Load_Arthas_Func004C takes nothing returns boolean
    if ( not ( udg_Arthas != null ) ) then
        return false
    endif
    return true
endfunction

function Trig_Load_Arthas_Actions takes nothing returns nothing
    // Load Hero From Cache
    call RestoreUnitLocFacingAngleBJ( "Arthas", "UndeadX02", GetLastCreatedGameCacheBJ(), udg_AP1_Player, GetRectCenter(gg_rct_Intro_Arthas_Through_Gate), 90.00 )
    set udg_Arthas = GetLastRestoredUnitBJ()
    if ( Trig_Load_Arthas_Func004C() ) then
        // De-level Hero
        call SetHeroLevelBJ( udg_Arthas, 7, false )
        call SetHeroLevelBJ( udg_Arthas, 8, false )
        call SelectHeroSkill( udg_Arthas, 'AUdc' )
    else
        // Create Default Hero
        call CreateNUnitsAtLoc( 1, 'Uear', udg_AP1_Player, GetRectCenter(gg_rct_Intro_Arthas_Through_Gate), 90.00 )
        call SetHeroLevelBJ( GetLastCreatedUnit(), 8, false )
        call SelectHeroSkill( GetLastCreatedUnit(), 'AUdc' )
        call SelectHeroSkill( GetLastCreatedUnit(), 'AUdc' )
        call SelectHeroSkill( GetLastCreatedUnit(), 'AUdc' )
        call SelectHeroSkill( GetLastCreatedUnit(), 'AUdp' )
        call SelectHeroSkill( GetLastCreatedUnit(), 'AUdp' )
        call SelectHeroSkill( GetLastCreatedUnit(), 'AUau' )
        call SelectHeroSkill( GetLastCreatedUnit(), 'AUau' )
        call SelectHeroSkill( GetLastCreatedUnit(), 'AUan' )
        set udg_Arthas = GetLastCreatedUnit()
    endif
endfunction

//===========================================================================
function InitTrig_Load_Arthas takes nothing returns nothing
    set gg_trg_Load_Arthas = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Load_Arthas, function Trig_Load_Arthas_Actions )
endfunction

//===========================================================================
// Trigger: Loot KelThuzad
//===========================================================================
function Trig_Loot_KelThuzad_Func004C takes nothing returns boolean
    if ( not ( udg_LootVictim != null ) ) then
        return false
    endif
    return true
endfunction

function Trig_Loot_KelThuzad_Actions takes nothing returns nothing
    // Load Hero From Cache
    call RestoreUnitLocFacingAngleBJ( "Kelthuzad", "FinalX", GetLastCreatedGameCacheBJ(), udg_P8_KelThuzad, GetRectCenter(gg_rct_KelThuzad_Loot_Spawn), 270.00 )
    set udg_LootVictim = GetLastRestoredUnitBJ()
    if ( Trig_Loot_KelThuzad_Func004C() ) then
        // Loot Hero
        call SetItemPositionLoc( UnitItemInSlotBJ(udg_LootVictim, 1), GetRectCenter(gg_rct_KelThuzad_Loot_01) )
        call SetItemPositionLoc( UnitItemInSlotBJ(udg_LootVictim, 2), GetRectCenter(gg_rct_KelThuzad_Loot_02) )
        call SetItemPositionLoc( UnitItemInSlotBJ(udg_LootVictim, 3), GetRectCenter(gg_rct_KelThuzad_Loot_03) )
        call SetItemPositionLoc( UnitItemInSlotBJ(udg_LootVictim, 4), GetRectCenter(gg_rct_KelThuzad_Loot_04) )
        call SetItemPositionLoc( UnitItemInSlotBJ(udg_LootVictim, 5), GetRectCenter(gg_rct_KelThuzad_Loot_05) )
        call SetItemPositionLoc( UnitItemInSlotBJ(udg_LootVictim, 6), GetRectCenter(gg_rct_KelThuzad_Loot_06) )
        // Boot Hero
        call RemoveUnit( udg_LootVictim )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Loot_KelThuzad takes nothing returns nothing
    set gg_trg_Loot_KelThuzad = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Loot_KelThuzad, function Trig_Loot_KelThuzad_Actions )
endfunction

//===========================================================================
// Trigger: Cinematic Revival
//
// Before running this in a cinematic, do the following:
//   - Set "RevivalHero" to the hero you wish to revive.
//   - Set "RevivalSpot" to the place at which you wish the hero to be revived.
// After running this, set the unit facing for the revived hero.
// After the cinematic, move the hero instantly to RevivalReturnSpot.
//===========================================================================
function Trig_Cinematic_Revival_Func003001 takes nothing returns boolean
    return ( IsUnitAliveBJ(udg_RevivalHero) == true )
endfunction

function Trig_Cinematic_Revival_Func006002001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Cinematic_Revival_Func006002001002002001001 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'halt' )
endfunction

function Trig_Cinematic_Revival_Func006002001002002001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'oalt' )
endfunction

function Trig_Cinematic_Revival_Func006002001002002001 takes nothing returns boolean
    return GetBooleanOr( Trig_Cinematic_Revival_Func006002001002002001001(), Trig_Cinematic_Revival_Func006002001002002001002() )
endfunction

function Trig_Cinematic_Revival_Func006002001002002002001 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'uaod' )
endfunction

function Trig_Cinematic_Revival_Func006002001002002002002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'eate' )
endfunction

function Trig_Cinematic_Revival_Func006002001002002002 takes nothing returns boolean
    return GetBooleanOr( Trig_Cinematic_Revival_Func006002001002002002001(), Trig_Cinematic_Revival_Func006002001002002002002() )
endfunction

function Trig_Cinematic_Revival_Func006002001002002 takes nothing returns boolean
    return GetBooleanOr( Trig_Cinematic_Revival_Func006002001002002001(), Trig_Cinematic_Revival_Func006002001002002002() )
endfunction

function Trig_Cinematic_Revival_Func006002001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Cinematic_Revival_Func006002001002001(), Trig_Cinematic_Revival_Func006002001002002() )
endfunction

function Trig_Cinematic_Revival_Func007001 takes nothing returns boolean
    return ( udg_RevivalAltar != null )
endfunction

function Trig_Cinematic_Revival_Actions takes nothing returns nothing
    set udg_RevivalReturnSpot = GetUnitLoc(udg_RevivalHero)
    call SetUnitPositionLoc( udg_RevivalHero, udg_RevivalSpot )
    if ( Trig_Cinematic_Revival_Func003001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ReviveHeroLoc( udg_RevivalHero, udg_RevivalSpot, false )
    set udg_RevivalReturnSpot = udg_RevivalSpot
    set udg_RevivalAltar = GroupPickRandomUnit(GetUnitsOfPlayerMatching(GetOwningPlayer(udg_RevivalHero), Condition(function Trig_Cinematic_Revival_Func006002001002)))
    if ( Trig_Cinematic_Revival_Func007001() ) then
        set udg_RevivalReturnSpot = OffsetLocation(GetUnitLoc(udg_RevivalAltar), 0, -128.00)
    else
        call DoNothing(  )
    endif
endfunction

//===========================================================================
function InitTrig_Cinematic_Revival takes nothing returns nothing
    set gg_trg_Cinematic_Revival = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Cinematic_Revival, function Trig_Cinematic_Revival_Actions )
endfunction

//===========================================================================
// Trigger: Post Cinematic Pause
//===========================================================================
function Trig_Post_Cinematic_Pause_Func001Func001002 takes nothing returns nothing
    call PauseUnitBJ( true, GetEnumUnit() )
endfunction

function Trig_Post_Cinematic_Pause_Func001C takes nothing returns boolean
    if ( not ( udg_AlleyAmbushStarted == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Post_Cinematic_Pause_Func002Func001002 takes nothing returns nothing
    call PauseUnitBJ( true, GetEnumUnit() )
endfunction

function Trig_Post_Cinematic_Pause_Func002C takes nothing returns boolean
    if ( not ( udg_FiendAmbushStarted == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Post_Cinematic_Pause_Func003Func001002 takes nothing returns nothing
    call PauseUnitBJ( true, GetEnumUnit() )
endfunction

function Trig_Post_Cinematic_Pause_Func003C takes nothing returns boolean
    if ( not ( udg_SkelAmbushStarted == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Post_Cinematic_Pause_Actions takes nothing returns nothing
    if ( Trig_Post_Cinematic_Pause_Func001C() ) then
        call ForGroupBJ( udg_AlleyAmbushUnits, function Trig_Post_Cinematic_Pause_Func001Func001002 )
    else
    endif
    if ( Trig_Post_Cinematic_Pause_Func002C() ) then
        call ForGroupBJ( udg_FiendAmbushUnits, function Trig_Post_Cinematic_Pause_Func002Func001002 )
    else
    endif
    if ( Trig_Post_Cinematic_Pause_Func003C() ) then
        call ForGroupBJ( udg_SkelAmbushers, function Trig_Post_Cinematic_Pause_Func003Func001002 )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Post_Cinematic_Pause takes nothing returns nothing
    set gg_trg_Post_Cinematic_Pause = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Post_Cinematic_Pause, function Trig_Post_Cinematic_Pause_Actions )
endfunction

//===========================================================================
// Trigger: Intro Cinematic Q
//===========================================================================
function Trig_Intro_Cinematic_Q_Func016002 takes nothing returns nothing
    call SetUnitLifeBJ( GetEnumUnit(), 80.00 )
endfunction

function Trig_Intro_Cinematic_Q_Func027001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_Intro_Cinematic_Q_Func032001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_Intro_Cinematic_Q_Func037001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_Intro_Cinematic_Q_Func041001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_Intro_Cinematic_Q_Func045001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_Intro_Cinematic_Q_Func049001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_Intro_Cinematic_Q_Func052001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_Intro_Cinematic_Q_Func057001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_Intro_Cinematic_Q_Func063001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_Intro_Cinematic_Q_Func066001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_Intro_Cinematic_Q_Func071001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_Intro_Cinematic_Q_Func076001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_Intro_Cinematic_Q_Func080001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_Intro_Cinematic_Q_Func087001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_Intro_Cinematic_Q_Func090001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_Intro_Cinematic_Q_Func097001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_Intro_Cinematic_Q_Func101001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_Intro_Cinematic_Q_Func111001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_Intro_Cinematic_Q_Actions takes nothing returns nothing
    call Preloader( "Scripts\\UndeadX02.pld" )
    set udg_InCinematic = true
    // Fade Out
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 0.00, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    // Set Up Scene
    call CinematicModeBJ( true, udg_APG1_Player )
    call ConditionalTriggerExecute( gg_trg_Intro_Setup )
    call CameraSetupApplyForPlayer( true, gg_cam_Intro_Hall01, udg_AP1_Player, 0 )
    call CameraSetupApplyForPlayer( true, gg_cam_Intro_Hall02, udg_AP1_Player, ( GetSoundDurationBJ(gg_snd_L02KelThuzad01) + 4.25 ) )
    // Fade In
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 2.00, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call EnableTrigger( gg_trg_Intro_Skipped )
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // CINEMATIC BEGINS - Cinematic Can Now Be Skipped
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    call ForGroupBJ( udg_IntroDreadlordGhouls, function Trig_Intro_Cinematic_Q_Func016002 )
    call ShowUnitHide( gg_unit_unec_0240 )
    call ShowUnitHide( gg_unit_unec_0173 )
    call SetUnitMoveSpeed( gg_unit_Uear_0214, GetUnitDefaultMoveSpeed(gg_unit_uktn_0010) )
    call SetUnitMoveSpeed( gg_unit_Uktl_0009, GetUnitDefaultMoveSpeed(gg_unit_uktn_0010) )
    call IssuePointOrderLocBJ( gg_unit_Uear_0214, "move", GetRectCenter(gg_rct_Intro_Arthas_Go_Here) )
    call IssuePointOrderLocBJ( gg_unit_Uktl_0009, "move", GetRectCenter(gg_rct_Intro_Kel_Go_Here) )
    call IssuePointOrderLocBJ( gg_unit_uktn_0010, "move", GetRectCenter(gg_rct_Intro_Necro_Go_Here01) )
    call IssuePointOrderLocBJ( gg_unit_uktn_0011, "move", GetRectCenter(gg_rct_Intro_Necro_Go_Here02) )
    call PlaySoundOnUnitBJ( gg_snd_HorseLoop3, 80.00, udg_Arthas )
    call TriggerSleepAction( 2 )
    if ( Trig_Intro_Cinematic_Q_Func027001() ) then
        return
    else
        call DoNothing(  )
    endif
    // Line 1 -Kel'Thuzad
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_KelThuzad, "TRIGSTR_040", gg_snd_L02KelThuzad01, "TRIGSTR_041", bj_TIMETYPE_ADD, 0, false )
    call PlaySoundOnUnitBJ( gg_snd_HorseLoop2, 80.00, udg_Arthas )
    call WaitForSoundBJ( gg_snd_L02KelThuzad01, 0 )
    if ( Trig_Intro_Cinematic_Q_Func032001() ) then
        return
    else
        call DoNothing(  )
    endif
    // Line 2 - Arthas
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), gg_unit_Uear_0214, "TRIGSTR_052", gg_snd_L02Arthas02, "TRIGSTR_053", bj_TIMETYPE_ADD, 0, false )
    call PlaySoundOnUnitBJ( gg_snd_HorseLoop3, 70.00, udg_Arthas )
    call TriggerSleepAction( 2 )
    if ( Trig_Intro_Cinematic_Q_Func037001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetupApplyForPlayer( true, gg_cam_Intro_Hall03, udg_AP1_Player, 0.00 )
    call CameraSetupApplyForPlayer( true, gg_cam_Intro_Hall04, udg_AP1_Player, GetSoundDurationBJ(gg_snd_L02Arthas02) )
    call TriggerSleepAction( 4.00 )
    if ( Trig_Intro_Cinematic_Q_Func041001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitFacingToFaceLocTimed( gg_unit_Uear_0214, GetRectCenter(gg_rct_Intro_Kel_Go_Here), 0 )
    call SetUnitFacingToFaceLocTimed( gg_unit_Uktl_0009, GetRectCenter(gg_rct_Intro_Arthas_Go_Here), 0 )
    call WaitForSoundBJ( gg_snd_L02Arthas02, 0 )
    if ( Trig_Intro_Cinematic_Q_Func045001() ) then
        return
    else
        call DoNothing(  )
    endif
    // Line 3 -Kel'Thuzad
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_KelThuzad, "TRIGSTR_040", gg_snd_L02KelThuzad03, "TRIGSTR_055", bj_TIMETYPE_ADD, 0, false )
    call TriggerSleepAction( 2 )
    if ( Trig_Intro_Cinematic_Q_Func049001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetupApplyForPlayer( true, gg_cam_Intro_Arthas_Gate, udg_AP1_Player, 0.00 )
    call TriggerSleepAction( 2 )
    if ( Trig_Intro_Cinematic_Q_Func052001() ) then
        return
    else
        call DoNothing(  )
    endif
    call IssuePointOrderLocBJ( gg_unit_Uear_0214, "move", GetRectCenter(gg_rct_Gameplay_Arthas_Start) )
    call PlaySoundOnUnitBJ( gg_snd_HorseLoop2, 70.00, udg_Arthas )
    call IssuePointOrderLocBJ( gg_unit_Uktl_0009, "move", GetRectCenter(gg_rct_Intro_Kel_at_Gate) )
    call WaitForSoundBJ( gg_snd_L02KelThuzad03, 0.20 )
    if ( Trig_Intro_Cinematic_Q_Func057001() ) then
        return
    else
        call DoNothing(  )
    endif
    // Line 4 -Detheroc(Green)
    call SetPlayerColorBJ( udg_P7_Dreadlords, PLAYER_COLOR_GREEN, false )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Detheroc, "TRIGSTR_056", gg_snd_L02Detheroc04, "TRIGSTR_057", bj_TIMETYPE_ADD, 0, false )
    call CameraSetupApplyForPlayer( true, gg_cam_Intro_Dread_Brothers, udg_AP1_Player, 0.00 )
    call TriggerSleepAction( 2.00 )
    if ( Trig_Intro_Cinematic_Q_Func063001() ) then
        return
    else
        call DoNothing(  )
    endif
    // Trap!
    call WaitForSoundBJ( gg_snd_L02Detheroc04, 0 )
    if ( Trig_Intro_Cinematic_Q_Func066001() ) then
        return
    else
        call DoNothing(  )
    endif
    call VolumeGroupSetVolumeBJ( SOUND_VOLUMEGROUP_COMBAT, 70.00 )
    call SetUnitPositionLocFacingLocBJ( gg_unit_Uktl_0009, GetRectCenter(gg_rct_Intro_Kel_at_Gate), GetRectCenter(gg_rct_Intro_Arthas_Through_Gate) )
    call CameraSetupApplyForPlayer( true, gg_cam_Intro_Gate_Slam, udg_AP1_Player, 0.00 )
    call TriggerSleepAction( 0.50 )
    if ( Trig_Intro_Cinematic_Q_Func071001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ModifyGateBJ( bj_GATEOPERATION_CLOSE, udg_StartingGate )
    call PlaySoundAtPointBJ( gg_snd_LargeCityGateOpen1, 90.00, GetRectCenter(gg_rct_LOSBlockers_StartingDoor), 0 )
    call SetUnitFacingToFaceLocTimed( gg_unit_Uear_0214, GetRectCenter(gg_rct_Intro_Arthas_Through_Gate), 0 )
    call TriggerSleepAction( 0.25 )
    if ( Trig_Intro_Cinematic_Q_Func076001() ) then
        return
    else
        call DoNothing(  )
    endif
    // Line 5 -Kel'Thuzad
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_KelThuzad, "TRIGSTR_040", gg_snd_L02KelThuzad05, "TRIGSTR_059", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_L02KelThuzad05, 0 )
    if ( Trig_Intro_Cinematic_Q_Func080001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitMoveSpeed( gg_unit_Uear_0214, GetUnitDefaultMoveSpeed(gg_unit_Uear_0214) )
    call IssuePointOrderLocBJ( gg_unit_Uear_0214, "move", GetRectCenter(gg_rct_Intro_Arthas_Fights) )
    call PlaySoundOnUnitBJ( gg_snd_HorseLoop1, 70.00, udg_Arthas )
    call GroupPointOrderLocBJ( udg_IntroDreadlordGhouls, "attack", GetRectCenter(gg_rct_Intro_Arthas_Fights) )
    call CameraSetupApplyForPlayer( true, gg_cam_Intro_Dread_Brothers, udg_AP1_Player, 0.00 )
    call TriggerSleepAction( 1.50 )
    if ( Trig_Intro_Cinematic_Q_Func087001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetSpeechVolumeGroupsBJ(  )
    call TriggerSleepAction( 1.50 )
    if ( Trig_Intro_Cinematic_Q_Func090001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetupApplyForPlayer( true, gg_cam_Intro_Dread_Brothers02, udg_AP1_Player, 0.00 )
    call CameraSetupApplyForPlayer( true, gg_cam_Intro_Dread_Brothers03, udg_AP1_Player, ( GetSoundDurationBJ(gg_snd_L02Balnazzar06) + GetSoundDurationBJ(gg_snd_L02KelThuzad07) ) )
    // Line 6- Balnazzar(Red)
    call SetPlayerColorBJ( udg_P7_Dreadlords, PLAYER_COLOR_PURPLE, false )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Balnazzar, "TRIGSTR_060", gg_snd_L02Balnazzar06, "TRIGSTR_061", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_L02Balnazzar06, 0 )
    if ( Trig_Intro_Cinematic_Q_Func097001() ) then
        return
    else
        call DoNothing(  )
    endif
    // Line 7 -Kel'Thuzad
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_KelThuzad, "TRIGSTR_040", gg_snd_L02KelThuzad07, "TRIGSTR_063", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_L02KelThuzad07, 0.00 )
    if ( Trig_Intro_Cinematic_Q_Func101001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitPositionLocFacingLocBJ( gg_unit_Uktl_0009, GetRectCenter(gg_rct_Intro_Arthas_Go_Here), GetRectCenter(gg_rct_Intro_Arthas_Through_Gate) )
    call SetUnitPositionLocFacingLocBJ( gg_unit_uktn_0010, GetRectCenter(gg_rct_Intro_Necro_Final01), GetRectCenter(gg_rct_Intro_Arthas_Through_Gate) )
    call SetUnitPositionLocFacingLocBJ( gg_unit_uktn_0011, GetRectCenter(gg_rct_Intro_Necro_FInal02), GetRectCenter(gg_rct_Intro_Arthas_Through_Gate) )
    call CameraSetupApplyForPlayer( true, gg_cam_Intro_Arthas_GAte02, udg_AP1_Player, 0.00 )
    call IssuePointOrderLocBJ( gg_unit_Uear_0214, "move", GetRectCenter(gg_rct_Gameplay_Arthas_Start) )
    // Line 8 -Arthas
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), gg_unit_Uear_0214, "TRIGSTR_052", gg_snd_L02Arthas08, "TRIGSTR_065", bj_TIMETYPE_ADD, 0, false )
    call PlaySoundOnUnitBJ( gg_snd_HorseLoop2, 70.00, udg_Arthas )
    call WaitForSoundBJ( gg_snd_L02Arthas08, 0 )
    if ( Trig_Intro_Cinematic_Q_Func111001() ) then
        return
    else
        call DoNothing(  )
    endif
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // CINEMATIC ENDS - Cinematic Can No Longer Be Skipped
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    call DisableTrigger( gg_trg_Intro_Skipped )
    // Fade Out
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 1.00, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 1.00 )
    // Cleanup
    call ConditionalTriggerExecute( gg_trg_Intro_Cleanup )
    call CinematicModeBJ( false, udg_APG1_Player )
    // Fade In
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 1.00, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 1.00 )
    // Start Game
    call ConditionalTriggerExecute( gg_trg_Gameplay )
    set udg_InCinematic = false
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Intro_Cinematic_Q takes nothing returns nothing
    set gg_trg_Intro_Cinematic_Q = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Intro_Cinematic_Q, function Trig_Intro_Cinematic_Q_Actions )
endfunction

//===========================================================================
// Trigger: Intro Skipped
//===========================================================================
function Trig_Intro_Skipped_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_IntroSkipped = true
    // Fade Out
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 0.50, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.50 )
    // Cleanup
    call ConditionalTriggerExecute( gg_trg_Intro_Cleanup )
    call CinematicModeBJ( false, udg_APG1_Player )
    // Fade In
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 0.50, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.50 )
    // Start Game
    call ConditionalTriggerExecute( gg_trg_Gameplay )
    set udg_InCinematic = false
    call QueuedTriggerRemoveBJ( gg_trg_Intro_Cinematic_Q )
endfunction

//===========================================================================
function InitTrig_Intro_Skipped takes nothing returns nothing
    set gg_trg_Intro_Skipped = CreateTrigger(  )
    call DisableTrigger( gg_trg_Intro_Skipped )
    call TriggerRegisterPlayerEventEndCinematic( gg_trg_Intro_Skipped, Player(0) )
    call TriggerAddAction( gg_trg_Intro_Skipped, function Trig_Intro_Skipped_Actions )
endfunction

//===========================================================================
// Trigger: Intro Setup
//===========================================================================
function Trig_Intro_Setup_Func013002 takes nothing returns nothing
    call PauseUnitBJ( false, GetEnumUnit() )
endfunction

function Trig_Intro_Setup_Func015002002 takes nothing returns boolean
    return ( IsUnitHiddenBJ(GetFilterUnit()) == false )
endfunction

function Trig_Intro_Setup_Func016001002 takes nothing returns boolean
    return ( IsUnitHiddenBJ(GetFilterUnit()) == false )
endfunction

function Trig_Intro_Setup_Func017001002 takes nothing returns boolean
    return ( IsUnitHiddenBJ(GetFilterUnit()) == false )
endfunction

function Trig_Intro_Setup_Func022002 takes nothing returns nothing
    call GroupRemoveUnitSimple( GetEnumUnit(), udg_HiddenUnits )
endfunction

function Trig_Intro_Setup_Func023002 takes nothing returns nothing
    call ShowUnitHide( GetEnumUnit() )
endfunction

function Trig_Intro_Setup_Func025002 takes nothing returns nothing
    call SetItemVisibleBJ( false, GetEnumItem() )
endfunction

function Trig_Intro_Setup_Func034A takes nothing returns nothing
    call SetUnitMoveSpeed( GetEnumUnit(), 270.00 )
endfunction

function Trig_Intro_Setup_Actions takes nothing returns nothing
    call SetPlayerColorBJ( udg_P8_KelThuzad, PLAYER_COLOR_GREEN, false )
    // Set Sky
    call SetSkyModel( "Environment\\Sky\\LordaeronSummerSky\\LordaeronSummerSky.mdl" )
    // Disable XP Gain
    call SuspendHeroXPBJ( false, udg_Arthas )
    // Pause Time Of Day
    // Pause Units
    call PauseAllUnitsBJ( true )
    call PauseUnitBJ( false, gg_unit_Uear_0214 )
    call PauseUnitBJ( false, gg_unit_Uktl_0009 )
    call PauseUnitBJ( false, gg_unit_uktn_0011 )
    call PauseUnitBJ( false, gg_unit_uktn_0010 )
    call ForGroupBJ( udg_IntroDreadlordGhouls, function Trig_Intro_Setup_Func013002 )
    // Hide Units
    set udg_HiddenUnits = GetUnitsOfPlayerMatching(udg_AP1_Player, Condition(function Trig_Intro_Setup_Func015002002))
    call GroupAddGroup( GetUnitsOfPlayerMatching(udg_P2_Rescuables, Condition(function Trig_Intro_Setup_Func016001002)), udg_HiddenUnits )
    call GroupAddGroup( GetUnitsOfPlayerMatching(udg_P7_Dreadlords, Condition(function Trig_Intro_Setup_Func017001002)), udg_HiddenUnits )
    call GroupRemoveUnitSimple( gg_unit_Uear_0214, udg_HiddenUnits )
    call GroupRemoveUnitSimple( udg_Balnazzar, udg_HiddenUnits )
    call GroupRemoveUnitSimple( udg_Detheroc, udg_HiddenUnits )
    call GroupRemoveUnitSimple( udg_Varimathras, udg_HiddenUnits )
    call ForGroupBJ( udg_IntroDreadlordGhouls, function Trig_Intro_Setup_Func022002 )
    call ForGroupBJ( udg_HiddenUnits, function Trig_Intro_Setup_Func023002 )
    // Hide Items
    call EnumItemsInRectBJ( GetPlayableMapRect(), function Trig_Intro_Setup_Func025002 )
    // Disable Abilities
    call SetPlayerAbilityAvailableBJ( false, 'AUau', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AUav', udg_AP1_Player )
    // StartingDoor Visibility
    set udg_LOSRegion = gg_rct_LOSBlockers_StartingDoor
    call ConditionalTriggerExecute( gg_trg_LOS_Clear )
    call ModifyGateBJ( bj_GATEOPERATION_OPEN, udg_StartingGate )
    // Default movement speeds
    call ForGroupBJ( udg_IntroDreadlordGhouls, function Trig_Intro_Setup_Func034A )
endfunction

//===========================================================================
function InitTrig_Intro_Setup takes nothing returns nothing
    set gg_trg_Intro_Setup = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Intro_Setup, function Trig_Intro_Setup_Actions )
endfunction

//===========================================================================
// Trigger: Intro Cleanup
//===========================================================================
function Trig_Intro_Cleanup_Func005002 takes nothing returns nothing
    call ShowUnitHide( GetEnumUnit() )
endfunction

function Trig_Intro_Cleanup_Func014A takes nothing returns nothing
    call RemoveUnit( GetEnumUnit() )
endfunction

function Trig_Intro_Cleanup_Func028002 takes nothing returns nothing
    call SetItemVisibleBJ( true, GetEnumItem() )
endfunction

function Trig_Intro_Cleanup_Func030002 takes nothing returns nothing
    call ShowUnitShow( GetEnumUnit() )
endfunction

function Trig_Intro_Cleanup_Func036001 takes nothing returns boolean
    return ( udg_ExpDisabledForArthas == false )
endfunction

function Trig_Intro_Cleanup_Actions takes nothing returns nothing
    // Restore Player Colors
    call SetPlayerColorBJ( udg_P7_Dreadlords, PLAYER_COLOR_GREEN, false )
    call SetPlayerColorBJ( udg_P8_KelThuzad, PLAYER_COLOR_PURPLE, true )
    // Arrange Units
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_P8_KelThuzad), function Trig_Intro_Cleanup_Func005002 )
    call RemoveUnit( gg_unit_Uear_0214 )
    call SetUnitLifePercentBJ( udg_IntroGhoul01, 10.00 )
    call SetUnitLifePercentBJ( udg_IntroGhoul02, 30.00 )
    call SetUnitLifePercentBJ( udg_IntroGhoul03, 20.00 )
    call SetUnitLifePercentBJ( udg_IntroGhoul04, 10.00 )
    call ShowUnitHide( udg_Detheroc )
    call ShowUnitHide( udg_Balnazzar )
    call ShowUnitHide( udg_Varimathras )
    call ForGroupBJ( udg_IntroDreadlordGhouls, function Trig_Intro_Cleanup_Func014A )
    call SetUnitPositionLoc( udg_NecroCorpseA, GetRectCenter(gg_rct_Entrance_Hallway_CorpseA_Dest) )
    call SetUnitPositionLoc( udg_NecroCorpseB, GetRectCenter(gg_rct_Entrance_Hallway_CorpseB_Dest) )
    // StartingDoor Visibility
    call ModifyGateBJ( bj_GATEOPERATION_CLOSE, udg_StartingGate )
    set udg_LOSRegion = gg_rct_LOSBlockers_StartingDoor
    call ConditionalTriggerExecute( gg_trg_LOS_Block )
    call EnableTrigger( gg_trg_LOS_Clear_StartingDoor )
    // Move Units
    call SetUnitPositionLocFacingBJ( udg_Arthas, GetRectCenter(gg_rct_Gameplay_Arthas_Start), 255.00 )
    // Restore Abilities
    call SetPlayerAbilityAvailableBJ( true, 'AUau', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AUav', udg_AP1_Player )
    // Unhide Items
    call EnumItemsInRectBJ( GetPlayableMapRect(), function Trig_Intro_Cleanup_Func028002 )
    // Unhide Units
    call ForGroupBJ( udg_HiddenUnits, function Trig_Intro_Cleanup_Func030002 )
    // Unpause Units
    call PauseAllUnitsBJ( false )
    call ConditionalTriggerExecute( gg_trg_Post_Cinematic_Pause )
    // Pause Time Of Day
    // Re-enable XP Gain
    if ( Trig_Intro_Cleanup_Func036001() ) then
        call SuspendHeroXPBJ( true, udg_Arthas )
    else
        call DoNothing(  )
    endif
    // Restore Selection
    call SelectUnitSingle( udg_Arthas )
    // Reset Sky
    call SetSkyModel( null )
    // Reset Camera
    call CameraResetSmoothingFactorBJ(  )
    call ResetToGameCameraForPlayer( udg_AP1_Player, 0 )
    call PanCameraToTimedLocForPlayer( udg_AP1_Player, CameraSetupGetDestPositionLoc(gg_cam_OLD_Intro_Skipped), 0 )
    // Initial Harvesting
    // Wipe Visibility
    call CreateFogModifierRectBJ( true, udg_AP1_Player, FOG_OF_WAR_MASKED, GetPlayableMapRect() )
    call DestroyFogModifier( GetLastCreatedFogModifier() )
endfunction

//===========================================================================
function InitTrig_Intro_Cleanup takes nothing returns nothing
    set gg_trg_Intro_Cleanup = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Intro_Cleanup, function Trig_Intro_Cleanup_Actions )
endfunction

//===========================================================================
// Trigger: Gameplay
//===========================================================================
function Trig_Gameplay_Actions takes nothing returns nothing
    // Do initial gameplay stuff, like quest messages and hints
    call IssuePointOrderLocBJ( udg_IntroGhoul01, "attack", GetUnitLoc(udg_Arthas) )
    call IssuePointOrderLocBJ( udg_IntroGhoul02, "attack", GetUnitLoc(udg_Arthas) )
    call IssuePointOrderLocBJ( udg_IntroGhoul03, "attack", GetUnitLoc(udg_Arthas) )
    call IssuePointOrderLocBJ( udg_IntroGhoul04, "attack", GetUnitLoc(udg_Arthas) )
    call TriggerSleepAction( 5.00 )
    call QueuedTriggerAddBJ( gg_trg_Quest_Exit_Discover_Q, true )
endfunction

//===========================================================================
function InitTrig_Gameplay takes nothing returns nothing
    set gg_trg_Gameplay = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Gameplay, function Trig_Gameplay_Actions )
endfunction

//===========================================================================
// Trigger: Victory Cinematic Q
//===========================================================================
function Trig_Victory_Cinematic_Q_Func030001 takes nothing returns boolean
    return ( udg_VictorySkipped == true )
endfunction

function Trig_Victory_Cinematic_Q_Func033001 takes nothing returns boolean
    return ( udg_VictorySkipped == true )
endfunction

function Trig_Victory_Cinematic_Q_Func036001 takes nothing returns boolean
    return ( udg_VictorySkipped == true )
endfunction

function Trig_Victory_Cinematic_Q_Func038A takes nothing returns nothing
    call PauseUnitBJ( true, GetEnumUnit() )
endfunction

function Trig_Victory_Cinematic_Q_Func044001 takes nothing returns boolean
    return ( udg_VictorySkipped == true )
endfunction

function Trig_Victory_Cinematic_Q_Func053001 takes nothing returns boolean
    return ( udg_VictorySkipped == true )
endfunction

function Trig_Victory_Cinematic_Q_Func054A takes nothing returns nothing
    call SetUnitFacingToFaceUnitTimed( GetEnumUnit(), udg_Arthas, 0.50 )
endfunction

function Trig_Victory_Cinematic_Q_Func056001 takes nothing returns boolean
    return ( udg_VictorySkipped == true )
endfunction

function Trig_Victory_Cinematic_Q_Func060001 takes nothing returns boolean
    return ( udg_VictorySkipped == true )
endfunction

function Trig_Victory_Cinematic_Q_Actions takes nothing returns nothing
    set udg_InCinematic = true
    // Fade Out
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 1.00, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 1.00 )
    // Set Up Scene
    call CinematicModeBJ( true, udg_APG1_Player )
    call ShowUnitShow( gg_unit_unec_0240 )
    call ShowUnitShow( gg_unit_unec_0173 )
    call TriggerSleepAction( 0.25 )
    call ConditionalTriggerExecute( gg_trg_Next_Level_Prep )
    call ConditionalTriggerExecute( gg_trg_Victory_Setup )
    call SetUnitFacingToFaceLocTimed( udg_Arthas, GetRectCenter(gg_rct_Exit_Arthas_Look_Here), 0 )
    call TriggerSleepAction( 0.25 )
    call CameraSetupApplyForPlayer( true, gg_cam_Exit_B01, udg_AP1_Player, 0 )
    // Fade In
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 1.00, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 1.00 )
    call EnableTrigger( gg_trg_Victory_Skipped )
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // CINEMATIC BEGINS - Cinematic Can Now Be Skipped
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // Enter the Aboms
    call IssuePointOrderLocBJ( udg_ExitAbom01, "move", GetRectCenter(gg_rct_Exit_Abom01_MoveTarg) )
    call IssuePointOrderLocBJ( udg_ExitAbom02, "move", GetRectCenter(gg_rct_Exit_Abom02_MoveTarg) )
    call IssuePointOrderLocBJ( udg_ExitAbom03, "move", GetRectCenter(gg_rct_Exit_Abom03_MoveTarg) )
    call IssuePointOrderLocBJ( udg_ExitAbom04, "move", GetRectCenter(gg_rct_Exit_Abom04_MoveTarg) )
    call VolumeGroupSetVolumeBJ( SOUND_VOLUMEGROUP_COMBAT, 90.00 )
    call VolumeGroupSetVolumeBJ( SOUND_VOLUMEGROUP_SPELLS, 90.00 )
    call TriggerSleepAction( 0.30 )
    if ( Trig_Victory_Cinematic_Q_Func030001() ) then
        return
    else
        call DoNothing(  )
    endif
    call PlaySoundOnUnitBJ( gg_snd_AbominationWhat4, 100, udg_ExitAbom01 )
    call TriggerSleepAction( 0.70 )
    if ( Trig_Victory_Cinematic_Q_Func033001() ) then
        return
    else
        call DoNothing(  )
    endif
    call PlaySoundOnUnitBJ( gg_snd_AbominationYes5, 100, udg_ExitAbom03 )
    call TriggerSleepAction( 1.00 )
    if ( Trig_Victory_Cinematic_Q_Func036001() ) then
        return
    else
        call DoNothing(  )
    endif
    // Pause Aboms
    call ForGroupBJ( udg_ExitAboms, function Trig_Victory_Cinematic_Q_Func038A )
    // Line
    call ConditionalTriggerExecute( gg_trg_Exit_Banshee_Strike )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Arthas, "TRIGSTR_247", gg_snd_L02Arthas37, "TRIGSTR_248", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_L02Arthas37, 0 )
    call TriggerSleepAction( 6.00 )
    if ( Trig_Victory_Cinematic_Q_Func044001() ) then
        return
    else
        call DoNothing(  )
    endif
    call IssuePointOrderLocBJ( udg_ExitBanshee01, "attack", GetRectCenter(gg_rct_Exit_Banshee01_MoveTargB) )
    call IssuePointOrderLocBJ( udg_ExitBanshee04, "attack", GetRectCenter(gg_rct_Exit_Banshee04_MoveTargB) )
    call SetSpeechVolumeGroupsBJ(  )
    call CameraSetupApplyForPlayer( true, gg_cam_Exit02, udg_AP1_Player, 0 )
    call CameraSetupApplyForPlayer( true, gg_cam_Exit03, udg_AP1_Player, ( GetSoundDurationBJ(gg_snd_L02Arthas26) + GetSoundDurationBJ(gg_snd_L02Banshee27) ) )
    // Line
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Arthas, "TRIGSTR_249", gg_snd_L02Arthas26, "TRIGSTR_250", bj_TIMETYPE_ADD, 0, false )
    call TriggerSleepAction( 3.00 )
    if ( Trig_Victory_Cinematic_Q_Func053001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ForGroupBJ( GetUnitsInRectOfPlayer(gg_rct_Exit_CombatArea, udg_P5_Sylvanas), function Trig_Victory_Cinematic_Q_Func054A )
    call WaitForSoundBJ( gg_snd_L02Arthas26, 0 )
    if ( Trig_Victory_Cinematic_Q_Func056001() ) then
        return
    else
        call DoNothing(  )
    endif
    // Line
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_ExitBanshee01, "TRIGSTR_251", gg_snd_L02Banshee27, "TRIGSTR_252", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_L02Banshee27, 0 )
    if ( Trig_Victory_Cinematic_Q_Func060001() ) then
        return
    else
        call DoNothing(  )
    endif
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // CINEMATIC ENDS - Cinematic Can No Longer Be Skipped
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    call DisableTrigger( gg_trg_Victory_Skipped )
    // Fade Out
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 2.00, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 2.00 )
    call ConditionalTriggerExecute( gg_trg_Next_Level_Run )
endfunction

//===========================================================================
function InitTrig_Victory_Cinematic_Q takes nothing returns nothing
    set gg_trg_Victory_Cinematic_Q = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Victory_Cinematic_Q, function Trig_Victory_Cinematic_Q_Actions )
endfunction

//===========================================================================
// Trigger: Victory Skipped
//===========================================================================
function Trig_Victory_Skipped_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_VictorySkipped = true
    // Fade Out
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 2.00, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 2.00 )
    call ConditionalTriggerExecute( gg_trg_Next_Level_Run )
endfunction

//===========================================================================
function InitTrig_Victory_Skipped takes nothing returns nothing
    set gg_trg_Victory_Skipped = CreateTrigger(  )
    call DisableTrigger( gg_trg_Victory_Skipped )
    call TriggerRegisterPlayerEventEndCinematic( gg_trg_Victory_Skipped, Player(0) )
    call TriggerAddAction( gg_trg_Victory_Skipped, function Trig_Victory_Skipped_Actions )
endfunction

//===========================================================================
// Trigger: Victory Setup
//===========================================================================
function Trig_Victory_Setup_Func004A takes nothing returns nothing
    call KillUnit( GetEnumUnit() )
endfunction

function Trig_Victory_Setup_Func032002002 takes nothing returns boolean
    return ( IsUnitHiddenBJ(GetFilterUnit()) == false )
endfunction

function Trig_Victory_Setup_Func033001002 takes nothing returns boolean
    return ( IsUnitHiddenBJ(GetFilterUnit()) == false )
endfunction

function Trig_Victory_Setup_Func034001002 takes nothing returns boolean
    return ( IsUnitHiddenBJ(GetFilterUnit()) == false )
endfunction

function Trig_Victory_Setup_Func037002 takes nothing returns nothing
    call ShowUnitHide( GetEnumUnit() )
endfunction

function Trig_Victory_Setup_Func040002 takes nothing returns nothing
    call ShowUnitShow( GetEnumUnit() )
endfunction

function Trig_Victory_Setup_Func041002 takes nothing returns nothing
    call ShowUnitShow( GetEnumUnit() )
endfunction

function Trig_Victory_Setup_Func043002 takes nothing returns nothing
    call SetItemVisibleBJ( false, GetEnumItem() )
endfunction

function Trig_Victory_Setup_Func045002 takes nothing returns nothing
    call UnitRemoveBuffsBJ( bj_REMOVEBUFFS_NONTLIFE, GetEnumUnit() )
endfunction

function Trig_Victory_Setup_Func046002 takes nothing returns nothing
    call UnitRemoveBuffsBJ( bj_REMOVEBUFFS_NONTLIFE, GetEnumUnit() )
endfunction

function Trig_Victory_Setup_Func047002 takes nothing returns nothing
    call UnitRemoveBuffsBJ( bj_REMOVEBUFFS_NONTLIFE, GetEnumUnit() )
endfunction

function Trig_Victory_Setup_Func048002 takes nothing returns nothing
    call UnitRemoveBuffsBJ( bj_REMOVEBUFFS_NONTLIFE, GetEnumUnit() )
endfunction

function Trig_Victory_Setup_Func049002 takes nothing returns nothing
    call UnitRemoveBuffsBJ( bj_REMOVEBUFFS_NONTLIFE, GetEnumUnit() )
endfunction

function Trig_Victory_Setup_Actions takes nothing returns nothing
    call SetPlayerAllianceStateBJ( udg_AP1_Player, udg_P7_Dreadlords, bj_ALLIANCE_NEUTRAL )
    call SetPlayerAllianceStateBJ( udg_P7_Dreadlords, udg_AP1_Player, bj_ALLIANCE_NEUTRAL )
    // Kill Enemies
    call ForGroupBJ( udg_ExitEnemyUnits, function Trig_Victory_Setup_Func004A )
    // Set Sky
    call SetSkyModel( "Environment\\Sky\\LordaeronSummerSky\\LordaeronSummerSky.mdl" )
    // Clear Selection
    call ClearSelection(  )
    // Revive Hero
    set udg_RevivalHero = udg_Arthas
    set udg_RevivalSpot = GetRectCenter(gg_rct_Exit_Arthas_Start)
    call ConditionalTriggerExecute( gg_trg_Cinematic_Revival )
    set udg_ArthasReturnSpot = udg_RevivalReturnSpot
    call SetUnitFacingTimed( udg_Arthas, 0.00, 0 )
    // Disable XP Gain
    call SuspendHeroXPBJ( false, udg_Arthas )
    // Pause Time Of Day
    // Pause Units
    call PauseAllUnitsBJ( true )
    call PauseUnitBJ( false, udg_Arthas )
    call PauseUnitBJ( false, udg_ExitAbom01 )
    call PauseUnitBJ( false, udg_ExitAbom02 )
    call PauseUnitBJ( false, udg_ExitAbom03 )
    call PauseUnitBJ( false, udg_ExitAbom04 )
    call PauseUnitBJ( false, udg_ExitGhoul01 )
    call PauseUnitBJ( false, udg_ExitGhoul02 )
    call PauseUnitBJ( false, udg_ExitBanshee01 )
    call PauseUnitBJ( false, udg_ExitBanshee02 )
    call PauseUnitBJ( false, udg_ExitBanshee03 )
    call PauseUnitBJ( false, udg_ExitBanshee04 )
    // Hide Units
    set udg_HiddenUnits = GetUnitsOfPlayerMatching(udg_AP1_Player, Condition(function Trig_Victory_Setup_Func032002002))
    call GroupAddGroup( GetUnitsOfPlayerMatching(udg_P7_Dreadlords, Condition(function Trig_Victory_Setup_Func033001002)), udg_HiddenUnits )
    call GroupAddGroup( GetUnitsOfPlayerMatching(Player(PLAYER_NEUTRAL_AGGRESSIVE), Condition(function Trig_Victory_Setup_Func034001002)), udg_HiddenUnits )
    call GroupAddUnitSimple( gg_unit_ncp3_0047, udg_HiddenUnits )
    call GroupRemoveUnitSimple( udg_Arthas, udg_HiddenUnits )
    call ForGroupBJ( udg_HiddenUnits, function Trig_Victory_Setup_Func037002 )
    call SetUnitPositionLocFacingBJ( udg_Arthas, GetRectCenter(gg_rct_Exit_Arthas_Start), 0.00 )
    // Unhide Actors
    call ForGroupBJ( udg_ExitAboms, function Trig_Victory_Setup_Func040002 )
    call ForGroupBJ( udg_ExitBanshees, function Trig_Victory_Setup_Func041002 )
    // Hide Items
    call EnumItemsInRectBJ( GetPlayableMapRect(), function Trig_Victory_Setup_Func043002 )
    // Remove Buffs
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_AP1_Player), function Trig_Victory_Setup_Func045002 )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_P2_Rescuables), function Trig_Victory_Setup_Func046002 )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_P5_Sylvanas), function Trig_Victory_Setup_Func047002 )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_P7_Dreadlords), function Trig_Victory_Setup_Func048002 )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_P8_KelThuzad), function Trig_Victory_Setup_Func049002 )
    // Disable Abilities
    call SetPlayerAbilityAvailableBJ( false, 'AUau', udg_AP1_Player )
    // Music Theme
    call PlayThematicMusicBJ( "Sound\\Music\\mp3Music\\DarkVictory.mp3" )
endfunction

//===========================================================================
function InitTrig_Victory_Setup takes nothing returns nothing
    set gg_trg_Victory_Setup = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Victory_Setup, function Trig_Victory_Setup_Actions )
endfunction

//===========================================================================
// Trigger: Exit Banshee Strike
//===========================================================================
function Trig_Exit_Banshee_Strike_Func005A takes nothing returns nothing
    call SetUnitManaPercentBJ( GetEnumUnit(), 100 )
    call UnitResetCooldown( GetEnumUnit() )
endfunction

function Trig_Exit_Banshee_Strike_Func009001 takes nothing returns boolean
    return ( udg_ExitSkipped == true )
endfunction

function Trig_Exit_Banshee_Strike_Func012001 takes nothing returns boolean
    return ( udg_ExitSkipped == true )
endfunction

function Trig_Exit_Banshee_Strike_Func017001 takes nothing returns boolean
    return ( udg_ExitSkipped == true )
endfunction

function Trig_Exit_Banshee_Strike_Func022A takes nothing returns nothing
    call PauseUnitBJ( false, GetEnumUnit() )
endfunction

function Trig_Exit_Banshee_Strike_Func024001 takes nothing returns boolean
    return ( udg_ExitSkipped == true )
endfunction

function Trig_Exit_Banshee_Strike_Actions takes nothing returns nothing
    // Stop Playing Nice
    call SetPlayerAllianceStateBJ( udg_P5_Sylvanas, udg_P7_Dreadlords, bj_ALLIANCE_NEUTRAL )
    call SetPlayerAllianceStateBJ( udg_P7_Dreadlords, udg_P5_Sylvanas, bj_ALLIANCE_NEUTRAL )
    // Prep For Attack
    call ForGroupBJ( udg_ExitBanshees, function Trig_Exit_Banshee_Strike_Func005A )
    // Possess
    call IssueTargetOrderBJ( udg_ExitBanshee03, "possession", udg_ExitAbom04 )
    call TriggerSleepAction( 0.50 )
    if ( Trig_Exit_Banshee_Strike_Func009001() ) then
        return
    else
        call DoNothing(  )
    endif
    call IssueTargetOrderBJ( udg_ExitBanshee02, "possession", udg_ExitAbom01 )
    call TriggerSleepAction( 2.00 )
    if ( Trig_Exit_Banshee_Strike_Func012001() ) then
        return
    else
        call DoNothing(  )
    endif
    // Attack
    call IssuePointOrderLocBJ( udg_ExitBanshee01, "attack", GetRectCenter(gg_rct_Exit_Banshee01_MoveTarg) )
    call IssuePointOrderLocBJ( udg_ExitBanshee04, "attack", GetRectCenter(gg_rct_Exit_Banshee04_MoveTarg) )
    call TriggerSleepAction( 0.70 )
    if ( Trig_Exit_Banshee_Strike_Func017001() ) then
        return
    else
        call DoNothing(  )
    endif
    // Stop Playing Nice
    call SetPlayerAllianceStateBJ( udg_P5_Sylvanas, udg_P7_Dreadlords, bj_ALLIANCE_UNALLIED )
    call SetPlayerAllianceStateBJ( udg_P7_Dreadlords, udg_P5_Sylvanas, bj_ALLIANCE_UNALLIED )
    // Unpause Aboms
    call ForGroupBJ( udg_ExitAboms, function Trig_Exit_Banshee_Strike_Func022A )
    call TriggerSleepAction( 1.60 )
    if ( Trig_Exit_Banshee_Strike_Func024001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitLifeBJ( udg_ExitAbom02, 5.00 )
    call SetUnitLifeBJ( udg_ExitAbom03, 5.00 )
endfunction

//===========================================================================
function InitTrig_Exit_Banshee_Strike takes nothing returns nothing
    set gg_trg_Exit_Banshee_Strike = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Exit_Banshee_Strike, function Trig_Exit_Banshee_Strike_Actions )
endfunction

//===========================================================================
// Trigger: Fountain MiniCinematic Q
//===========================================================================
function Trig_Fountain_MiniCinematic_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Fountain_MiniCinematic_Q_Func008001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_Fountain_MiniCinematic_Q_Actions takes nothing returns nothing
    set udg_InCinematic = true
    // Fade Out
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.25 )
    // Set Up Scene
    call CinematicModeExBJ( true, GetPlayersAll(), 0.2 )
    if ( Trig_Fountain_MiniCinematic_Q_Func008001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Fountain_Setup )
    call TriggerSleepAction( 0.10 )
    call CameraSetupApplyForPlayer( true, gg_cam_Fountain_Elevator_Shot, udg_AP1_Player, 0 )
    // Fade In
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.25 )
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // MINI-CINEMATIC BEGINS - Mini-Cinematics Cannot Be Skipped
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    call TriggerSleepAction( 0.20 )
    call PlaySoundAtPointBJ( gg_snd_Elevator, 100, GetDestructableLoc(udg_FountainElevator), 0 )
    call ChangeElevatorHeight( udg_FountainElevator, 2 )
    call TriggerSleepAction( 1.30 )
    call ChangeElevatorWalls( true, bj_ELEVATOR_WALL_TYPE_WEST, udg_FountainElevator )
    call ChangeElevatorWalls( true, bj_ELEVATOR_WALL_TYPE_EAST, udg_FountainElevator )
    call TriggerSleepAction( 0.50 )
    call CreateFogModifierRectBJ( true, udg_AP1_Player, FOG_OF_WAR_VISIBLE, gg_rct_Fountain_Elevator_VM )
    call DestroyFogModifier( GetLastCreatedFogModifier() )
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // MINI-CINEMATIC ENDS - Mini-Cinematics Cannot Be Skipped
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // Fade Out
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.25 )
    // Cleanup
    call ConditionalTriggerExecute( gg_trg_Fountain_Cleanup )
    call CinematicModeExBJ( false, GetPlayersAll(), 0.2 )
    call TriggerSleepAction( 0.10 )
    // Fade In
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.25 )
    set udg_InCinematic = false
    call TriggerSleepAction( 0.20 )
    call SetCameraQuickPositionLocForPlayer( udg_AP1_Player, GetRectCenter(gg_rct_Fountain_Elevator_Ping) )
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_Fountain_Elevator_Ping), 4.00 )
    call TriggerSleepAction( 1.50 )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Fountain_MiniCinematic_Q takes nothing returns nothing
    set gg_trg_Fountain_MiniCinematic_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Fountain_MiniCinematic_Q, Condition( function Trig_Fountain_MiniCinematic_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Fountain_MiniCinematic_Q, function Trig_Fountain_MiniCinematic_Q_Actions )
endfunction

//===========================================================================
// Trigger: Fountain Setup
//===========================================================================
function Trig_Fountain_Setup_Func014002002 takes nothing returns boolean
    return ( IsUnitHiddenBJ(GetFilterUnit()) == false )
endfunction

function Trig_Fountain_Setup_Func015002 takes nothing returns nothing
    call ShowUnitHide( GetEnumUnit() )
endfunction

function Trig_Fountain_Setup_Func017002 takes nothing returns nothing
    call SetItemVisibleBJ( false, GetEnumItem() )
endfunction

function Trig_Fountain_Setup_Actions takes nothing returns nothing
    // Save Camera Position
    set udg_CameraReturnPoint = GetCameraTargetPositionLoc()
    // Set Sky
    call SetSkyModel( "Environment\\Sky\\LordaeronSummerSky\\LordaeronSummerSky.mdl" )
    // Save Selection
    set udg_SelectedUnits = GetUnitsSelectedAll(udg_AP1_Player)
    call ClearSelection(  )
    // Disable XP Gain
    call SuspendHeroXPBJ( false, udg_Arthas )
    // Pause Time Of Day
    // Pause Units
    call PauseAllUnitsBJ( true )
    // Hide Units
    set udg_HiddenUnits = GetUnitsOfPlayerMatching(udg_AP1_Player, Condition(function Trig_Fountain_Setup_Func014002002))
    call ForGroupBJ( udg_HiddenUnits, function Trig_Fountain_Setup_Func015002 )
    // Hide Items
    call EnumItemsInRectBJ( GetPlayableMapRect(), function Trig_Fountain_Setup_Func017002 )
    // Remove Buffs
    // Disable Abilities
    call SetPlayerAbilityAvailableBJ( false, 'AUau', udg_AP1_Player )
endfunction

//===========================================================================
function InitTrig_Fountain_Setup takes nothing returns nothing
    set gg_trg_Fountain_Setup = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Fountain_Setup, function Trig_Fountain_Setup_Actions )
endfunction

//===========================================================================
// Trigger: Fountain Cleanup
//===========================================================================
function Trig_Fountain_Cleanup_Func004002 takes nothing returns nothing
    call SetItemVisibleBJ( true, GetEnumItem() )
endfunction

function Trig_Fountain_Cleanup_Func006002 takes nothing returns nothing
    call ShowUnitShow( GetEnumUnit() )
endfunction

function Trig_Fountain_Cleanup_Func012001 takes nothing returns boolean
    return ( udg_ExpDisabledForArthas == false )
endfunction

function Trig_Fountain_Cleanup_Actions takes nothing returns nothing
    // Restore Abilities
    call SetPlayerAbilityAvailableBJ( true, 'AUau', udg_AP1_Player )
    // Unhide Items
    call EnumItemsInRectBJ( GetPlayableMapRect(), function Trig_Fountain_Cleanup_Func004002 )
    // Unhide Units
    call ForGroupBJ( udg_HiddenUnits, function Trig_Fountain_Cleanup_Func006002 )
    // Unpause Units
    call PauseAllUnitsBJ( false )
    call ConditionalTriggerExecute( gg_trg_Post_Cinematic_Pause )
    // Unpause Time Of Day
    // Re-enable XP Gain
    if ( Trig_Fountain_Cleanup_Func012001() ) then
        call SuspendHeroXPBJ( true, udg_Arthas )
    else
        call DoNothing(  )
    endif
    // Restore Selection
    call SelectGroupBJ( udg_SelectedUnits )
    // Reset Sky
    call SetSkyModel( null )
    // Reset Camera
    call CameraResetSmoothingFactorBJ(  )
    call ResetToGameCameraForPlayer( udg_AP1_Player, 0 )
    call PanCameraToTimedLocForPlayer( udg_AP1_Player, udg_CameraReturnPoint, 0 )
endfunction

//===========================================================================
function InitTrig_Fountain_Cleanup takes nothing returns nothing
    set gg_trg_Fountain_Cleanup = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Fountain_Cleanup, function Trig_Fountain_Cleanup_Actions )
endfunction

//===========================================================================
// Trigger: Next Level Prep
//===========================================================================
function Trig_Next_Level_Prep_Actions takes nothing returns nothing
    // Remove Quest Items
    // Save Heroes
    call InitGameCacheBJ( "Campaigns.w3v" )
    call StoreUnitBJ( udg_Arthas, "Arthas", "UndeadX04", GetLastCreatedGameCacheBJ() )
    call SaveGameCacheBJ( GetLastCreatedGameCacheBJ() )
    // Enable Missions, Campaigns, Cinematics
    call SetMissionAvailableBJ( true, bj_MISSION_INDEX_XU03 )
    call SetMissionAvailableBJ( true, bj_MISSION_INDEX_XU04 )
endfunction

//===========================================================================
function InitTrig_Next_Level_Prep takes nothing returns nothing
    set gg_trg_Next_Level_Prep = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Next_Level_Prep, function Trig_Next_Level_Prep_Actions )
endfunction

//===========================================================================
// Trigger: Next Level Run
//===========================================================================
function Trig_Next_Level_Run_Actions takes nothing returns nothing
    // Set Next Level and Victory
    call SetNextLevelBJ( "Maps\\FrozenThrone\\Campaign\\UndeadX02Interlude.w3x" )
    call CustomVictoryBJ( udg_AP1_Player, true, true )
endfunction

//===========================================================================
function InitTrig_Next_Level_Run takes nothing returns nothing
    set gg_trg_Next_Level_Run = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Next_Level_Run, function Trig_Next_Level_Run_Actions )
endfunction

//===========================================================================
// Trigger: Victory Cheat
//===========================================================================
function Trig_Victory_Cheat_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Victory_Cheat_Actions takes nothing returns nothing
    set udg_GameOver = true
    call ConditionalTriggerExecute( gg_trg_Next_Level_Prep )
    call ConditionalTriggerExecute( gg_trg_Next_Level_Run )
endfunction

//===========================================================================
function InitTrig_Victory_Cheat takes nothing returns nothing
    set gg_trg_Victory_Cheat = CreateTrigger(  )
    call TriggerRegisterPlayerEventVictory( gg_trg_Victory_Cheat, Player(0) )
    call TriggerAddCondition( gg_trg_Victory_Cheat, Condition( function Trig_Victory_Cheat_Conditions ) )
    call TriggerAddAction( gg_trg_Victory_Cheat, function Trig_Victory_Cheat_Actions )
endfunction

//===========================================================================
// Trigger: Defeat Cheat
//===========================================================================
function Trig_Defeat_Cheat_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Defeat_Cheat_Actions takes nothing returns nothing
    set udg_GameOver = true
    call CustomDefeatBJ( udg_AP1_Player, "TRIGSTR_012" )
endfunction

//===========================================================================
function InitTrig_Defeat_Cheat takes nothing returns nothing
    set gg_trg_Defeat_Cheat = CreateTrigger(  )
    call TriggerRegisterPlayerEventDefeat( gg_trg_Defeat_Cheat, Player(0) )
    call TriggerAddCondition( gg_trg_Defeat_Cheat, Condition( function Trig_Defeat_Cheat_Conditions ) )
    call TriggerAddAction( gg_trg_Defeat_Cheat, function Trig_Defeat_Cheat_Actions )
endfunction

//===========================================================================
// Trigger: Quest Exit Create
//===========================================================================
function Trig_Quest_Exit_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_Exit_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestBJ( bj_QUESTTYPE_REQ_UNDISCOVERED, "TRIGSTR_013", "TRIGSTR_014", "ReplaceableTextures\\CommandButtons\\BTNArcaniteArchitecture.tga" )
    set udg_QuestExit = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( udg_QuestExit, "TRIGSTR_015" )
    set udg_QuestExitReq1 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( udg_QuestExit, "TRIGSTR_151" )
    set udg_QuestExitReq2 = GetLastCreatedQuestItemBJ()
endfunction

//===========================================================================
function InitTrig_Quest_Exit_Create takes nothing returns nothing
    set gg_trg_Quest_Exit_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_Exit_Create, Condition( function Trig_Quest_Exit_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_Exit_Create, function Trig_Quest_Exit_Create_Actions )
endfunction

//===========================================================================
// Trigger: Quest Exit Discover
//===========================================================================
function Trig_Quest_Exit_Discover_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_Exit_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestExit, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_016" )
endfunction

//===========================================================================
function InitTrig_Quest_Exit_Discover takes nothing returns nothing
    set gg_trg_Quest_Exit_Discover = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Exit_Discover, function Trig_Quest_Exit_Discover_Actions )
endfunction

//===========================================================================
// Trigger: Quest Exit Completed
//===========================================================================
function Trig_Quest_Exit_Completed_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_Exit_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestExit, true )
    call QuestItemSetCompletedBJ( udg_QuestExitReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestExitReq2, true )
    call QuestSetCompletedBJ( udg_QuestExit, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_017" )
endfunction

//===========================================================================
function InitTrig_Quest_Exit_Completed takes nothing returns nothing
    set gg_trg_Quest_Exit_Completed = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Exit_Completed, function Trig_Quest_Exit_Completed_Actions )
endfunction

//===========================================================================
// Trigger: Quest Meat Create
//===========================================================================
function Trig_Quest_Meat_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_Meat_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestBJ( bj_QUESTTYPE_OPT_UNDISCOVERED, "TRIGSTR_162", "TRIGSTR_163", "ReplaceableTextures\\CommandButtons\\BTNMeatWagon.tga" )
    set udg_QuestMeat = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( udg_QuestMeat, "TRIGSTR_164" )
    set udg_QuestMeatReq1 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( udg_QuestMeat, "TRIGSTR_165" )
    set udg_QuestMeatReq2 = GetLastCreatedQuestItemBJ()
endfunction

//===========================================================================
function InitTrig_Quest_Meat_Create takes nothing returns nothing
    set gg_trg_Quest_Meat_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_Meat_Create, Condition( function Trig_Quest_Meat_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_Meat_Create, function Trig_Quest_Meat_Create_Actions )
endfunction

//===========================================================================
// Trigger: Quest Meat Discover
//===========================================================================
function Trig_Quest_Meat_Discover_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_Meat_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestMeat, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_166" )
endfunction

//===========================================================================
function InitTrig_Quest_Meat_Discover takes nothing returns nothing
    set gg_trg_Quest_Meat_Discover = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Meat_Discover, function Trig_Quest_Meat_Discover_Actions )
endfunction

//===========================================================================
// Trigger: Quest Meat UpdateA
//===========================================================================
function Trig_Quest_Meat_UpdateA_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_Meat_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestMeat, true )
    call QuestItemSetCompletedBJ( udg_QuestMeatReq1, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_168" )
endfunction

//===========================================================================
function InitTrig_Quest_Meat_UpdateA takes nothing returns nothing
    set gg_trg_Quest_Meat_UpdateA = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Meat_UpdateA, function Trig_Quest_Meat_UpdateA_Actions )
endfunction

//===========================================================================
// Trigger: Quest Meat UpdateB
//===========================================================================
function Trig_Quest_Meat_UpdateB_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_Meat_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestMeat, true )
    call QuestItemSetCompletedBJ( udg_QuestMeatReq2, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_238" )
endfunction

//===========================================================================
function InitTrig_Quest_Meat_UpdateB takes nothing returns nothing
    set gg_trg_Quest_Meat_UpdateB = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Meat_UpdateB, function Trig_Quest_Meat_UpdateB_Actions )
endfunction

//===========================================================================
// Trigger: Quest Meat Completed
//===========================================================================
function Trig_Quest_Meat_Completed_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_Meat_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestMeat, true )
    call QuestItemSetCompletedBJ( udg_QuestMeatReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestMeatReq2, true )
    call QuestSetCompletedBJ( udg_QuestMeat, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_167" )
endfunction

//===========================================================================
function InitTrig_Quest_Meat_Completed takes nothing returns nothing
    set gg_trg_Quest_Meat_Completed = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Meat_Completed, function Trig_Quest_Meat_Completed_Actions )
endfunction

//===========================================================================
// Trigger: Mission Failed Arthas Dead
//===========================================================================
function Trig_Mission_Failed_Arthas_Dead_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_MISSIONFAILED, "TRIGSTR_025" )
endfunction

//===========================================================================
function InitTrig_Mission_Failed_Arthas_Dead takes nothing returns nothing
    set gg_trg_Mission_Failed_Arthas_Dead = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Mission_Failed_Arthas_Dead, function Trig_Mission_Failed_Arthas_Dead_Actions )
endfunction

//===========================================================================
// Trigger: Quest Exit Discover Q
//===========================================================================
function Trig_Quest_Exit_Discover_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_Exit_Discover_Q_Actions takes nothing returns nothing
    // Reveal the Exit
    call CreateFogModifierRadiusLocBJ( true, udg_AP1_Player, FOG_OF_WAR_VISIBLE, GetRectCenter(gg_rct_Exit_VM), 500.00 )
    call DestroyFogModifier( GetLastCreatedFogModifier() )
    // Ping the Minimap
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_Victory_Tripwire), 5.00 )
    call SetCameraQuickPositionLocForPlayer( udg_AP1_Player, GetRectCenter(gg_rct_Victory_Tripwire) )
    // Quest Message
    call ConditionalTriggerExecute( gg_trg_Quest_Exit_Discover )
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Quest_Exit_Discover_Q takes nothing returns nothing
    set gg_trg_Quest_Exit_Discover_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_Exit_Discover_Q, Condition( function Trig_Quest_Exit_Discover_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_Exit_Discover_Q, function Trig_Quest_Exit_Discover_Q_Actions )
endfunction

//===========================================================================
// Trigger: Quest Exit Completed Q
//===========================================================================
function Trig_Quest_Exit_Completed_Q_Actions takes nothing returns nothing
    call PolledWait( 0.50 )
    // Quest Update
    call ConditionalTriggerExecute( gg_trg_Quest_Exit_Completed )
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Quest_Exit_Completed_Q takes nothing returns nothing
    set gg_trg_Quest_Exit_Completed_Q = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Exit_Completed_Q, function Trig_Quest_Exit_Completed_Q_Actions )
endfunction

//===========================================================================
// Trigger: Hint Keep Clean Q
//===========================================================================
function Trig_Hint_Keep_Clean_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hint_Keep_Clean_Q_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_027" )
    call TriggerSleepAction( bj_QUEUE_DELAY_HINT )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Hint_Keep_Clean_Q takes nothing returns nothing
    set gg_trg_Hint_Keep_Clean_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Hint_Keep_Clean_Q, Condition( function Trig_Hint_Keep_Clean_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Hint_Keep_Clean_Q, function Trig_Hint_Keep_Clean_Q_Actions )
endfunction

//===========================================================================
// Trigger: Secret Found Q
//===========================================================================
function Trig_Secret_Found_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Secret_Found_Q_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_SECRET, "TRIGSTR_199" )
    call TriggerSleepAction( bj_QUEUE_DELAY_HINT )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Secret_Found_Q takes nothing returns nothing
    set gg_trg_Secret_Found_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Secret_Found_Q, Condition( function Trig_Secret_Found_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Secret_Found_Q, function Trig_Secret_Found_Q_Actions )
endfunction

//===========================================================================
// Trigger: Victory Exit Reached
//===========================================================================
function Trig_Victory_Exit_Reached_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( GetEnteringUnit() == udg_Arthas ) ) then
        return false
    endif
    return true
endfunction

function Trig_Victory_Exit_Reached_Actions takes nothing returns nothing
    set udg_GameOver = true
    call SetUnitInvulnerable( udg_Arthas, true )
    call QueuedTriggerAddBJ( gg_trg_Quest_Exit_Completed_Q, true )
    call QueuedTriggerAddBJ( gg_trg_Victory_Cinematic_Q, true )
endfunction

//===========================================================================
function InitTrig_Victory_Exit_Reached takes nothing returns nothing
    set gg_trg_Victory_Exit_Reached = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Victory_Exit_Reached, gg_rct_Victory_Tripwire )
    call TriggerAddCondition( gg_trg_Victory_Exit_Reached, Condition( function Trig_Victory_Exit_Reached_Conditions ) )
    call TriggerAddAction( gg_trg_Victory_Exit_Reached, function Trig_Victory_Exit_Reached_Actions )
endfunction

//===========================================================================
// Trigger: Defeat Arthas Dead
//===========================================================================
function Trig_Defeat_Arthas_Dead_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( GetDyingUnit() == udg_Arthas ) ) then
        return false
    endif
    return true
endfunction

function Trig_Defeat_Arthas_Dead_Actions takes nothing returns nothing
    set udg_GameOver = true
    call TriggerSleepAction( 2 )
    call ConditionalTriggerExecute( gg_trg_Mission_Failed_Arthas_Dead )
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call CustomDefeatBJ( udg_AP1_Player, "TRIGSTR_029" )
endfunction

//===========================================================================
function InitTrig_Defeat_Arthas_Dead takes nothing returns nothing
    set gg_trg_Defeat_Arthas_Dead = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Defeat_Arthas_Dead, Player(0), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Defeat_Arthas_Dead, Condition( function Trig_Defeat_Arthas_Dead_Conditions ) )
    call TriggerAddAction( gg_trg_Defeat_Arthas_Dead, function Trig_Defeat_Arthas_Dead_Actions )
endfunction

//===========================================================================
// Trigger: Armory Found
//===========================================================================
function Trig_Armory_Found_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'ushd' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'uplg' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Armory_Found_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call QueuedTriggerAddBJ( gg_trg_Armory_Found_Q, true )
endfunction

//===========================================================================
function InitTrig_Armory_Found takes nothing returns nothing
    set gg_trg_Armory_Found = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Armory_Found, gg_rct_Armory_Tripwire )
    call TriggerAddCondition( gg_trg_Armory_Found, Condition( function Trig_Armory_Found_Conditions ) )
    call TriggerAddAction( gg_trg_Armory_Found, function Trig_Armory_Found_Actions )
endfunction

//===========================================================================
// Trigger: Armory Found Q
//===========================================================================
function Trig_Armory_Found_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( IsUnitGroupDeadBJ(udg_ArmoryGuards) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Armory_Found_Q_Actions takes nothing returns nothing
    // Camera Pan
    set udg_PolitePanTarget = GetRectCenter(gg_rct_Armory_PanTarg)
    call ConditionalTriggerExecute( gg_trg_Polite_Pan )
    // Ping and Reveal
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_Armory_Ping), 4.00 )
    call SetCameraQuickPositionLocForPlayer( udg_AP1_Player, GetRectCenter(gg_rct_Armory_Ping) )
    call CreateFogModifierRectBJ( true, udg_AP1_Player, FOG_OF_WAR_VISIBLE, gg_rct_Armory_VM )
    set udg_ArmoryRoomVM = GetLastCreatedFogModifier()
    // Line
    call SetSpeechVolumeGroupsBJ(  )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Arthas, "TRIGSTR_209", gg_snd_L02Arthas23, "TRIGSTR_210", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_L02Arthas23, 0 )
    call VolumeGroupResetBJ(  )
    call ConditionalTriggerExecute( gg_trg_Quest_Meat_Discover )
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call DestroyFogModifier( udg_ArmoryRoomVM )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Armory_Found_Q takes nothing returns nothing
    set gg_trg_Armory_Found_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Armory_Found_Q, Condition( function Trig_Armory_Found_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Armory_Found_Q, function Trig_Armory_Found_Q_Actions )
endfunction

//===========================================================================
// Trigger: Armory Guards Dead
//===========================================================================
function Trig_Armory_Guards_Dead_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( IsUnitGroupDeadBJ(udg_ArmoryGuards) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Armory_Guards_Dead_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call QueuedTriggerAddBJ( gg_trg_Armory_Guards_Dead_Q, true )
endfunction

//===========================================================================
function InitTrig_Armory_Guards_Dead takes nothing returns nothing
    set gg_trg_Armory_Guards_Dead = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Armory_Guards_Dead, Player(6), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Armory_Guards_Dead, Condition( function Trig_Armory_Guards_Dead_Conditions ) )
    call TriggerAddAction( gg_trg_Armory_Guards_Dead, function Trig_Armory_Guards_Dead_Actions )
endfunction

//===========================================================================
// Trigger: Armory Guards Dead Q
//===========================================================================
function Trig_Armory_Guards_Dead_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( IsQuestCompleted(udg_QuestMeat) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Armory_Guards_Dead_Q_Actions takes nothing returns nothing
    call TriggerSleepAction( 1.00 )
    // Quest Message
    call ConditionalTriggerExecute( gg_trg_Meat_Quest_Msg_A )
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Armory_Guards_Dead_Q takes nothing returns nothing
    set gg_trg_Armory_Guards_Dead_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Armory_Guards_Dead_Q, Condition( function Trig_Armory_Guards_Dead_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Armory_Guards_Dead_Q, function Trig_Armory_Guards_Dead_Q_Actions )
endfunction

//===========================================================================
// Trigger: Meat Quest Msg A
//===========================================================================
function Trig_Meat_Quest_Msg_A_Func001C takes nothing returns boolean
    if ( not ( IsQuestItemCompleted(udg_QuestMeatReq2) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Meat_Quest_Msg_A_Actions takes nothing returns nothing
    if ( Trig_Meat_Quest_Msg_A_Func001C() ) then
        call ConditionalTriggerExecute( gg_trg_Quest_Meat_UpdateA )
    else
        call ConditionalTriggerExecute( gg_trg_Quest_Meat_Completed )
    endif
endfunction

//===========================================================================
function InitTrig_Meat_Quest_Msg_A takes nothing returns nothing
    set gg_trg_Meat_Quest_Msg_A = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Meat_Quest_Msg_A, function Trig_Meat_Quest_Msg_A_Actions )
endfunction

//===========================================================================
// Trigger: Meat Quest Msg B
//===========================================================================
function Trig_Meat_Quest_Msg_B_Func001C takes nothing returns boolean
    if ( not ( IsQuestItemCompleted(udg_QuestMeatReq1) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Meat_Quest_Msg_B_Actions takes nothing returns nothing
    if ( Trig_Meat_Quest_Msg_B_Func001C() ) then
        call ConditionalTriggerExecute( gg_trg_Quest_Meat_UpdateB )
    else
        call ConditionalTriggerExecute( gg_trg_Quest_Meat_Completed )
    endif
endfunction

//===========================================================================
function InitTrig_Meat_Quest_Msg_B takes nothing returns nothing
    set gg_trg_Meat_Quest_Msg_B = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Meat_Quest_Msg_B, function Trig_Meat_Quest_Msg_B_Actions )
endfunction

//===========================================================================
// Trigger: Combat Detected
//
// To use combat detection, just enable these two triggers and check the "InCombat" variable to determine whether or not the player is in combat.
//===========================================================================
function Trig_Combat_Detected_Actions takes nothing returns nothing
    call StartTimerBJ( udg_CombatCheckTimer, false, 3.00 )
    set udg_InCombat = true
endfunction

//===========================================================================
function InitTrig_Combat_Detected takes nothing returns nothing
    set gg_trg_Combat_Detected = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Combat_Detected, Player(0), EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddAction( gg_trg_Combat_Detected, function Trig_Combat_Detected_Actions )
endfunction

//===========================================================================
// Trigger: Combat Resolved
//===========================================================================
function Trig_Combat_Resolved_Actions takes nothing returns nothing
    set udg_InCombat = false
endfunction

//===========================================================================
function InitTrig_Combat_Resolved takes nothing returns nothing
    set gg_trg_Combat_Resolved = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Combat_Resolved, udg_CombatCheckTimer )
    call TriggerAddAction( gg_trg_Combat_Resolved, function Trig_Combat_Resolved_Actions )
endfunction

//===========================================================================
// Trigger: Marketplace Config
//===========================================================================
function Trig_Marketplace_Config_Actions takes nothing returns nothing
    call AddItemToStockBJ( 'pgma', udg_Marketplace, 1, 1 )
    call AddItemToStockBJ( 'mnst', udg_Marketplace, 1, 1 )
    call AddItemToStockBJ( 'pres', udg_Marketplace, 1, 1 )
endfunction

//===========================================================================
function InitTrig_Marketplace_Config takes nothing returns nothing
    set gg_trg_Marketplace_Config = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Marketplace_Config, function Trig_Marketplace_Config_Actions )
endfunction

//===========================================================================
// Trigger: Marketplace Item Sold
//===========================================================================
function Trig_Marketplace_Item_Sold_Actions takes nothing returns nothing
    call RemoveItemFromStockBJ( GetItemTypeId(GetSoldItem()), GetSellingUnit() )
endfunction

//===========================================================================
function InitTrig_Marketplace_Item_Sold takes nothing returns nothing
    set gg_trg_Marketplace_Item_Sold = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Marketplace_Item_Sold, Player(PLAYER_NEUTRAL_PASSIVE), EVENT_PLAYER_UNIT_SELL_ITEM )
    call TriggerAddAction( gg_trg_Marketplace_Item_Sold, function Trig_Marketplace_Item_Sold_Actions )
endfunction

//===========================================================================
// Trigger: Fountain Plate
//===========================================================================
function Trig_Fountain_Plate_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetEnteringUnit(), UNIT_TYPE_GROUND) == true ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'ushd' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'uplg' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Fountain_Plate_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Activate Plate
    call KillDestructable( udg_FountainPlate )
    call PlaySoundAtPointBJ( gg_snd_Switch, 100, GetDestructableLoc(udg_FountainPlate), 0 )
    call TriggerSleepAction( 0.80 )
    // Plate Effect
    call QueuedTriggerAddBJ( gg_trg_Fountain_MiniCinematic_Q, true )
endfunction

//===========================================================================
function InitTrig_Fountain_Plate takes nothing returns nothing
    set gg_trg_Fountain_Plate = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Fountain_Plate, gg_rct_Fountain_Room_Plate )
    call TriggerAddCondition( gg_trg_Fountain_Plate, Condition( function Trig_Fountain_Plate_Conditions ) )
    call TriggerAddAction( gg_trg_Fountain_Plate, function Trig_Fountain_Plate_Actions )
endfunction

//===========================================================================
// Trigger: Bridge Plate C
//===========================================================================
function Trig_Bridge_Plate_C_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetEnteringUnit(), UNIT_TYPE_GROUND) == true ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'ushd' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'uplg' ) ) then
        return false
    endif
    if ( not ( udg_BridgePlateBusy == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Bridge_Plate_C_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_BridgePlateBusy = true
    // Activate Plate
    call KillDestructable( udg_BridgePlateC )
    call PlaySoundAtPointBJ( gg_snd_Switch, 100, GetDestructableLoc(udg_BridgePlateC), 0 )
    call TriggerSleepAction( 0.80 )
    // Plate Effect
    call ConditionalTriggerExecute( gg_trg_Bridge_Elevator_Falling )
    call PolledWait( 1.50 )
    set udg_BridgePlateBusy = false
endfunction

//===========================================================================
function InitTrig_Bridge_Plate_C takes nothing returns nothing
    set gg_trg_Bridge_Plate_C = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Bridge_Plate_C, gg_rct_Bridge_PlateC )
    call TriggerAddCondition( gg_trg_Bridge_Plate_C, Condition( function Trig_Bridge_Plate_C_Conditions ) )
    call TriggerAddAction( gg_trg_Bridge_Plate_C, function Trig_Bridge_Plate_C_Actions )
endfunction

//===========================================================================
// Trigger: Bridge Plate TripwireA
//===========================================================================
function Trig_Bridge_Plate_TripwireA_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetEnteringUnit(), UNIT_TYPE_GROUND) == true ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'ushd' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'uplg' ) ) then
        return false
    endif
    if ( not ( udg_BridgePlateBusy == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Bridge_Plate_TripwireA_Actions takes nothing returns nothing
    set udg_BridgePlateTouched = udg_BridgePlateA
    call ConditionalTriggerExecute( gg_trg_Bridge_Plate )
endfunction

//===========================================================================
function InitTrig_Bridge_Plate_TripwireA takes nothing returns nothing
    set gg_trg_Bridge_Plate_TripwireA = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Bridge_Plate_TripwireA, gg_rct_Bridge_PlateA )
    call TriggerAddCondition( gg_trg_Bridge_Plate_TripwireA, Condition( function Trig_Bridge_Plate_TripwireA_Conditions ) )
    call TriggerAddAction( gg_trg_Bridge_Plate_TripwireA, function Trig_Bridge_Plate_TripwireA_Actions )
endfunction

//===========================================================================
// Trigger: Bridge Plate TripwireB
//===========================================================================
function Trig_Bridge_Plate_TripwireB_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetEnteringUnit(), UNIT_TYPE_GROUND) == true ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'ushd' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'uplg' ) ) then
        return false
    endif
    if ( not ( udg_BridgePlateBusy == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Bridge_Plate_TripwireB_Actions takes nothing returns nothing
    set udg_BridgePlateTouched = udg_BridgePlateB
    call ConditionalTriggerExecute( gg_trg_Bridge_Plate )
endfunction

//===========================================================================
function InitTrig_Bridge_Plate_TripwireB takes nothing returns nothing
    set gg_trg_Bridge_Plate_TripwireB = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Bridge_Plate_TripwireB, gg_rct_Bridge_PlateB )
    call TriggerAddCondition( gg_trg_Bridge_Plate_TripwireB, Condition( function Trig_Bridge_Plate_TripwireB_Conditions ) )
    call TriggerAddAction( gg_trg_Bridge_Plate_TripwireB, function Trig_Bridge_Plate_TripwireB_Actions )
endfunction

//===========================================================================
// Trigger: Bridge Plate
//===========================================================================
function Trig_Bridge_Plate_Actions takes nothing returns nothing
    set udg_BridgePlateBusy = true
    // Activate Plate
    call KillDestructable( udg_BridgePlateA )
    call KillDestructable( udg_BridgePlateB )
    call PlaySoundAtPointBJ( gg_snd_Switch, 100, GetDestructableLoc(udg_BridgePlateTouched), 0 )
    call TriggerSleepAction( 0.80 )
    // Plate Effect
    call ConditionalTriggerExecute( gg_trg_Bridge_Elevator_Rising )
    call PolledWait( 8.00 )
    call ConditionalTriggerExecute( gg_trg_Bridge_Elevator_Falling )
    call PolledWait( 1.50 )
    // Reset Plate
    call DestructableRestoreLife( udg_BridgePlateA, GetDestructableMaxLife(udg_BridgePlateA), true )
    call DestructableRestoreLife( udg_BridgePlateB, GetDestructableMaxLife(udg_BridgePlateB), true )
    call PlaySoundBJ( gg_snd_Switch01 )
    call PolledWait( 0.20 )
    set udg_BridgePlateBusy = false
endfunction

//===========================================================================
function InitTrig_Bridge_Plate takes nothing returns nothing
    set gg_trg_Bridge_Plate = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Bridge_Plate, function Trig_Bridge_Plate_Actions )
endfunction

//===========================================================================
// Trigger: Bridge Elevator Rising
//===========================================================================
function Trig_Bridge_Elevator_Rising_Actions takes nothing returns nothing
    // Close Walls
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_WEST, udg_BridgeElevatorA )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_EAST, udg_BridgeElevatorC )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_NORTH, udg_BridgeElevatorA )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_NORTH, udg_BridgeElevatorB )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_NORTH, udg_BridgeElevatorC )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_SOUTH, udg_BridgeElevatorA )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_SOUTH, udg_BridgeElevatorB )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_SOUTH, udg_BridgeElevatorC )
    // Move Platform
    call ChangeElevatorHeight( udg_BridgeElevatorA, 2 )
    call ChangeElevatorHeight( udg_BridgeElevatorB, 2 )
    call ChangeElevatorHeight( udg_BridgeElevatorC, 2 )
    call PlaySoundAtPointBJ( gg_snd_Elevator, 100, GetDestructableLoc(udg_BridgeElevatorB), 0 )
    call PolledWait( 1.40 )
    // Open Walls
    call ChangeElevatorWalls( true, bj_ELEVATOR_WALL_TYPE_WEST, udg_BridgeElevatorA )
    call ChangeElevatorWalls( true, bj_ELEVATOR_WALL_TYPE_EAST, udg_BridgeElevatorC )
endfunction

//===========================================================================
function InitTrig_Bridge_Elevator_Rising takes nothing returns nothing
    set gg_trg_Bridge_Elevator_Rising = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Bridge_Elevator_Rising, function Trig_Bridge_Elevator_Rising_Actions )
endfunction

//===========================================================================
// Trigger: Bridge Elevator Falling
//===========================================================================
function Trig_Bridge_Elevator_Falling_Actions takes nothing returns nothing
    // Close Walls
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_WEST, udg_BridgeElevatorA )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_EAST, udg_BridgeElevatorC )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_NORTH, udg_BridgeElevatorA )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_NORTH, udg_BridgeElevatorB )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_NORTH, udg_BridgeElevatorC )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_SOUTH, udg_BridgeElevatorA )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_SOUTH, udg_BridgeElevatorB )
    call ChangeElevatorWalls( false, bj_ELEVATOR_WALL_TYPE_SOUTH, udg_BridgeElevatorC )
    // Move Platform
    call ChangeElevatorHeight( udg_BridgeElevatorA, 1 )
    call ChangeElevatorHeight( udg_BridgeElevatorB, 1 )
    call ChangeElevatorHeight( udg_BridgeElevatorC, 1 )
    call PlaySoundAtPointBJ( gg_snd_Elevator, 100, GetDestructableLoc(udg_BridgeElevatorB), 0 )
    call PolledWait( 1.40 )
    // Open Walls
    call ChangeElevatorWalls( true, bj_ELEVATOR_WALL_TYPE_NORTH, udg_BridgeElevatorA )
    call ChangeElevatorWalls( true, bj_ELEVATOR_WALL_TYPE_NORTH, udg_BridgeElevatorB )
    call ChangeElevatorWalls( true, bj_ELEVATOR_WALL_TYPE_NORTH, udg_BridgeElevatorC )
    call ChangeElevatorWalls( true, bj_ELEVATOR_WALL_TYPE_SOUTH, udg_BridgeElevatorA )
    call ChangeElevatorWalls( true, bj_ELEVATOR_WALL_TYPE_SOUTH, udg_BridgeElevatorB )
    call ChangeElevatorWalls( true, bj_ELEVATOR_WALL_TYPE_SOUTH, udg_BridgeElevatorC )
endfunction

//===========================================================================
function InitTrig_Bridge_Elevator_Falling takes nothing returns nothing
    set gg_trg_Bridge_Elevator_Falling = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Bridge_Elevator_Falling, function Trig_Bridge_Elevator_Falling_Actions )
endfunction

//===========================================================================
// Trigger: Group Cleanup Death
//===========================================================================
function Trig_Group_Cleanup_Death_Func009001 takes nothing returns boolean
    return ( GetDyingUnit() == udg_HallPatrollerA )
endfunction

function Trig_Group_Cleanup_Death_Func010001 takes nothing returns boolean
    return ( GetDyingUnit() == udg_HallPatrollerB )
endfunction

function Trig_Group_Cleanup_Death_Func011001 takes nothing returns boolean
    return ( GetDyingUnit() == udg_HallPatrollerC )
endfunction

function Trig_Group_Cleanup_Death_Func012001 takes nothing returns boolean
    return ( GetDyingUnit() == udg_CryptLeft )
endfunction

function Trig_Group_Cleanup_Death_Func013001 takes nothing returns boolean
    return ( GetDyingUnit() == udg_CryptRight )
endfunction

function Trig_Group_Cleanup_Death_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_AbomAmbushLeftUnits )
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_AbomAmbushRightUnits )
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_FiendAmbushUnits )
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_ChantingUnits )
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_WaveUnits )
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_CryptLeftUnits )
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_CryptRightUnits )
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_ZombieGroupA )
    if ( Trig_Group_Cleanup_Death_Func009001() ) then
        set udg_HallPatrollerA = null
    else
        call DoNothing(  )
    endif
    if ( Trig_Group_Cleanup_Death_Func010001() ) then
        set udg_HallPatrollerB = null
    else
        call DoNothing(  )
    endif
    if ( Trig_Group_Cleanup_Death_Func011001() ) then
        set udg_HallPatrollerC = null
    else
        call DoNothing(  )
    endif
    if ( Trig_Group_Cleanup_Death_Func012001() ) then
        set udg_CryptLeft = null
    else
        call DoNothing(  )
    endif
    if ( Trig_Group_Cleanup_Death_Func013001() ) then
        set udg_CryptRight = null
    else
        call DoNothing(  )
    endif
endfunction

//===========================================================================
function InitTrig_Group_Cleanup_Death takes nothing returns nothing
    set gg_trg_Group_Cleanup_Death = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Group_Cleanup_Death, Player(6), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddAction( gg_trg_Group_Cleanup_Death, function Trig_Group_Cleanup_Death_Actions )
endfunction

//===========================================================================
// Trigger: Group Cleanup OwnerChange
//===========================================================================
function Trig_Group_Cleanup_OwnerChange_Conditions takes nothing returns boolean
    if ( not ( GetChangingUnitPrevOwner() == udg_P7_Dreadlords ) ) then
        return false
    endif
    return true
endfunction

function Trig_Group_Cleanup_OwnerChange_Func009001 takes nothing returns boolean
    return ( GetChangingUnit() == udg_HallPatrollerA )
endfunction

function Trig_Group_Cleanup_OwnerChange_Func010001 takes nothing returns boolean
    return ( GetChangingUnit() == udg_HallPatrollerB )
endfunction

function Trig_Group_Cleanup_OwnerChange_Func011001 takes nothing returns boolean
    return ( GetChangingUnit() == udg_HallPatrollerC )
endfunction

function Trig_Group_Cleanup_OwnerChange_Func012001 takes nothing returns boolean
    return ( GetChangingUnit() == udg_CryptRight )
endfunction

function Trig_Group_Cleanup_OwnerChange_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetChangingUnit(), udg_AbomAmbushLeftUnits )
    call GroupRemoveUnitSimple( GetChangingUnit(), udg_AbomAmbushRightUnits )
    call GroupRemoveUnitSimple( GetChangingUnit(), udg_FiendAmbushUnits )
    call GroupRemoveUnitSimple( GetChangingUnit(), udg_ChantingUnits )
    call GroupRemoveUnitSimple( GetChangingUnit(), udg_WaveUnits )
    call GroupRemoveUnitSimple( GetChangingUnit(), udg_CryptLeftUnits )
    call GroupRemoveUnitSimple( GetChangingUnit(), udg_CryptRightUnits )
    call GroupRemoveUnitSimple( GetChangingUnit(), udg_ZombieGroupA )
    if ( Trig_Group_Cleanup_OwnerChange_Func009001() ) then
        set udg_HallPatrollerA = null
    else
        call DoNothing(  )
    endif
    if ( Trig_Group_Cleanup_OwnerChange_Func010001() ) then
        set udg_HallPatrollerB = null
    else
        call DoNothing(  )
    endif
    if ( Trig_Group_Cleanup_OwnerChange_Func011001() ) then
        set udg_HallPatrollerC = null
    else
        call DoNothing(  )
    endif
    if ( Trig_Group_Cleanup_OwnerChange_Func012001() ) then
        set udg_CryptRight = null
    else
        call DoNothing(  )
    endif
endfunction

//===========================================================================
function InitTrig_Group_Cleanup_OwnerChange takes nothing returns nothing
    set gg_trg_Group_Cleanup_OwnerChange = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Group_Cleanup_OwnerChange, Player(0), EVENT_PLAYER_UNIT_CHANGE_OWNER )
    call TriggerAddCondition( gg_trg_Group_Cleanup_OwnerChange, Condition( function Trig_Group_Cleanup_OwnerChange_Conditions ) )
    call TriggerAddAction( gg_trg_Group_Cleanup_OwnerChange, function Trig_Group_Cleanup_OwnerChange_Actions )
endfunction

//===========================================================================
// Trigger: Uproot Picked Fiend
//===========================================================================
function Trig_Uproot_Picked_Fiend_Actions takes nothing returns nothing
    local unit ambusher = GetEnumUnit()
    call PolledWait( GetRandomReal(0.00, 1.20) )
    set udg_TempUnit = ambusher
    // Unhide and Unburrow
    call ShowUnitShow( udg_TempUnit )
    call SetUnitAnimation( udg_TempUnit, "morph alternate" )
    call PolledWait( 1.00 )
    set udg_TempUnit = ambusher
    // Unpause
    call PauseUnitBJ( false, udg_TempUnit )
endfunction

//===========================================================================
function InitTrig_Uproot_Picked_Fiend takes nothing returns nothing
    set gg_trg_Uproot_Picked_Fiend = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Uproot_Picked_Fiend, function Trig_Uproot_Picked_Fiend_Actions )
endfunction

//===========================================================================
// Trigger: Restock Corpse Piles
//===========================================================================
function Trig_Restock_Corpse_Piles_Func002C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_CorpsePile01Units) < 20 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Restock_Corpse_Piles_Func004C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_CorpsePile02Units) < 20 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Restock_Corpse_Piles_Func006C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_CorpsePile03Units) < 20 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Restock_Corpse_Piles_Actions takes nothing returns nothing
    // Corpse Pile 01
    if ( Trig_Restock_Corpse_Piles_Func002C() ) then
        set udg_TempPoint = GetRandomLocInRect(gg_rct_Corpse_Pile_01)
        call CreatePermanentCorpseLocBJ( bj_CORPSETYPE_BONE, 'ugho', udg_P7_Dreadlords, udg_TempPoint, GetRandomDirectionDeg() )
        call GroupAddUnitSimple( GetLastCreatedUnit(), udg_CorpsePile01Units )
        call RemoveLocation( udg_TempPoint )
    else
    endif
    // Corpse Pile 02
    if ( Trig_Restock_Corpse_Piles_Func004C() ) then
        set udg_TempPoint = GetRandomLocInRect(gg_rct_Corpse_Pile_02)
        call CreatePermanentCorpseLocBJ( bj_CORPSETYPE_BONE, 'ugho', udg_P7_Dreadlords, GetRandomLocInRect(gg_rct_Corpse_Pile_02), GetRandomDirectionDeg() )
        call GroupAddUnitSimple( GetLastCreatedUnit(), udg_CorpsePile02Units )
        call RemoveLocation( udg_TempPoint )
    else
    endif
    // Corpse Pile 03
    if ( Trig_Restock_Corpse_Piles_Func006C() ) then
        set udg_TempPoint = GetRandomLocInRect(gg_rct_Corpse_Pile_03)
        call CreatePermanentCorpseLocBJ( bj_CORPSETYPE_BONE, 'ugho', udg_P7_Dreadlords, GetRandomLocInRect(gg_rct_Corpse_Pile_03), GetRandomDirectionDeg() )
        call GroupAddUnitSimple( GetLastCreatedUnit(), udg_CorpsePile03Units )
        call RemoveLocation( udg_TempPoint )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Restock_Corpse_Piles takes nothing returns nothing
    set gg_trg_Restock_Corpse_Piles = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Restock_Corpse_Piles, 1.00 )
    call TriggerAddAction( gg_trg_Restock_Corpse_Piles, function Trig_Restock_Corpse_Piles_Actions )
endfunction

//===========================================================================
// Trigger: Corpse Pile Found
//===========================================================================
function Trig_Corpse_Pile_Found_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( udg_InCombat == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Corpse_Pile_Found_Func002Func003Func001C takes nothing returns boolean
    if ( not ( IsLocationVisibleToPlayer(udg_VSourceCorpsePile01, udg_AP1_Player) == true ) ) then
        return false
    endif
    if ( not ( DistanceBetweenPoints(udg_PointArthasLoc, udg_PointCorpsePile01) < 800.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Corpse_Pile_Found_Func002Func003Func002C takes nothing returns boolean
    if ( not ( IsLocationVisibleToPlayer(udg_VSourceCorpsePile02, udg_AP1_Player) == true ) ) then
        return false
    endif
    if ( not ( DistanceBetweenPoints(udg_PointArthasLoc, udg_PointCorpsePile02) < 800.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Corpse_Pile_Found_Func002Func003Func003C takes nothing returns boolean
    if ( not ( IsLocationVisibleToPlayer(udg_VSourceCorpsePile03, udg_AP1_Player) == true ) ) then
        return false
    endif
    if ( not ( DistanceBetweenPoints(udg_PointArthasLoc, udg_PointCorpsePile03) < 800.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Corpse_Pile_Found_Func002Func003C takes nothing returns boolean
    if ( Trig_Corpse_Pile_Found_Func002Func003Func001C() ) then
        return true
    endif
    if ( Trig_Corpse_Pile_Found_Func002Func003Func002C() ) then
        return true
    endif
    if ( Trig_Corpse_Pile_Found_Func002Func003Func003C() ) then
        return true
    endif
    return false
endfunction

function Trig_Corpse_Pile_Found_Func002C takes nothing returns boolean
    if ( not Trig_Corpse_Pile_Found_Func002Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_Corpse_Pile_Found_Actions takes nothing returns nothing
    set udg_PointArthasLoc = GetUnitLoc(udg_Arthas)
    if ( Trig_Corpse_Pile_Found_Func002C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
        call QueuedTriggerAddBJ( gg_trg_Corpse_Pile_Lines_Q, true )
    else
    endif
    call RemoveLocation( udg_PointArthasLoc )
endfunction

//===========================================================================
function InitTrig_Corpse_Pile_Found takes nothing returns nothing
    set gg_trg_Corpse_Pile_Found = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Corpse_Pile_Found, 1.00 )
    call TriggerAddCondition( gg_trg_Corpse_Pile_Found, Condition( function Trig_Corpse_Pile_Found_Conditions ) )
    call TriggerAddAction( gg_trg_Corpse_Pile_Found, function Trig_Corpse_Pile_Found_Actions )
endfunction

//===========================================================================
// Trigger: Corpse Pile Lines Q
//===========================================================================
function Trig_Corpse_Pile_Lines_Q_Actions takes nothing returns nothing
    // Line
    call SetSpeechVolumeGroupsBJ(  )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Arthas, "TRIGSTR_239", gg_snd_L02Arthas18, "TRIGSTR_240", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_L02Arthas18, 0 )
    call VolumeGroupResetBJ(  )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Corpse_Pile_Lines_Q takes nothing returns nothing
    set gg_trg_Corpse_Pile_Lines_Q = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Corpse_Pile_Lines_Q, function Trig_Corpse_Pile_Lines_Q_Actions )
endfunction

//===========================================================================
// Trigger: LOS Block
//
// Before running this, do the following:
//   - Set "LOSRegion" to the region you wish to clean up.
//===========================================================================
function Trig_LOS_Block_Func001Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'Ytlc' ) ) then
        return false
    endif
    return true
endfunction

function Trig_LOS_Block_Func001A takes nothing returns nothing
    if ( Trig_LOS_Block_Func001Func001C() ) then
        call DestructableRestoreLife( GetEnumDestructable(), GetDestructableMaxLife(GetEnumDestructable()), false )
    else
    endif
endfunction

function Trig_LOS_Block_Actions takes nothing returns nothing
    call EnumDestructablesInRectAll( udg_LOSRegion, function Trig_LOS_Block_Func001A )
endfunction

//===========================================================================
function InitTrig_LOS_Block takes nothing returns nothing
    set gg_trg_LOS_Block = CreateTrigger(  )
    call TriggerAddAction( gg_trg_LOS_Block, function Trig_LOS_Block_Actions )
endfunction

//===========================================================================
// Trigger: LOS Clear
//
// Before running this, do the following:
//   - Set "LOSRegion" to the region you wish to clean up.
//===========================================================================
function Trig_LOS_Clear_Func001Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'Ytlc' ) ) then
        return false
    endif
    return true
endfunction

function Trig_LOS_Clear_Func001A takes nothing returns nothing
    if ( Trig_LOS_Clear_Func001Func001C() ) then
        call KillDestructable( GetEnumDestructable() )
    else
    endif
endfunction

function Trig_LOS_Clear_Actions takes nothing returns nothing
    call EnumDestructablesInRectAll( udg_LOSRegion, function Trig_LOS_Clear_Func001A )
endfunction

//===========================================================================
function InitTrig_LOS_Clear takes nothing returns nothing
    set gg_trg_LOS_Clear = CreateTrigger(  )
    call TriggerAddAction( gg_trg_LOS_Clear, function Trig_LOS_Clear_Actions )
endfunction

//===========================================================================
// Trigger: LOS Clear StartingDoor
//===========================================================================
function Trig_LOS_Clear_StartingDoor_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_LOSRegion = gg_rct_LOSBlockers_StartingDoor
    call ConditionalTriggerExecute( gg_trg_LOS_Clear )
endfunction

//===========================================================================
function InitTrig_LOS_Clear_StartingDoor takes nothing returns nothing
    set gg_trg_LOS_Clear_StartingDoor = CreateTrigger(  )
    call DisableTrigger( gg_trg_LOS_Clear_StartingDoor )
    call TriggerRegisterDestDeathInRegionEvent( gg_trg_LOS_Clear_StartingDoor, gg_rct_LOSBlockers_StartingDoor )
    call TriggerAddAction( gg_trg_LOS_Clear_StartingDoor, function Trig_LOS_Clear_StartingDoor_Actions )
endfunction

//===========================================================================
// Trigger: LOS Clear ThroneRoom
//===========================================================================
function Trig_LOS_Clear_ThroneRoom_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_LOSRegion = gg_rct_LOSBlockers_ThroneRoom
    call ConditionalTriggerExecute( gg_trg_LOS_Clear )
endfunction

//===========================================================================
function InitTrig_LOS_Clear_ThroneRoom takes nothing returns nothing
    set gg_trg_LOS_Clear_ThroneRoom = CreateTrigger(  )
    call TriggerRegisterDestDeathInRegionEvent( gg_trg_LOS_Clear_ThroneRoom, gg_rct_LOSBlockers_ThroneRoom )
    call TriggerAddAction( gg_trg_LOS_Clear_ThroneRoom, function Trig_LOS_Clear_ThroneRoom_Actions )
endfunction

//===========================================================================
// Trigger: LOS Clear AbomDoor Left
//===========================================================================
function Trig_LOS_Clear_AbomDoor_Left_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_LOSRegion = gg_rct_LOSBlockers_AbomRoom_Left
    call ConditionalTriggerExecute( gg_trg_LOS_Clear )
endfunction

//===========================================================================
function InitTrig_LOS_Clear_AbomDoor_Left takes nothing returns nothing
    set gg_trg_LOS_Clear_AbomDoor_Left = CreateTrigger(  )
    call TriggerRegisterDestDeathInRegionEvent( gg_trg_LOS_Clear_AbomDoor_Left, gg_rct_LOSBlockers_AbomRoom_Left )
    call TriggerAddAction( gg_trg_LOS_Clear_AbomDoor_Left, function Trig_LOS_Clear_AbomDoor_Left_Actions )
endfunction

//===========================================================================
// Trigger: LOS Clear AbomDoor Right
//===========================================================================
function Trig_LOS_Clear_AbomDoor_Right_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_LOSRegion = gg_rct_LOSBlockers_AbomRoom_Right
    call ConditionalTriggerExecute( gg_trg_LOS_Clear )
endfunction

//===========================================================================
function InitTrig_LOS_Clear_AbomDoor_Right takes nothing returns nothing
    set gg_trg_LOS_Clear_AbomDoor_Right = CreateTrigger(  )
    call TriggerRegisterDestDeathInRegionEvent( gg_trg_LOS_Clear_AbomDoor_Right, gg_rct_LOSBlockers_AbomRoom_Right )
    call TriggerAddAction( gg_trg_LOS_Clear_AbomDoor_Right, function Trig_LOS_Clear_AbomDoor_Right_Actions )
endfunction

//===========================================================================
// Trigger: LOS Clear FountainRoom
//===========================================================================
function Trig_LOS_Clear_FountainRoom_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_LOSRegion = gg_rct_LOSBlockers_FountainRoom
    call ConditionalTriggerExecute( gg_trg_LOS_Clear )
endfunction

//===========================================================================
function InitTrig_LOS_Clear_FountainRoom takes nothing returns nothing
    set gg_trg_LOS_Clear_FountainRoom = CreateTrigger(  )
    call TriggerRegisterDestDeathInRegionEvent( gg_trg_LOS_Clear_FountainRoom, gg_rct_LOSBlockers_FountainRoom )
    call TriggerAddAction( gg_trg_LOS_Clear_FountainRoom, function Trig_LOS_Clear_FountainRoom_Actions )
endfunction

//===========================================================================
// Trigger: LOS Clear SpiderRoom
//===========================================================================
function Trig_LOS_Clear_SpiderRoom_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_LOSRegion = gg_rct_LOSBlockers_SpiderRoom
    call ConditionalTriggerExecute( gg_trg_LOS_Clear )
endfunction

//===========================================================================
function InitTrig_LOS_Clear_SpiderRoom takes nothing returns nothing
    set gg_trg_LOS_Clear_SpiderRoom = CreateTrigger(  )
    call TriggerRegisterDestDeathInRegionEvent( gg_trg_LOS_Clear_SpiderRoom, gg_rct_LOSBlockers_SpiderRoom )
    call TriggerAddAction( gg_trg_LOS_Clear_SpiderRoom, function Trig_LOS_Clear_SpiderRoom_Actions )
endfunction

//===========================================================================
// Trigger: LOS Clear GargRoom
//===========================================================================
function Trig_LOS_Clear_GargRoom_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_LOSRegion = gg_rct_LOSBlockers_GargoyleDoor
    call ConditionalTriggerExecute( gg_trg_LOS_Clear )
endfunction

//===========================================================================
function InitTrig_LOS_Clear_GargRoom takes nothing returns nothing
    set gg_trg_LOS_Clear_GargRoom = CreateTrigger(  )
    call TriggerRegisterDestDeathInRegionEvent( gg_trg_LOS_Clear_GargRoom, gg_rct_LOSBlockers_GargoyleDoor )
    call TriggerAddAction( gg_trg_LOS_Clear_GargRoom, function Trig_LOS_Clear_GargRoom_Actions )
endfunction

//===========================================================================
// Trigger: LOS Clear CourtyardDoor
//===========================================================================
function Trig_LOS_Clear_CourtyardDoor_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_LOSRegion = gg_rct_LOSBlockers_CourtyardDoor
    call ConditionalTriggerExecute( gg_trg_LOS_Clear )
endfunction

//===========================================================================
function InitTrig_LOS_Clear_CourtyardDoor takes nothing returns nothing
    set gg_trg_LOS_Clear_CourtyardDoor = CreateTrigger(  )
    call TriggerRegisterDestDeathInRegionEvent( gg_trg_LOS_Clear_CourtyardDoor, gg_rct_LOSBlockers_CourtyardDoor )
    call TriggerAddAction( gg_trg_LOS_Clear_CourtyardDoor, function Trig_LOS_Clear_CourtyardDoor_Actions )
endfunction

//===========================================================================
// Trigger: LOS Clear ExitDoor
//===========================================================================
function Trig_LOS_Clear_ExitDoor_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_LOSRegion = gg_rct_LOSBlockers_ExitDoor
    call ConditionalTriggerExecute( gg_trg_LOS_Clear )
endfunction

//===========================================================================
function InitTrig_LOS_Clear_ExitDoor takes nothing returns nothing
    set gg_trg_LOS_Clear_ExitDoor = CreateTrigger(  )
    call TriggerRegisterDestDeathInRegionEvent( gg_trg_LOS_Clear_ExitDoor, gg_rct_LOSBlockers_ExitDoor )
    call TriggerAddAction( gg_trg_LOS_Clear_ExitDoor, function Trig_LOS_Clear_ExitDoor_Actions )
endfunction

//===========================================================================
// Trigger: LOS Clear WallSecret
//===========================================================================
function Trig_LOS_Clear_WallSecret_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_LOSRegion = gg_rct_LOSBlockers_WallSecret
    call ConditionalTriggerExecute( gg_trg_LOS_Clear )
endfunction

//===========================================================================
function InitTrig_LOS_Clear_WallSecret takes nothing returns nothing
    set gg_trg_LOS_Clear_WallSecret = CreateTrigger(  )
    call TriggerRegisterDestDeathInRegionEvent( gg_trg_LOS_Clear_WallSecret, gg_rct_Vision_WallSecret_Source )
    call TriggerAddAction( gg_trg_LOS_Clear_WallSecret, function Trig_LOS_Clear_WallSecret_Actions )
endfunction

//===========================================================================
// Trigger: Bridge Revealer
//===========================================================================
function Trig_Bridge_Revealer_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    return true
endfunction

function Trig_Bridge_Revealer_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call CreateFogModifierRectBJ( true, udg_AP1_Player, FOG_OF_WAR_VISIBLE, gg_rct_Vision_Bridge_VM )
    call DestroyFogModifier( GetLastCreatedFogModifier() )
endfunction

//===========================================================================
function InitTrig_Bridge_Revealer takes nothing returns nothing
    set gg_trg_Bridge_Revealer = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Bridge_Revealer, gg_rct_Vision_Bridge_Tripwire )
    call TriggerAddCondition( gg_trg_Bridge_Revealer, Condition( function Trig_Bridge_Revealer_Conditions ) )
    call TriggerAddAction( gg_trg_Bridge_Revealer, function Trig_Bridge_Revealer_Actions )
endfunction

//===========================================================================
// Trigger: Prison Revealer On
//===========================================================================
function Trig_Prison_Revealer_On_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( udg_PrisonVMsExist == false ) ) then
        return false
    endif
    if ( not ( IsLocationVisibleToPlayer(udg_VSourcePrison, udg_AP1_Player) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Prison_Revealer_On_Actions takes nothing returns nothing
    set udg_PrisonVMsExist = true
    call CreateFogModifierRadiusLocBJ( true, udg_AP1_Player, FOG_OF_WAR_VISIBLE, GetRectCenter(gg_rct_Vision_PrisonA_VM), 128.00 )
    set udg_PrisonVMA = GetLastCreatedFogModifier()
    call CreateFogModifierRadiusLocBJ( true, udg_AP1_Player, FOG_OF_WAR_VISIBLE, GetRectCenter(gg_rct_Vision_PrisonB_VM), 128.00 )
    set udg_PrisonVMB = GetLastCreatedFogModifier()
endfunction

//===========================================================================
function InitTrig_Prison_Revealer_On takes nothing returns nothing
    set gg_trg_Prison_Revealer_On = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Prison_Revealer_On, 1.00 )
    call TriggerAddCondition( gg_trg_Prison_Revealer_On, Condition( function Trig_Prison_Revealer_On_Conditions ) )
    call TriggerAddAction( gg_trg_Prison_Revealer_On, function Trig_Prison_Revealer_On_Actions )
endfunction

//===========================================================================
// Trigger: Prison Revealer Off
//===========================================================================
function Trig_Prison_Revealer_Off_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( udg_PrisonVMsExist == true ) ) then
        return false
    endif
    if ( not ( IsLocationVisibleToPlayer(udg_VSourcePrison, udg_AP1_Player) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Prison_Revealer_Off_Actions takes nothing returns nothing
    set udg_PrisonVMsExist = false
    call DestroyFogModifier( udg_PrisonVMA )
    call DestroyFogModifier( udg_PrisonVMB )
endfunction

//===========================================================================
function InitTrig_Prison_Revealer_Off takes nothing returns nothing
    set gg_trg_Prison_Revealer_Off = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Prison_Revealer_Off, 1.00 )
    call TriggerAddCondition( gg_trg_Prison_Revealer_Off, Condition( function Trig_Prison_Revealer_Off_Conditions ) )
    call TriggerAddAction( gg_trg_Prison_Revealer_Off, function Trig_Prison_Revealer_Off_Actions )
endfunction

//===========================================================================
// Trigger: ArmoryChurch Revealer On
//===========================================================================
function Trig_ArmoryChurch_Revealer_On_Func007C takes nothing returns boolean
    if ( ( IsLocationVisibleToPlayer(udg_VSourceChurchA, udg_AP1_Player) == true ) ) then
        return true
    endif
    if ( ( IsLocationVisibleToPlayer(udg_VSourceChurchB, udg_AP1_Player) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_ArmoryChurch_Revealer_On_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( udg_ArmoryChurchVMExists == false ) ) then
        return false
    endif
    if ( not Trig_ArmoryChurch_Revealer_On_Func007C() ) then
        return false
    endif
    return true
endfunction

function Trig_ArmoryChurch_Revealer_On_Actions takes nothing returns nothing
    set udg_ArmoryChurchVMExists = true
    call CreateFogModifierRadiusLocBJ( true, udg_AP1_Player, FOG_OF_WAR_VISIBLE, udg_PointVisionAChurch, 128.00 )
    set udg_ArmoryChurchVM = GetLastCreatedFogModifier()
endfunction

//===========================================================================
function InitTrig_ArmoryChurch_Revealer_On takes nothing returns nothing
    set gg_trg_ArmoryChurch_Revealer_On = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_ArmoryChurch_Revealer_On, 1.00 )
    call TriggerAddCondition( gg_trg_ArmoryChurch_Revealer_On, Condition( function Trig_ArmoryChurch_Revealer_On_Conditions ) )
    call TriggerAddAction( gg_trg_ArmoryChurch_Revealer_On, function Trig_ArmoryChurch_Revealer_On_Actions )
endfunction

//===========================================================================
// Trigger: ArmoryChurch Revealer Off
//===========================================================================
function Trig_ArmoryChurch_Revealer_Off_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( udg_ArmoryChurchVMExists == true ) ) then
        return false
    endif
    if ( not ( IsLocationVisibleToPlayer(udg_VSourceChurchA, udg_AP1_Player) == false ) ) then
        return false
    endif
    if ( not ( IsLocationVisibleToPlayer(udg_VSourceChurchB, udg_AP1_Player) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_ArmoryChurch_Revealer_Off_Actions takes nothing returns nothing
    set udg_ArmoryChurchVMExists = false
    call DestroyFogModifier( udg_ArmoryChurchVM )
endfunction

//===========================================================================
function InitTrig_ArmoryChurch_Revealer_Off takes nothing returns nothing
    set gg_trg_ArmoryChurch_Revealer_Off = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_ArmoryChurch_Revealer_Off, 1.00 )
    call TriggerAddCondition( gg_trg_ArmoryChurch_Revealer_Off, Condition( function Trig_ArmoryChurch_Revealer_Off_Conditions ) )
    call TriggerAddAction( gg_trg_ArmoryChurch_Revealer_Off, function Trig_ArmoryChurch_Revealer_Off_Actions )
endfunction

//===========================================================================
// Trigger: Nook Revealer On
//===========================================================================
function Trig_Nook_Revealer_On_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( udg_NookVMExists == false ) ) then
        return false
    endif
    if ( not ( IsLocationVisibleToPlayer(udg_VSourceNook, udg_AP1_Player) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Nook_Revealer_On_Actions takes nothing returns nothing
    set udg_NookVMExists = true
    call CreateFogModifierRectBJ( true, udg_AP1_Player, FOG_OF_WAR_VISIBLE, gg_rct_Vision_Nook_VM )
    set udg_NookVM = GetLastCreatedFogModifier()
endfunction

//===========================================================================
function InitTrig_Nook_Revealer_On takes nothing returns nothing
    set gg_trg_Nook_Revealer_On = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Nook_Revealer_On, 1.00 )
    call TriggerAddCondition( gg_trg_Nook_Revealer_On, Condition( function Trig_Nook_Revealer_On_Conditions ) )
    call TriggerAddAction( gg_trg_Nook_Revealer_On, function Trig_Nook_Revealer_On_Actions )
endfunction

//===========================================================================
// Trigger: Nook Revealer Off
//===========================================================================
function Trig_Nook_Revealer_Off_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( udg_NookVMExists == true ) ) then
        return false
    endif
    if ( not ( IsLocationVisibleToPlayer(udg_VSourceNook, udg_AP1_Player) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Nook_Revealer_Off_Actions takes nothing returns nothing
    set udg_NookVMExists = false
    call DestroyFogModifier( udg_NookVM )
endfunction

//===========================================================================
function InitTrig_Nook_Revealer_Off takes nothing returns nothing
    set gg_trg_Nook_Revealer_Off = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Nook_Revealer_Off, 1.00 )
    call TriggerAddCondition( gg_trg_Nook_Revealer_Off, Condition( function Trig_Nook_Revealer_Off_Conditions ) )
    call TriggerAddAction( gg_trg_Nook_Revealer_Off, function Trig_Nook_Revealer_Off_Actions )
endfunction

//===========================================================================
// Trigger: FountainPlate Glow On
//===========================================================================
function Trig_FountainPlate_Glow_On_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(udg_FountainPlate) == true ) ) then
        return false
    endif
    if ( not ( udg_FountainPlateGlowing == false ) ) then
        return false
    endif
    if ( not ( IsLocationVisibleToPlayer(udg_VSourceFountainPlate, udg_AP1_Player) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_FountainPlate_Glow_On_Actions takes nothing returns nothing
    set udg_FountainPlateGlowing = true
    call SetDestructableAnimationBJ( udg_FountainPlate, "stand" )
endfunction

//===========================================================================
function InitTrig_FountainPlate_Glow_On takes nothing returns nothing
    set gg_trg_FountainPlate_Glow_On = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_FountainPlate_Glow_On, 1.00 )
    call TriggerAddCondition( gg_trg_FountainPlate_Glow_On, Condition( function Trig_FountainPlate_Glow_On_Conditions ) )
    call TriggerAddAction( gg_trg_FountainPlate_Glow_On, function Trig_FountainPlate_Glow_On_Actions )
endfunction

//===========================================================================
// Trigger: FountainPlate Glow Off
//===========================================================================
function Trig_FountainPlate_Glow_Off_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(udg_FountainPlate) == true ) ) then
        return false
    endif
    if ( not ( udg_FountainPlateGlowing == true ) ) then
        return false
    endif
    if ( not ( IsLocationVisibleToPlayer(udg_VSourceFountainPlate, udg_AP1_Player) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_FountainPlate_Glow_Off_Actions takes nothing returns nothing
    set udg_FountainPlateGlowing = false
    call SetDestructableAnimationBJ( udg_FountainPlate, "stand alternate" )
endfunction

//===========================================================================
function InitTrig_FountainPlate_Glow_Off takes nothing returns nothing
    set gg_trg_FountainPlate_Glow_Off = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_FountainPlate_Glow_Off, 1.00 )
    call TriggerAddCondition( gg_trg_FountainPlate_Glow_Off, Condition( function Trig_FountainPlate_Glow_Off_Conditions ) )
    call TriggerAddAction( gg_trg_FountainPlate_Glow_Off, function Trig_FountainPlate_Glow_Off_Actions )
endfunction

//===========================================================================
// Trigger: BridgePlateA Glow On
//===========================================================================
function Trig_BridgePlateA_Glow_On_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(udg_BridgePlateA) == true ) ) then
        return false
    endif
    if ( not ( udg_BridgePlateGlowingA == false ) ) then
        return false
    endif
    if ( not ( IsLocationVisibleToPlayer(udg_VSourceBridgePlateA, udg_AP1_Player) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_BridgePlateA_Glow_On_Actions takes nothing returns nothing
    set udg_BridgePlateGlowingA = true
    call SetDestructableAnimationBJ( udg_BridgePlateA, "stand" )
endfunction

//===========================================================================
function InitTrig_BridgePlateA_Glow_On takes nothing returns nothing
    set gg_trg_BridgePlateA_Glow_On = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_BridgePlateA_Glow_On, 1.00 )
    call TriggerAddCondition( gg_trg_BridgePlateA_Glow_On, Condition( function Trig_BridgePlateA_Glow_On_Conditions ) )
    call TriggerAddAction( gg_trg_BridgePlateA_Glow_On, function Trig_BridgePlateA_Glow_On_Actions )
endfunction

//===========================================================================
// Trigger: BridgePlateA Glow Off
//===========================================================================
function Trig_BridgePlateA_Glow_Off_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(udg_BridgePlateA) == true ) ) then
        return false
    endif
    if ( not ( udg_BridgePlateGlowingA == true ) ) then
        return false
    endif
    if ( not ( IsLocationVisibleToPlayer(udg_VSourceBridgePlateA, udg_AP1_Player) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_BridgePlateA_Glow_Off_Actions takes nothing returns nothing
    set udg_BridgePlateGlowingA = false
    call SetDestructableAnimationBJ( udg_BridgePlateA, "stand alternate" )
endfunction

//===========================================================================
function InitTrig_BridgePlateA_Glow_Off takes nothing returns nothing
    set gg_trg_BridgePlateA_Glow_Off = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_BridgePlateA_Glow_Off, 1.00 )
    call TriggerAddCondition( gg_trg_BridgePlateA_Glow_Off, Condition( function Trig_BridgePlateA_Glow_Off_Conditions ) )
    call TriggerAddAction( gg_trg_BridgePlateA_Glow_Off, function Trig_BridgePlateA_Glow_Off_Actions )
endfunction

//===========================================================================
// Trigger: BridgePlateB Glow On
//===========================================================================
function Trig_BridgePlateB_Glow_On_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(udg_BridgePlateB) == true ) ) then
        return false
    endif
    if ( not ( udg_BridgePlateGlowingB == false ) ) then
        return false
    endif
    if ( not ( IsLocationVisibleToPlayer(udg_VSourceBridgePlateB, udg_AP1_Player) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_BridgePlateB_Glow_On_Actions takes nothing returns nothing
    set udg_BridgePlateGlowingB = true
    call SetDestructableAnimationBJ( udg_BridgePlateB, "stand" )
endfunction

//===========================================================================
function InitTrig_BridgePlateB_Glow_On takes nothing returns nothing
    set gg_trg_BridgePlateB_Glow_On = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_BridgePlateB_Glow_On, 1.00 )
    call TriggerAddCondition( gg_trg_BridgePlateB_Glow_On, Condition( function Trig_BridgePlateB_Glow_On_Conditions ) )
    call TriggerAddAction( gg_trg_BridgePlateB_Glow_On, function Trig_BridgePlateB_Glow_On_Actions )
endfunction

//===========================================================================
// Trigger: BridgePlateB Glow Off
//===========================================================================
function Trig_BridgePlateB_Glow_Off_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(udg_BridgePlateB) == true ) ) then
        return false
    endif
    if ( not ( udg_BridgePlateGlowingB == true ) ) then
        return false
    endif
    if ( not ( IsLocationVisibleToPlayer(udg_VSourceBridgePlateB, udg_AP1_Player) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_BridgePlateB_Glow_Off_Actions takes nothing returns nothing
    set udg_BridgePlateGlowingB = false
    call SetDestructableAnimationBJ( udg_BridgePlateB, "stand alternate" )
endfunction

//===========================================================================
function InitTrig_BridgePlateB_Glow_Off takes nothing returns nothing
    set gg_trg_BridgePlateB_Glow_Off = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_BridgePlateB_Glow_Off, 1.00 )
    call TriggerAddCondition( gg_trg_BridgePlateB_Glow_Off, Condition( function Trig_BridgePlateB_Glow_Off_Conditions ) )
    call TriggerAddAction( gg_trg_BridgePlateB_Glow_Off, function Trig_BridgePlateB_Glow_Off_Actions )
endfunction

//===========================================================================
// Trigger: BridgePlateC Glow On
//===========================================================================
function Trig_BridgePlateC_Glow_On_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(udg_BridgePlateC) == true ) ) then
        return false
    endif
    if ( not ( udg_BridgePlateGlowingC == false ) ) then
        return false
    endif
    if ( not ( IsLocationVisibleToPlayer(udg_VSourceBridgePlateC, udg_AP1_Player) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_BridgePlateC_Glow_On_Actions takes nothing returns nothing
    set udg_BridgePlateGlowingC = true
    call SetDestructableAnimationBJ( udg_BridgePlateC, "stand" )
endfunction

//===========================================================================
function InitTrig_BridgePlateC_Glow_On takes nothing returns nothing
    set gg_trg_BridgePlateC_Glow_On = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_BridgePlateC_Glow_On, 1.00 )
    call TriggerAddCondition( gg_trg_BridgePlateC_Glow_On, Condition( function Trig_BridgePlateC_Glow_On_Conditions ) )
    call TriggerAddAction( gg_trg_BridgePlateC_Glow_On, function Trig_BridgePlateC_Glow_On_Actions )
endfunction

//===========================================================================
// Trigger: BridgePlateC Glow Off
//===========================================================================
function Trig_BridgePlateC_Glow_Off_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(udg_BridgePlateC) == true ) ) then
        return false
    endif
    if ( not ( udg_BridgePlateGlowingC == true ) ) then
        return false
    endif
    if ( not ( IsLocationVisibleToPlayer(udg_VSourceBridgePlateC, udg_AP1_Player) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_BridgePlateC_Glow_Off_Actions takes nothing returns nothing
    set udg_BridgePlateGlowingC = false
    call SetDestructableAnimationBJ( udg_BridgePlateC, "stand alternate" )
endfunction

//===========================================================================
function InitTrig_BridgePlateC_Glow_Off takes nothing returns nothing
    set gg_trg_BridgePlateC_Glow_Off = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_BridgePlateC_Glow_Off, 1.00 )
    call TriggerAddCondition( gg_trg_BridgePlateC_Glow_Off, Condition( function Trig_BridgePlateC_Glow_Off_Conditions ) )
    call TriggerAddAction( gg_trg_BridgePlateC_Glow_Off, function Trig_BridgePlateC_Glow_Off_Actions )
endfunction

//===========================================================================
// Trigger: Barricade FiendA
//===========================================================================
function Trig_Barricade_FiendA_Func002A takes nothing returns nothing
    call KillDestructable( GetEnumDestructable() )
endfunction

function Trig_Barricade_FiendA_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call EnumDestructablesInRectAll( gg_rct_Barricade_FiendA, function Trig_Barricade_FiendA_Func002A )
endfunction

//===========================================================================
function InitTrig_Barricade_FiendA takes nothing returns nothing
    set gg_trg_Barricade_FiendA = CreateTrigger(  )
    call TriggerRegisterDestDeathInRegionEvent( gg_trg_Barricade_FiendA, gg_rct_Barricade_FiendA )
    call TriggerAddAction( gg_trg_Barricade_FiendA, function Trig_Barricade_FiendA_Actions )
endfunction

//===========================================================================
// Trigger: Barricade FiendB
//===========================================================================
function Trig_Barricade_FiendB_Func002A takes nothing returns nothing
    call KillDestructable( GetEnumDestructable() )
endfunction

function Trig_Barricade_FiendB_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call EnumDestructablesInRectAll( gg_rct_Barricade_FiendB, function Trig_Barricade_FiendB_Func002A )
endfunction

//===========================================================================
function InitTrig_Barricade_FiendB takes nothing returns nothing
    set gg_trg_Barricade_FiendB = CreateTrigger(  )
    call TriggerRegisterDestDeathInRegionEvent( gg_trg_Barricade_FiendB, gg_rct_Barricade_FiendB )
    call TriggerAddAction( gg_trg_Barricade_FiendB, function Trig_Barricade_FiendB_Actions )
endfunction

//===========================================================================
// Trigger: Barricade BelowShade
//===========================================================================
function Trig_Barricade_BelowShade_Func002A takes nothing returns nothing
    call KillDestructable( GetEnumDestructable() )
endfunction

function Trig_Barricade_BelowShade_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call EnumDestructablesInRectAll( gg_rct_Barricade_BeforeShade, function Trig_Barricade_BelowShade_Func002A )
endfunction

//===========================================================================
function InitTrig_Barricade_BelowShade takes nothing returns nothing
    set gg_trg_Barricade_BelowShade = CreateTrigger(  )
    call TriggerRegisterDestDeathInRegionEvent( gg_trg_Barricade_BelowShade, gg_rct_Barricade_BeforeShade )
    call TriggerAddAction( gg_trg_Barricade_BelowShade, function Trig_Barricade_BelowShade_Actions )
endfunction

//===========================================================================
// Trigger: Polite Pan
//
// Before running this, do the following:
//   - Set "PolitePanTarget" to the location to which you want to pan.
//===========================================================================
function Trig_Polite_Pan_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Polite_Pan_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SmartCameraPanBJ( udg_AP1_Player, udg_PolitePanTarget, 0.50 )
    call TriggerSleepAction( 4.00 )
    call EnableTrigger( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Polite_Pan takes nothing returns nothing
    set gg_trg_Polite_Pan = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Polite_Pan, Condition( function Trig_Polite_Pan_Conditions ) )
    call TriggerAddAction( gg_trg_Polite_Pan, function Trig_Polite_Pan_Actions )
endfunction

//===========================================================================
// Trigger: Rescue Necro Corpses
//===========================================================================
function Trig_Rescue_Necro_Corpses_Actions takes nothing returns nothing
    call CreatePermanentCorpseLocBJ( bj_CORPSETYPE_BONE, GetUnitTypeId(udg_NecroCorpseA), GetOwningPlayer(udg_NecroCorpseA), GetUnitLoc(udg_NecroCorpseA), GetUnitFacing(udg_NecroCorpseA) )
    call RemoveUnit( udg_NecroCorpseA )
    set udg_NecroCorpseA = GetLastCreatedUnit()
    call CreatePermanentCorpseLocBJ( bj_CORPSETYPE_BONE, GetUnitTypeId(udg_NecroCorpseB), GetOwningPlayer(udg_NecroCorpseB), GetUnitLoc(udg_NecroCorpseB), GetUnitFacing(udg_NecroCorpseB) )
    call RemoveUnit( udg_NecroCorpseB )
    set udg_NecroCorpseB = GetLastCreatedUnit()
endfunction

//===========================================================================
function InitTrig_Rescue_Necro_Corpses takes nothing returns nothing
    set gg_trg_Rescue_Necro_Corpses = CreateTrigger(  )
    call TriggerRegisterTimerEventSingle( gg_trg_Rescue_Necro_Corpses, 0.50 )
    call TriggerAddAction( gg_trg_Rescue_Necro_Corpses, function Trig_Rescue_Necro_Corpses_Actions )
endfunction

//===========================================================================
// Trigger: Rescue Necro
//===========================================================================
function Trig_Rescue_Necro_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'ushd' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'uplg' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_Necro_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Camera Pan
    set udg_PolitePanTarget = GetRectCenter(gg_rct_Rescue_Necro_PanTarg)
    call ConditionalTriggerExecute( gg_trg_Polite_Pan )
    // Rescue the units
    call RescueUnitBJ( udg_RescueNecroA, udg_AP1_Player, true )
    call RescueUnitBJ( udg_RescueNecroB, udg_AP1_Player, true )
    call RescueUnitBJ( udg_RescueNecroC, udg_AP1_Player, true )
    call RescueUnitBJ( udg_RescueNecroD, udg_AP1_Player, true )
    call IssueImmediateOrderBJ( udg_RescueNecroA, "raisedeadon" )
    call IssueImmediateOrderBJ( udg_RescueNecroB, "raisedeadon" )
    call IssuePointOrderLocBJ( udg_RescueNecroA, "attack", GetRectCenter(gg_rct_Rescue_Necro_MoveTargA) )
    call IssuePointOrderLocBJ( udg_RescueNecroB, "attack", GetRectCenter(gg_rct_Rescue_Necro_MoveTargB) )
    call IssuePointOrderLocBJ( udg_RescueNecroC, "attack", GetRectCenter(gg_rct_Rescue_Necro_MoveTargC) )
    call IssuePointOrderLocBJ( udg_RescueNecroD, "attack", GetRectCenter(gg_rct_Rescue_Necro_MoveTargD) )
    call TriggerSleepAction( 0.50 )
    call QueuedTriggerAddBJ( gg_trg_Rescue_Necro_Q, true )
endfunction

//===========================================================================
function InitTrig_Rescue_Necro takes nothing returns nothing
    set gg_trg_Rescue_Necro = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Rescue_Necro, gg_rct_Rescue_Necro_Tripwire )
    call TriggerAddCondition( gg_trg_Rescue_Necro, Condition( function Trig_Rescue_Necro_Conditions ) )
    call TriggerAddAction( gg_trg_Rescue_Necro, function Trig_Rescue_Necro_Actions )
endfunction

//===========================================================================
// Trigger: Rescue Necro Q
//===========================================================================
function Trig_Rescue_Necro_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( IsUnitAliveBJ(udg_RescueNecroA) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_Necro_Q_Func004C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_Arthas) == true ) ) then
        return false
    endif
    if ( not ( IsUnitAliveBJ(udg_RescueNecroA) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_Necro_Q_Func010C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_Arthas) == true ) ) then
        return false
    endif
    if ( not ( IsUnitAliveBJ(udg_RescueNecroA) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_Necro_Q_Actions takes nothing returns nothing
    call SetSpeechVolumeGroupsBJ(  )
    // Check Speaker Life
    if ( Trig_Rescue_Necro_Q_Func004C() ) then
    else
        call VolumeGroupResetBJ(  )
        call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
        return
    endif
    // Line
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_RescueNecroA, "TRIGSTR_192", gg_snd_L02Necromancer11, "TRIGSTR_193", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_L02Necromancer11, 0 )
    // Check Speaker Life
    if ( Trig_Rescue_Necro_Q_Func010C() ) then
    else
        call VolumeGroupResetBJ(  )
        call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
        return
    endif
    // Line
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Arthas, "TRIGSTR_194", gg_snd_L02Arthas12, "TRIGSTR_195", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_L02Arthas12, 0 )
    call VolumeGroupResetBJ(  )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Rescue_Necro_Q takes nothing returns nothing
    set gg_trg_Rescue_Necro_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Rescue_Necro_Q, Condition( function Trig_Rescue_Necro_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Rescue_Necro_Q, function Trig_Rescue_Necro_Q_Actions )
endfunction

//===========================================================================
// Trigger: Rescue Abom
//===========================================================================
function Trig_Rescue_Abom_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'ushd' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'uplg' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_Abom_Func009C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_RescueAbom) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_Abom_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Camera Pan
    set udg_PolitePanTarget = GetRectCenter(gg_rct_Rescue_Abom_PanTarg)
    call ConditionalTriggerExecute( gg_trg_Polite_Pan )
    // Rescue the units
    call RescueUnitBJ( udg_RescueAbom, udg_AP1_Player, true )
    call IssuePointOrderLocBJ( udg_RescueAbom, "attack", GetRectCenter(gg_rct_Rescue_Abom_MoveTarg) )
    call TriggerSleepAction( 0.50 )
    if ( Trig_Rescue_Abom_Func009C() ) then
        call PlaySoundOnUnitBJ( gg_snd_AbominationWhat3, 100, udg_RescueAbom )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Rescue_Abom takes nothing returns nothing
    set gg_trg_Rescue_Abom = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Rescue_Abom, gg_rct_Rescue_Abom_TripwireA )
    call TriggerRegisterEnterRectSimple( gg_trg_Rescue_Abom, gg_rct_Rescue_Abom_TripwireB )
    call TriggerAddCondition( gg_trg_Rescue_Abom, Condition( function Trig_Rescue_Abom_Conditions ) )
    call TriggerAddAction( gg_trg_Rescue_Abom, function Trig_Rescue_Abom_Actions )
endfunction

//===========================================================================
// Trigger: Rescue Shade
//===========================================================================
function Trig_Rescue_Shade_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'ushd' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'uplg' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_Shade_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Camera Pan
    set udg_PolitePanTarget = PolarProjectionBJ(GetRectCenter(gg_rct_Rescue_Shade_PanTarg), 400.00, AngleBetweenPoints(GetRectCenter(gg_rct_Rescue_Shade_PanTarg), GetUnitLoc(GetEnteringUnit())))
    call ConditionalTriggerExecute( gg_trg_Polite_Pan )
    // Rescue the units
    set udg_RescueShadeMoveTarg = PolarProjectionBJ(GetUnitLoc(udg_RescueShade), 100.00, AngleBetweenPoints(GetUnitLoc(udg_RescueShade), GetUnitLoc(GetEnteringUnit())))
    call RescueUnitBJ( udg_RescueShade, udg_AP1_Player, true )
    call IssuePointOrderLocBJ( udg_RescueShade, "attack", udg_RescueShadeMoveTarg )
    call TriggerSleepAction( 0.50 )
    call QueuedTriggerAddBJ( gg_trg_Rescue_Shade_Q, true )
endfunction

//===========================================================================
function InitTrig_Rescue_Shade takes nothing returns nothing
    set gg_trg_Rescue_Shade = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Rescue_Shade, gg_rct_Rescue_Shade_Tripwire )
    call TriggerAddCondition( gg_trg_Rescue_Shade, Condition( function Trig_Rescue_Shade_Conditions ) )
    call TriggerAddAction( gg_trg_Rescue_Shade, function Trig_Rescue_Shade_Actions )
endfunction

//===========================================================================
// Trigger: Rescue Shade Q
//===========================================================================
function Trig_Rescue_Shade_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( IsUnitAliveBJ(udg_RescueShade) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_Shade_Q_Func006C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_RescueShade) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_Shade_Q_Actions takes nothing returns nothing
    call SetSpeechVolumeGroupsBJ(  )
    // Line
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Arthas, "TRIGSTR_052", gg_snd_L02Arthas19, "TRIGSTR_087", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_L02Arthas19, 0 )
    // Check Speaker Life
    if ( Trig_Rescue_Shade_Q_Func006C() ) then
        // Line
        call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_RescueShade, "TRIGSTR_088", gg_snd_L02Shade20, "TRIGSTR_089", bj_TIMETYPE_ADD, 0, false )
        call WaitForSoundBJ( gg_snd_L02Shade20, 0 )
    else
    endif
    call VolumeGroupResetBJ(  )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Rescue_Shade_Q takes nothing returns nothing
    set gg_trg_Rescue_Shade_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Rescue_Shade_Q, Condition( function Trig_Rescue_Shade_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Rescue_Shade_Q, function Trig_Rescue_Shade_Q_Actions )
endfunction

//===========================================================================
// Trigger: Rescue Fiends
//===========================================================================
function Trig_Rescue_Fiends_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_Fiends_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Camera Pan
    set udg_PolitePanTarget = GetRectCenter(gg_rct_Rescue_Fiends_PanTarg)
    call ConditionalTriggerExecute( gg_trg_Polite_Pan )
    // Rescue the units
    call RescueUnitBJ( udg_RescueFiendA, udg_AP1_Player, true )
    call RescueUnitBJ( udg_RescueFiendB, udg_AP1_Player, true )
    call IssuePointOrderLocBJ( udg_RescueFiendA, "attack", GetRectCenter(gg_rct_Rescue_Fiends_MoveTargA) )
    call IssuePointOrderLocBJ( udg_RescueFiendB, "attack", GetRectCenter(gg_rct_Rescue_Fiends_MoveTargB) )
    call TriggerSleepAction( 0.50 )
    call QueuedTriggerAddBJ( gg_trg_Rescue_Fiends_Q, true )
endfunction

//===========================================================================
function InitTrig_Rescue_Fiends takes nothing returns nothing
    set gg_trg_Rescue_Fiends = CreateTrigger(  )
    call TriggerRegisterDeathEvent( gg_trg_Rescue_Fiends, gg_dest_DTg3_1073 )
    call TriggerAddCondition( gg_trg_Rescue_Fiends, Condition( function Trig_Rescue_Fiends_Conditions ) )
    call TriggerAddAction( gg_trg_Rescue_Fiends, function Trig_Rescue_Fiends_Actions )
endfunction

//===========================================================================
// Trigger: Rescue Fiends Q
//===========================================================================
function Trig_Rescue_Fiends_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( IsUnitAliveBJ(udg_RescueFiendA) == true ) ) then
        return false
    endif
    if ( not ( IsUnitAliveBJ(udg_RescueFiendB) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_Fiends_Q_Actions takes nothing returns nothing
    call SetSpeechVolumeGroupsBJ(  )
    // Line
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_RescueFiendA, "TRIGSTR_124", gg_snd_L02CryptFiend38, "TRIGSTR_125", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_L02CryptFiend38, 0 )
    // Line
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Arthas, "TRIGSTR_052", gg_snd_L02Arthas39, "TRIGSTR_127", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_L02Arthas39, 0 )
    // Line
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_RescueFiendB, "TRIGSTR_124", gg_snd_L02CryptFiend40, "TRIGSTR_129", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_L02CryptFiend40, 0 )
    call VolumeGroupResetBJ(  )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Rescue_Fiends_Q takes nothing returns nothing
    set gg_trg_Rescue_Fiends_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Rescue_Fiends_Q, Condition( function Trig_Rescue_Fiends_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Rescue_Fiends_Q, function Trig_Rescue_Fiends_Q_Actions )
endfunction

//===========================================================================
// Trigger: Rescue Ghouls
//===========================================================================
function Trig_Rescue_Ghouls_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'ushd' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'uplg' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_Ghouls_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Camera Pan
    set udg_PolitePanTarget = GetRectCenter(gg_rct_Rescue_Ghouls_PanTarg)
    call ConditionalTriggerExecute( gg_trg_Polite_Pan )
    // Rescue the units
    call RescueUnitBJ( udg_RescueGhoulA, udg_AP1_Player, true )
    call RescueUnitBJ( udg_RescueGhoulB, udg_AP1_Player, true )
    call IssuePointOrderLocBJ( udg_RescueGhoulA, "attack", GetRectCenter(gg_rct_Rescue_Ghouls_MoveTargA) )
    call IssuePointOrderLocBJ( udg_RescueGhoulB, "attack", GetRectCenter(gg_rct_Rescue_Ghouls_MoveTargB) )
    call TriggerSleepAction( 0.50 )
    call QueuedTriggerAddBJ( gg_trg_Rescue_Ghouls_Q, true )
endfunction

//===========================================================================
function InitTrig_Rescue_Ghouls takes nothing returns nothing
    set gg_trg_Rescue_Ghouls = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Rescue_Ghouls, gg_rct_Rescue_Ghouls_Tripwire )
    call TriggerAddCondition( gg_trg_Rescue_Ghouls, Condition( function Trig_Rescue_Ghouls_Conditions ) )
    call TriggerAddAction( gg_trg_Rescue_Ghouls, function Trig_Rescue_Ghouls_Actions )
endfunction

//===========================================================================
// Trigger: Rescue Ghouls Q
//===========================================================================
function Trig_Rescue_Ghouls_Q_Func002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(udg_RescueGhoulA) == true )
endfunction

function Trig_Rescue_Ghouls_Q_Func002002 takes nothing returns boolean
    return ( IsUnitAliveBJ(udg_RescueGhoulB) == true )
endfunction

function Trig_Rescue_Ghouls_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not GetBooleanOr( Trig_Rescue_Ghouls_Q_Func002001(), Trig_Rescue_Ghouls_Q_Func002002() ) ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_Ghouls_Q_Actions takes nothing returns nothing
    call SetSpeechVolumeGroupsBJ(  )
    // Line
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Arthas, "TRIGSTR_052", gg_snd_L02Arthas16, "TRIGSTR_081", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_L02Arthas16, 0 )
    call VolumeGroupResetBJ(  )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Rescue_Ghouls_Q takes nothing returns nothing
    set gg_trg_Rescue_Ghouls_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Rescue_Ghouls_Q, Condition( function Trig_Rescue_Ghouls_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Rescue_Ghouls_Q, function Trig_Rescue_Ghouls_Q_Actions )
endfunction

//===========================================================================
// Trigger: Rescue Shelf
//===========================================================================
function Trig_Rescue_Shelf_Func018C takes nothing returns boolean
    if ( ( IsUnitAliveBJ(udg_RescueShelfA) == true ) ) then
        return true
    endif
    if ( ( IsUnitAliveBJ(udg_RescueShelfB) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_Rescue_Shelf_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'ushd' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'uplg' ) ) then
        return false
    endif
    if ( not Trig_Rescue_Shelf_Func018C() ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_Shelf_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Camera Pan
    set udg_PolitePanTarget = GetRectCenter(gg_rct_Rescue_Shelf_PanTarg)
    call ConditionalTriggerExecute( gg_trg_Polite_Pan )
    // Rescue the units
    call RescueUnitBJ( udg_RescueShelfA, udg_AP1_Player, true )
    call RescueUnitBJ( udg_RescueShelfB, udg_AP1_Player, true )
    call IssuePointOrderLocBJ( udg_RescueShelfA, "attack", GetRectCenter(gg_rct_Rescue_Shelf_MoveTargA) )
    call IssuePointOrderLocBJ( udg_RescueShelfB, "attack", GetRectCenter(gg_rct_Rescue_Shelf_MoveTargB) )
    call TriggerSleepAction( 0.50 )
    call QueuedTriggerAddBJ( gg_trg_Rescue_Shelf_Q, true )
endfunction

//===========================================================================
function InitTrig_Rescue_Shelf takes nothing returns nothing
    set gg_trg_Rescue_Shelf = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Rescue_Shelf, gg_rct_Rescue_Shelf_Tripwire )
    call TriggerAddCondition( gg_trg_Rescue_Shelf, Condition( function Trig_Rescue_Shelf_Conditions ) )
    call TriggerAddAction( gg_trg_Rescue_Shelf, function Trig_Rescue_Shelf_Actions )
endfunction

//===========================================================================
// Trigger: Rescue Shelf Q
//===========================================================================
function Trig_Rescue_Shelf_Q_Func002C takes nothing returns boolean
    if ( ( IsUnitAliveBJ(udg_RescueShelfA) == true ) ) then
        return true
    endif
    if ( ( IsUnitAliveBJ(udg_RescueShelfB) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_Rescue_Shelf_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not Trig_Rescue_Shelf_Q_Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_Shelf_Q_Actions takes nothing returns nothing
    call SetSpeechVolumeGroupsBJ(  )
    // Line
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Arthas, "TRIGSTR_273", gg_snd_L02Arthas15, "TRIGSTR_274", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_L02Arthas15, 0 )
    call VolumeGroupResetBJ(  )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Rescue_Shelf_Q takes nothing returns nothing
    set gg_trg_Rescue_Shelf_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Rescue_Shelf_Q, Condition( function Trig_Rescue_Shelf_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Rescue_Shelf_Q, function Trig_Rescue_Shelf_Q_Actions )
endfunction

//===========================================================================
// Trigger: Rescue Wagons
//===========================================================================
function Trig_Rescue_Wagons_Func014C takes nothing returns boolean
    if ( ( IsUnitAliveBJ(udg_RescueWagonA) == true ) ) then
        return true
    endif
    if ( ( IsUnitAliveBJ(udg_RescueWagonB) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_Rescue_Wagons_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not Trig_Rescue_Wagons_Func014C() ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_Wagons_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Camera Pan
    call SmartCameraPanBJ( udg_AP1_Player, GetRectCenter(gg_rct_Rescue_Wagon_PanTarg), 0.50 )
    // Rescue the units
    call RescueUnitBJ( udg_RescueWagonA, udg_AP1_Player, true )
    call RescueUnitBJ( udg_RescueWagonB, udg_AP1_Player, true )
    call IssuePointOrderLocBJ( udg_RescueWagonA, "attack", GetRectCenter(gg_rct_Rescue_WagonA_MoveTarg) )
    call IssuePointOrderLocBJ( udg_RescueWagonB, "attack", GetRectCenter(gg_rct_Rescue_WagonB_MoveTarg) )
    call TriggerSleepAction( 0.50 )
    call QueuedTriggerAddBJ( gg_trg_Rescue_Wagons_Q, true )
endfunction

//===========================================================================
function InitTrig_Rescue_Wagons takes nothing returns nothing
    set gg_trg_Rescue_Wagons = CreateTrigger(  )
    call TriggerRegisterDeathEvent( gg_trg_Rescue_Wagons, gg_dest_DTg1_0394 )
    call TriggerAddCondition( gg_trg_Rescue_Wagons, Condition( function Trig_Rescue_Wagons_Conditions ) )
    call TriggerAddAction( gg_trg_Rescue_Wagons, function Trig_Rescue_Wagons_Actions )
endfunction

//===========================================================================
// Trigger: Rescue Wagons Q
//===========================================================================
function Trig_Rescue_Wagons_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_Wagons_Q_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetSpeechVolumeGroupsBJ(  )
    // Line
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Arthas, "TRIGSTR_207", gg_snd_L02Arthas24, "TRIGSTR_208", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_L02Arthas24, 0 )
    call VolumeGroupResetBJ(  )
    // Quest Message
    call ConditionalTriggerExecute( gg_trg_Meat_Quest_Msg_B )
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Rescue_Wagons_Q takes nothing returns nothing
    set gg_trg_Rescue_Wagons_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Rescue_Wagons_Q, Condition( function Trig_Rescue_Wagons_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Rescue_Wagons_Q, function Trig_Rescue_Wagons_Q_Actions )
endfunction

//===========================================================================
// Trigger: Rescue Guys
//===========================================================================
function Trig_Rescue_Guys_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'ushd' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'uplg' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_Guys_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Camera Pan
    set udg_PolitePanTarget = GetRectCenter(gg_rct_Rescue_Guys_PanTarg)
    call ConditionalTriggerExecute( gg_trg_Polite_Pan )
    // Rescue the units
    call RescueUnitBJ( udg_RescueGuyA, udg_AP1_Player, true )
    call RescueUnitBJ( udg_RescueGuyB, udg_AP1_Player, true )
    call IssuePointOrderLocBJ( udg_RescueGuyA, "attack", GetRectCenter(gg_rct_Rescue_Guys_MoveTargA) )
    call IssuePointOrderLocBJ( udg_RescueGuyB, "attack", GetRectCenter(gg_rct_Rescue_Guys_MoveTargB) )
    call TriggerSleepAction( 0.50 )
    call QueuedTriggerAddBJ( gg_trg_Rescue_Guys_Q, true )
endfunction

//===========================================================================
function InitTrig_Rescue_Guys takes nothing returns nothing
    set gg_trg_Rescue_Guys = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Rescue_Guys, gg_rct_Rescue_Guys_Tripwire )
    call TriggerAddCondition( gg_trg_Rescue_Guys, Condition( function Trig_Rescue_Guys_Conditions ) )
    call TriggerAddAction( gg_trg_Rescue_Guys, function Trig_Rescue_Guys_Actions )
endfunction

//===========================================================================
// Trigger: Rescue Guys Q
//===========================================================================
function Trig_Rescue_Guys_Q_Func002C takes nothing returns boolean
    if ( ( IsUnitAliveBJ(udg_RescueGuyA) == true ) ) then
        return true
    endif
    if ( ( IsUnitAliveBJ(udg_RescueGuyB) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_Rescue_Guys_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not Trig_Rescue_Guys_Q_Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_Guys_Q_Actions takes nothing returns nothing
    call SetSpeechVolumeGroupsBJ(  )
    // Line
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Arthas, "TRIGSTR_269", gg_snd_L02Arthas14, "TRIGSTR_270", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_L02Arthas14, 0 )
    call VolumeGroupResetBJ(  )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Rescue_Guys_Q takes nothing returns nothing
    set gg_trg_Rescue_Guys_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Rescue_Guys_Q, Condition( function Trig_Rescue_Guys_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Rescue_Guys_Q, function Trig_Rescue_Guys_Q_Actions )
endfunction

//===========================================================================
// Trigger: Rescue CageA
//===========================================================================
function Trig_Rescue_CageA_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_CageA_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Rescue the units
    call CreateNUnitsAtLoc( 1, 'ugho', udg_P2_Rescuables, GetDestructableLoc(GetDyingDestructable()), 180.00 )
    set udg_RescueCageA = GetLastCreatedUnit()
    call RescueUnitBJ( udg_RescueCageA, udg_AP1_Player, true )
    call IssuePointOrderLocBJ( udg_RescueCageA, "attack", GetRectCenter(gg_rct_Rescue_CageA_MoveTarg) )
    // Anim
    call TriggerSleepAction( 0.10 )
    call SetDestructableAnimationBJ( GetDyingDestructable(), "decay" )
    call SetDestAnimationSpeedPercent( GetDyingDestructable(), 1000.00 )
endfunction

//===========================================================================
function InitTrig_Rescue_CageA takes nothing returns nothing
    set gg_trg_Rescue_CageA = CreateTrigger(  )
    call TriggerRegisterDestDeathInRegionEvent( gg_trg_Rescue_CageA, gg_rct_Rescue_CageA_Source )
    call TriggerAddCondition( gg_trg_Rescue_CageA, Condition( function Trig_Rescue_CageA_Conditions ) )
    call TriggerAddAction( gg_trg_Rescue_CageA, function Trig_Rescue_CageA_Actions )
endfunction

//===========================================================================
// Trigger: Rescue CageB
//===========================================================================
function Trig_Rescue_CageB_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Rescue_CageB_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Rescue the units
    call CreateNUnitsAtLoc( 1, 'ugho', udg_P2_Rescuables, GetDestructableLoc(GetDyingDestructable()), 180.00 )
    set udg_RescueCageB = GetLastCreatedUnit()
    call RescueUnitBJ( udg_RescueCageB, udg_AP1_Player, true )
    call IssuePointOrderLocBJ( udg_RescueCageB, "attack", GetRectCenter(gg_rct_Rescue_CageB_MoveTarg) )
    // Anim
    call TriggerSleepAction( 0.10 )
    call SetDestructableAnimationBJ( GetDyingDestructable(), "decay" )
    call SetDestAnimationSpeedPercent( GetDyingDestructable(), 1000.00 )
endfunction

//===========================================================================
function InitTrig_Rescue_CageB takes nothing returns nothing
    set gg_trg_Rescue_CageB = CreateTrigger(  )
    call TriggerRegisterDestDeathInRegionEvent( gg_trg_Rescue_CageB, gg_rct_Rescue_CageB_Source )
    call TriggerAddCondition( gg_trg_Rescue_CageB, Condition( function Trig_Rescue_CageB_Conditions ) )
    call TriggerAddAction( gg_trg_Rescue_CageB, function Trig_Rescue_CageB_Actions )
endfunction

//===========================================================================
// Trigger: Hall Patrol Start
//===========================================================================
function Trig_Hall_Patrol_Start_Actions takes nothing returns nothing
    set udg_HallPatrolTarget = 1
    set udg_PointHallPatrollerTargetA = udg_PointHallPatrol01A
    set udg_PointHallPatrollerTargetB = udg_PointHallPatrol01B
    set udg_PointHallPatrollerTargetC = udg_PointHallPatrol01C
    set udg_HallPatrollerTargetA = gg_rct_Hall_Patrol_01A
    set udg_HallPatrollerTargetB = gg_rct_Hall_Patrol_01B
    set udg_HallPatrollerTargetC = gg_rct_Hall_Patrol_01C
    call ConditionalTriggerExecute( gg_trg_Hall_Patrol_Orders )
endfunction

//===========================================================================
function InitTrig_Hall_Patrol_Start takes nothing returns nothing
    set gg_trg_Hall_Patrol_Start = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Hall_Patrol_Start, function Trig_Hall_Patrol_Start_Actions )
endfunction

//===========================================================================
// Trigger: Hall Patrol Orders
//===========================================================================
function Trig_Hall_Patrol_Orders_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( udg_HallPatrollerA, "attack", udg_PointHallPatrollerTargetA )
    call IssuePointOrderLocBJ( udg_HallPatrollerB, "attack", udg_PointHallPatrollerTargetB )
    call IssuePointOrderLocBJ( udg_HallPatrollerC, "attack", udg_PointHallPatrollerTargetC )
    call StartTimerBJ( udg_HallPatrolTimer, false, 1.00 )
endfunction

//===========================================================================
function InitTrig_Hall_Patrol_Orders takes nothing returns nothing
    set gg_trg_Hall_Patrol_Orders = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Hall_Patrol_Orders, udg_HallPatrolTimer )
    call TriggerAddAction( gg_trg_Hall_Patrol_Orders, function Trig_Hall_Patrol_Orders_Actions )
endfunction

//===========================================================================
// Trigger: Hall Patrol Attacked
//===========================================================================
function Trig_Hall_Patrol_Attacked_Func002C takes nothing returns boolean
    if ( ( GetAttackedUnitBJ() == udg_HallPatrollerA ) ) then
        return true
    endif
    if ( ( GetAttackedUnitBJ() == udg_HallPatrollerB ) ) then
        return true
    endif
    if ( ( GetAttackedUnitBJ() == udg_HallPatrollerC ) ) then
        return true
    endif
    return false
endfunction

function Trig_Hall_Patrol_Attacked_Conditions takes nothing returns boolean
    if ( not Trig_Hall_Patrol_Attacked_Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_Hall_Patrol_Attacked_Actions takes nothing returns nothing
    call StartTimerBJ( udg_HallPatrolTimer, false, 3.00 )
endfunction

//===========================================================================
function InitTrig_Hall_Patrol_Attacked takes nothing returns nothing
    set gg_trg_Hall_Patrol_Attacked = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Hall_Patrol_Attacked, Player(6), EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Hall_Patrol_Attacked, Condition( function Trig_Hall_Patrol_Attacked_Conditions ) )
    call TriggerAddAction( gg_trg_Hall_Patrol_Attacked, function Trig_Hall_Patrol_Attacked_Actions )
endfunction

//===========================================================================
// Trigger: Hall Patrol Attacking
//===========================================================================
function Trig_Hall_Patrol_Attacking_Func002C takes nothing returns boolean
    if ( ( GetAttacker() == udg_HallPatrollerA ) ) then
        return true
    endif
    if ( ( GetAttacker() == udg_HallPatrollerB ) ) then
        return true
    endif
    if ( ( GetAttacker() == udg_HallPatrollerC ) ) then
        return true
    endif
    return false
endfunction

function Trig_Hall_Patrol_Attacking_Conditions takes nothing returns boolean
    if ( not Trig_Hall_Patrol_Attacking_Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_Hall_Patrol_Attacking_Actions takes nothing returns nothing
    call StartTimerBJ( udg_HallPatrolTimer, false, 3.00 )
endfunction

//===========================================================================
function InitTrig_Hall_Patrol_Attacking takes nothing returns nothing
    set gg_trg_Hall_Patrol_Attacking = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Hall_Patrol_Attacking, Player(0), EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Hall_Patrol_Attacking, Condition( function Trig_Hall_Patrol_Attacking_Conditions ) )
    call TriggerAddAction( gg_trg_Hall_Patrol_Attacking, function Trig_Hall_Patrol_Attacking_Actions )
endfunction

//===========================================================================
// Trigger: Hall Patrol 01
//===========================================================================
function Trig_Hall_Patrol_01_Func011001 takes nothing returns boolean
    return ( udg_HallPatrollerA == null )
endfunction

function Trig_Hall_Patrol_01_Func011002 takes nothing returns boolean
    return ( RectContainsUnit(udg_HallPatrollerTargetA, udg_HallPatrollerA) == true )
endfunction

function Trig_Hall_Patrol_01_Func012001 takes nothing returns boolean
    return ( udg_HallPatrollerB == null )
endfunction

function Trig_Hall_Patrol_01_Func012002 takes nothing returns boolean
    return ( RectContainsUnit(udg_HallPatrollerTargetB, udg_HallPatrollerB) == true )
endfunction

function Trig_Hall_Patrol_01_Func013001 takes nothing returns boolean
    return ( udg_HallPatrollerC == null )
endfunction

function Trig_Hall_Patrol_01_Func013002 takes nothing returns boolean
    return ( RectContainsUnit(udg_HallPatrollerTargetC, udg_HallPatrollerC) == true )
endfunction

function Trig_Hall_Patrol_01_Conditions takes nothing returns boolean
    if ( not ( udg_HallPatrolTarget == 1 ) ) then
        return false
    endif
    if ( not GetBooleanOr( Trig_Hall_Patrol_01_Func011001(), Trig_Hall_Patrol_01_Func011002() ) ) then
        return false
    endif
    if ( not GetBooleanOr( Trig_Hall_Patrol_01_Func012001(), Trig_Hall_Patrol_01_Func012002() ) ) then
        return false
    endif
    if ( not GetBooleanOr( Trig_Hall_Patrol_01_Func013001(), Trig_Hall_Patrol_01_Func013002() ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hall_Patrol_01_Actions takes nothing returns nothing
    set udg_HallPatrolTarget = 2
    set udg_PointHallPatrollerTargetA = udg_PointHallPatrol02A
    set udg_PointHallPatrollerTargetB = udg_PointHallPatrol02B
    set udg_PointHallPatrollerTargetC = udg_PointHallPatrol02C
    set udg_HallPatrollerTargetA = gg_rct_Hall_Patrol_02A
    set udg_HallPatrollerTargetB = gg_rct_Hall_Patrol_02B
    set udg_HallPatrollerTargetC = gg_rct_Hall_Patrol_02C
    call StartTimerBJ( udg_HallPatrolTimer, false, 5.00 )
endfunction

//===========================================================================
function InitTrig_Hall_Patrol_01 takes nothing returns nothing
    set gg_trg_Hall_Patrol_01 = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Hall_Patrol_01, 0.50 )
    call TriggerAddCondition( gg_trg_Hall_Patrol_01, Condition( function Trig_Hall_Patrol_01_Conditions ) )
    call TriggerAddAction( gg_trg_Hall_Patrol_01, function Trig_Hall_Patrol_01_Actions )
endfunction

//===========================================================================
// Trigger: Hall Patrol 02
//===========================================================================
function Trig_Hall_Patrol_02_Func011001 takes nothing returns boolean
    return ( udg_HallPatrollerA == null )
endfunction

function Trig_Hall_Patrol_02_Func011002 takes nothing returns boolean
    return ( RectContainsUnit(udg_HallPatrollerTargetA, udg_HallPatrollerA) == true )
endfunction

function Trig_Hall_Patrol_02_Func012001 takes nothing returns boolean
    return ( udg_HallPatrollerB == null )
endfunction

function Trig_Hall_Patrol_02_Func012002 takes nothing returns boolean
    return ( RectContainsUnit(udg_HallPatrollerTargetB, udg_HallPatrollerB) == true )
endfunction

function Trig_Hall_Patrol_02_Func013001 takes nothing returns boolean
    return ( udg_HallPatrollerC == null )
endfunction

function Trig_Hall_Patrol_02_Func013002 takes nothing returns boolean
    return ( RectContainsUnit(udg_HallPatrollerTargetC, udg_HallPatrollerC) == true )
endfunction

function Trig_Hall_Patrol_02_Conditions takes nothing returns boolean
    if ( not ( udg_HallPatrolTarget == 2 ) ) then
        return false
    endif
    if ( not GetBooleanOr( Trig_Hall_Patrol_02_Func011001(), Trig_Hall_Patrol_02_Func011002() ) ) then
        return false
    endif
    if ( not GetBooleanOr( Trig_Hall_Patrol_02_Func012001(), Trig_Hall_Patrol_02_Func012002() ) ) then
        return false
    endif
    if ( not GetBooleanOr( Trig_Hall_Patrol_02_Func013001(), Trig_Hall_Patrol_02_Func013002() ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hall_Patrol_02_Actions takes nothing returns nothing
    set udg_HallPatrolTarget = 3
    set udg_PointHallPatrollerTargetA = udg_PointHallPatrol03A
    set udg_PointHallPatrollerTargetB = udg_PointHallPatrol03B
    set udg_PointHallPatrollerTargetC = udg_PointHallPatrol03C
    set udg_HallPatrollerTargetA = gg_rct_Hall_Patrol_03A
    set udg_HallPatrollerTargetB = gg_rct_Hall_Patrol_03B
    set udg_HallPatrollerTargetC = gg_rct_Hall_Patrol_03C
    call StartTimerBJ( udg_HallPatrolTimer, false, 1.00 )
endfunction

//===========================================================================
function InitTrig_Hall_Patrol_02 takes nothing returns nothing
    set gg_trg_Hall_Patrol_02 = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Hall_Patrol_02, 0.50 )
    call TriggerAddCondition( gg_trg_Hall_Patrol_02, Condition( function Trig_Hall_Patrol_02_Conditions ) )
    call TriggerAddAction( gg_trg_Hall_Patrol_02, function Trig_Hall_Patrol_02_Actions )
endfunction

//===========================================================================
// Trigger: Hall Patrol 03
//===========================================================================
function Trig_Hall_Patrol_03_Func011001 takes nothing returns boolean
    return ( udg_HallPatrollerA == null )
endfunction

function Trig_Hall_Patrol_03_Func011002 takes nothing returns boolean
    return ( RectContainsUnit(udg_HallPatrollerTargetA, udg_HallPatrollerA) == true )
endfunction

function Trig_Hall_Patrol_03_Func012001 takes nothing returns boolean
    return ( udg_HallPatrollerB == null )
endfunction

function Trig_Hall_Patrol_03_Func012002 takes nothing returns boolean
    return ( RectContainsUnit(udg_HallPatrollerTargetB, udg_HallPatrollerB) == true )
endfunction

function Trig_Hall_Patrol_03_Func013001 takes nothing returns boolean
    return ( udg_HallPatrollerC == null )
endfunction

function Trig_Hall_Patrol_03_Func013002 takes nothing returns boolean
    return ( RectContainsUnit(udg_HallPatrollerTargetC, udg_HallPatrollerC) == true )
endfunction

function Trig_Hall_Patrol_03_Conditions takes nothing returns boolean
    if ( not ( udg_HallPatrolTarget == 3 ) ) then
        return false
    endif
    if ( not GetBooleanOr( Trig_Hall_Patrol_03_Func011001(), Trig_Hall_Patrol_03_Func011002() ) ) then
        return false
    endif
    if ( not GetBooleanOr( Trig_Hall_Patrol_03_Func012001(), Trig_Hall_Patrol_03_Func012002() ) ) then
        return false
    endif
    if ( not GetBooleanOr( Trig_Hall_Patrol_03_Func013001(), Trig_Hall_Patrol_03_Func013002() ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hall_Patrol_03_Actions takes nothing returns nothing
    set udg_HallPatrolTarget = 4
    set udg_PointHallPatrollerTargetA = udg_PointHallPatrol04A
    set udg_PointHallPatrollerTargetB = udg_PointHallPatrol04B
    set udg_PointHallPatrollerTargetC = udg_PointHallPatrol04C
    set udg_HallPatrollerTargetA = gg_rct_Hall_Patrol_04A
    set udg_HallPatrollerTargetB = gg_rct_Hall_Patrol_04B
    set udg_HallPatrollerTargetC = gg_rct_Hall_Patrol_04C
    call StartTimerBJ( udg_HallPatrolTimer, false, 0.00 )
endfunction

//===========================================================================
function InitTrig_Hall_Patrol_03 takes nothing returns nothing
    set gg_trg_Hall_Patrol_03 = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Hall_Patrol_03, 0.20 )
    call TriggerAddCondition( gg_trg_Hall_Patrol_03, Condition( function Trig_Hall_Patrol_03_Conditions ) )
    call TriggerAddAction( gg_trg_Hall_Patrol_03, function Trig_Hall_Patrol_03_Actions )
endfunction

//===========================================================================
// Trigger: Hall Patrol 04
//===========================================================================
function Trig_Hall_Patrol_04_Func011001 takes nothing returns boolean
    return ( udg_HallPatrollerA == null )
endfunction

function Trig_Hall_Patrol_04_Func011002 takes nothing returns boolean
    return ( RectContainsUnit(udg_HallPatrollerTargetA, udg_HallPatrollerA) == true )
endfunction

function Trig_Hall_Patrol_04_Func012001 takes nothing returns boolean
    return ( udg_HallPatrollerB == null )
endfunction

function Trig_Hall_Patrol_04_Func012002 takes nothing returns boolean
    return ( RectContainsUnit(udg_HallPatrollerTargetB, udg_HallPatrollerB) == true )
endfunction

function Trig_Hall_Patrol_04_Func013001 takes nothing returns boolean
    return ( udg_HallPatrollerC == null )
endfunction

function Trig_Hall_Patrol_04_Func013002 takes nothing returns boolean
    return ( RectContainsUnit(udg_HallPatrollerTargetC, udg_HallPatrollerC) == true )
endfunction

function Trig_Hall_Patrol_04_Conditions takes nothing returns boolean
    if ( not ( udg_HallPatrolTarget == 4 ) ) then
        return false
    endif
    if ( not GetBooleanOr( Trig_Hall_Patrol_04_Func011001(), Trig_Hall_Patrol_04_Func011002() ) ) then
        return false
    endif
    if ( not GetBooleanOr( Trig_Hall_Patrol_04_Func012001(), Trig_Hall_Patrol_04_Func012002() ) ) then
        return false
    endif
    if ( not GetBooleanOr( Trig_Hall_Patrol_04_Func013001(), Trig_Hall_Patrol_04_Func013002() ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hall_Patrol_04_Actions takes nothing returns nothing
    set udg_HallPatrolTarget = 5
    set udg_PointHallPatrollerTargetA = udg_PointHallPatrol05A
    set udg_PointHallPatrollerTargetB = udg_PointHallPatrol05B
    set udg_PointHallPatrollerTargetC = udg_PointHallPatrol05C
    set udg_HallPatrollerTargetA = gg_rct_Hall_Patrol_05A
    set udg_HallPatrollerTargetB = gg_rct_Hall_Patrol_05B
    set udg_HallPatrollerTargetC = gg_rct_Hall_Patrol_05C
    call StartTimerBJ( udg_HallPatrolTimer, false, 5.00 )
endfunction

//===========================================================================
function InitTrig_Hall_Patrol_04 takes nothing returns nothing
    set gg_trg_Hall_Patrol_04 = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Hall_Patrol_04, 0.50 )
    call TriggerAddCondition( gg_trg_Hall_Patrol_04, Condition( function Trig_Hall_Patrol_04_Conditions ) )
    call TriggerAddAction( gg_trg_Hall_Patrol_04, function Trig_Hall_Patrol_04_Actions )
endfunction

//===========================================================================
// Trigger: Hall Patrol 05
//===========================================================================
function Trig_Hall_Patrol_05_Func011001 takes nothing returns boolean
    return ( udg_HallPatrollerA == null )
endfunction

function Trig_Hall_Patrol_05_Func011002 takes nothing returns boolean
    return ( RectContainsUnit(udg_HallPatrollerTargetA, udg_HallPatrollerA) == true )
endfunction

function Trig_Hall_Patrol_05_Func012001 takes nothing returns boolean
    return ( udg_HallPatrollerB == null )
endfunction

function Trig_Hall_Patrol_05_Func012002 takes nothing returns boolean
    return ( RectContainsUnit(udg_HallPatrollerTargetB, udg_HallPatrollerB) == true )
endfunction

function Trig_Hall_Patrol_05_Func013001 takes nothing returns boolean
    return ( udg_HallPatrollerC == null )
endfunction

function Trig_Hall_Patrol_05_Func013002 takes nothing returns boolean
    return ( RectContainsUnit(udg_HallPatrollerTargetC, udg_HallPatrollerC) == true )
endfunction

function Trig_Hall_Patrol_05_Conditions takes nothing returns boolean
    if ( not ( udg_HallPatrolTarget == 5 ) ) then
        return false
    endif
    if ( not GetBooleanOr( Trig_Hall_Patrol_05_Func011001(), Trig_Hall_Patrol_05_Func011002() ) ) then
        return false
    endif
    if ( not GetBooleanOr( Trig_Hall_Patrol_05_Func012001(), Trig_Hall_Patrol_05_Func012002() ) ) then
        return false
    endif
    if ( not GetBooleanOr( Trig_Hall_Patrol_05_Func013001(), Trig_Hall_Patrol_05_Func013002() ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hall_Patrol_05_Actions takes nothing returns nothing
    set udg_HallPatrolTarget = 6
    set udg_PointHallPatrollerTargetA = udg_PointHallPatrol06A
    set udg_PointHallPatrollerTargetB = udg_PointHallPatrol06B
    set udg_PointHallPatrollerTargetC = udg_PointHallPatrol06C
    set udg_HallPatrollerTargetA = gg_rct_Hall_Patrol_06A
    set udg_HallPatrollerTargetB = gg_rct_Hall_Patrol_06B
    set udg_HallPatrollerTargetC = gg_rct_Hall_Patrol_06C
    call StartTimerBJ( udg_HallPatrolTimer, false, 1.00 )
endfunction

//===========================================================================
function InitTrig_Hall_Patrol_05 takes nothing returns nothing
    set gg_trg_Hall_Patrol_05 = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Hall_Patrol_05, 0.50 )
    call TriggerAddCondition( gg_trg_Hall_Patrol_05, Condition( function Trig_Hall_Patrol_05_Conditions ) )
    call TriggerAddAction( gg_trg_Hall_Patrol_05, function Trig_Hall_Patrol_05_Actions )
endfunction

//===========================================================================
// Trigger: Hall Patrol 06
//===========================================================================
function Trig_Hall_Patrol_06_Func011001 takes nothing returns boolean
    return ( udg_HallPatrollerA == null )
endfunction

function Trig_Hall_Patrol_06_Func011002 takes nothing returns boolean
    return ( RectContainsUnit(udg_HallPatrollerTargetA, udg_HallPatrollerA) == true )
endfunction

function Trig_Hall_Patrol_06_Func012001 takes nothing returns boolean
    return ( udg_HallPatrollerB == null )
endfunction

function Trig_Hall_Patrol_06_Func012002 takes nothing returns boolean
    return ( RectContainsUnit(udg_HallPatrollerTargetB, udg_HallPatrollerB) == true )
endfunction

function Trig_Hall_Patrol_06_Func013001 takes nothing returns boolean
    return ( udg_HallPatrollerC == null )
endfunction

function Trig_Hall_Patrol_06_Func013002 takes nothing returns boolean
    return ( RectContainsUnit(udg_HallPatrollerTargetC, udg_HallPatrollerC) == true )
endfunction

function Trig_Hall_Patrol_06_Conditions takes nothing returns boolean
    if ( not ( udg_HallPatrolTarget == 6 ) ) then
        return false
    endif
    if ( not GetBooleanOr( Trig_Hall_Patrol_06_Func011001(), Trig_Hall_Patrol_06_Func011002() ) ) then
        return false
    endif
    if ( not GetBooleanOr( Trig_Hall_Patrol_06_Func012001(), Trig_Hall_Patrol_06_Func012002() ) ) then
        return false
    endif
    if ( not GetBooleanOr( Trig_Hall_Patrol_06_Func013001(), Trig_Hall_Patrol_06_Func013002() ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hall_Patrol_06_Actions takes nothing returns nothing
    set udg_HallPatrolTarget = 1
    set udg_PointHallPatrollerTargetA = udg_PointHallPatrol01A
    set udg_PointHallPatrollerTargetB = udg_PointHallPatrol01B
    set udg_PointHallPatrollerTargetC = udg_PointHallPatrol01C
    set udg_HallPatrollerTargetA = gg_rct_Hall_Patrol_01A
    set udg_HallPatrollerTargetB = gg_rct_Hall_Patrol_01B
    set udg_HallPatrollerTargetC = gg_rct_Hall_Patrol_01C
    call StartTimerBJ( udg_HallPatrolTimer, false, 0.00 )
endfunction

//===========================================================================
function InitTrig_Hall_Patrol_06 takes nothing returns nothing
    set gg_trg_Hall_Patrol_06 = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Hall_Patrol_06, 0.50 )
    call TriggerAddCondition( gg_trg_Hall_Patrol_06, Condition( function Trig_Hall_Patrol_06_Conditions ) )
    call TriggerAddAction( gg_trg_Hall_Patrol_06, function Trig_Hall_Patrol_06_Actions )
endfunction

//===========================================================================
// Trigger: Wave Source 01 Tripwire
//===========================================================================
function Trig_Wave_Source_01_Tripwire_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetEnteringUnit() == udg_Arthas ) ) then
        return false
    endif
    if ( not ( udg_WaveSource != 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Wave_Source_01_Tripwire_Actions takes nothing returns nothing
    set udg_WaveSource = 1
    set udg_WaveSpawnSourceA = udg_PointWaveSource01A
    set udg_WaveSpawnSourceB = udg_PointWaveSource01B
endfunction

//===========================================================================
function InitTrig_Wave_Source_01_Tripwire takes nothing returns nothing
    set gg_trg_Wave_Source_01_Tripwire = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Source_01_Tripwire, gg_rct_Wave_Source_Tripwire_01A )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Source_01_Tripwire, gg_rct_Wave_Source_Tripwire_01B )
    call TriggerAddCondition( gg_trg_Wave_Source_01_Tripwire, Condition( function Trig_Wave_Source_01_Tripwire_Conditions ) )
    call TriggerAddAction( gg_trg_Wave_Source_01_Tripwire, function Trig_Wave_Source_01_Tripwire_Actions )
endfunction

//===========================================================================
// Trigger: Wave Source 02 Tripwire
//===========================================================================
function Trig_Wave_Source_02_Tripwire_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetEnteringUnit() == udg_Arthas ) ) then
        return false
    endif
    if ( not ( udg_WaveSource != 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Wave_Source_02_Tripwire_Actions takes nothing returns nothing
    set udg_WaveSource = 2
    set udg_WaveSpawnSourceA = udg_PointWaveSource02A
    set udg_WaveSpawnSourceB = udg_PointWaveSource02B
endfunction

//===========================================================================
function InitTrig_Wave_Source_02_Tripwire takes nothing returns nothing
    set gg_trg_Wave_Source_02_Tripwire = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Source_02_Tripwire, gg_rct_Wave_Source_Tripwire_02A )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Source_02_Tripwire, gg_rct_Wave_Source_Tripwire_02B )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Source_02_Tripwire, gg_rct_Wave_Source_Tripwire_02C )
    call TriggerAddCondition( gg_trg_Wave_Source_02_Tripwire, Condition( function Trig_Wave_Source_02_Tripwire_Conditions ) )
    call TriggerAddAction( gg_trg_Wave_Source_02_Tripwire, function Trig_Wave_Source_02_Tripwire_Actions )
endfunction

//===========================================================================
// Trigger: Wave Source 03 Tripwire
//===========================================================================
function Trig_Wave_Source_03_Tripwire_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetEnteringUnit() == udg_Arthas ) ) then
        return false
    endif
    if ( not ( udg_WaveSource != 3 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Wave_Source_03_Tripwire_Actions takes nothing returns nothing
    set udg_WaveSource = 3
    set udg_WaveSpawnSourceA = udg_PointWaveSource03A
    set udg_WaveSpawnSourceB = udg_PointWaveSource03B
endfunction

//===========================================================================
function InitTrig_Wave_Source_03_Tripwire takes nothing returns nothing
    set gg_trg_Wave_Source_03_Tripwire = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Source_03_Tripwire, gg_rct_Wave_Source_Tripwire_03A )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Source_03_Tripwire, gg_rct_Wave_Source_Tripwire_03B )
    call TriggerAddCondition( gg_trg_Wave_Source_03_Tripwire, Condition( function Trig_Wave_Source_03_Tripwire_Conditions ) )
    call TriggerAddAction( gg_trg_Wave_Source_03_Tripwire, function Trig_Wave_Source_03_Tripwire_Actions )
endfunction

//===========================================================================
// Trigger: Wave Source 04 Tripwire
//===========================================================================
function Trig_Wave_Source_04_Tripwire_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetEnteringUnit() == udg_Arthas ) ) then
        return false
    endif
    if ( not ( udg_WaveSource != 4 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Wave_Source_04_Tripwire_Actions takes nothing returns nothing
    set udg_WaveSource = 4
    set udg_WaveSpawnSourceA = udg_PointWaveSource04A
    set udg_WaveSpawnSourceB = udg_PointWaveSource04B
endfunction

//===========================================================================
function InitTrig_Wave_Source_04_Tripwire takes nothing returns nothing
    set gg_trg_Wave_Source_04_Tripwire = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Source_04_Tripwire, gg_rct_Wave_Source_Tripwire_04A )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Source_04_Tripwire, gg_rct_Wave_Source_Tripwire_04B )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Source_04_Tripwire, gg_rct_Wave_Source_Tripwire_04C )
    call TriggerAddCondition( gg_trg_Wave_Source_04_Tripwire, Condition( function Trig_Wave_Source_04_Tripwire_Conditions ) )
    call TriggerAddAction( gg_trg_Wave_Source_04_Tripwire, function Trig_Wave_Source_04_Tripwire_Actions )
endfunction

//===========================================================================
// Trigger: Wave Source 05 Tripwire
//===========================================================================
function Trig_Wave_Source_05_Tripwire_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetEnteringUnit() == udg_Arthas ) ) then
        return false
    endif
    if ( not ( udg_WaveSource != 5 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Wave_Source_05_Tripwire_Actions takes nothing returns nothing
    set udg_WaveSource = 5
    set udg_WaveSpawnSourceA = udg_PointWaveSource05A
    set udg_WaveSpawnSourceB = udg_PointWaveSource05B
endfunction

//===========================================================================
function InitTrig_Wave_Source_05_Tripwire takes nothing returns nothing
    set gg_trg_Wave_Source_05_Tripwire = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Source_05_Tripwire, gg_rct_Wave_Source_Tripwire_05A )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Source_05_Tripwire, gg_rct_Wave_Source_Tripwire_05B )
    call TriggerAddCondition( gg_trg_Wave_Source_05_Tripwire, Condition( function Trig_Wave_Source_05_Tripwire_Conditions ) )
    call TriggerAddAction( gg_trg_Wave_Source_05_Tripwire, function Trig_Wave_Source_05_Tripwire_Actions )
endfunction

//===========================================================================
// Trigger: Wave Source 06 Tripwire
//===========================================================================
function Trig_Wave_Source_06_Tripwire_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetEnteringUnit() == udg_Arthas ) ) then
        return false
    endif
    if ( not ( udg_WaveSource != 6 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Wave_Source_06_Tripwire_Actions takes nothing returns nothing
    set udg_WaveSource = 6
    set udg_WaveSpawnSourceA = udg_PointWaveSource06A
    set udg_WaveSpawnSourceB = udg_PointWaveSource06B
endfunction

//===========================================================================
function InitTrig_Wave_Source_06_Tripwire takes nothing returns nothing
    set gg_trg_Wave_Source_06_Tripwire = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Source_06_Tripwire, gg_rct_Wave_Source_Tripwire_06A )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Source_06_Tripwire, gg_rct_Wave_Source_Tripwire_06B )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Source_06_Tripwire, gg_rct_Wave_Source_Tripwire_06C )
    call TriggerAddCondition( gg_trg_Wave_Source_06_Tripwire, Condition( function Trig_Wave_Source_06_Tripwire_Conditions ) )
    call TriggerAddAction( gg_trg_Wave_Source_06_Tripwire, function Trig_Wave_Source_06_Tripwire_Actions )
endfunction

//===========================================================================
// Trigger: Wave Source 07 Tripwire
//===========================================================================
function Trig_Wave_Source_07_Tripwire_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetEnteringUnit() == udg_Arthas ) ) then
        return false
    endif
    if ( not ( udg_WaveSource != 7 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Wave_Source_07_Tripwire_Actions takes nothing returns nothing
    set udg_WaveSource = 7
    set udg_WaveSpawnSourceA = udg_PointWaveSource07A
    set udg_WaveSpawnSourceB = udg_PointWaveSource07B
endfunction

//===========================================================================
function InitTrig_Wave_Source_07_Tripwire takes nothing returns nothing
    set gg_trg_Wave_Source_07_Tripwire = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Source_07_Tripwire, gg_rct_Wave_Source_Tripwire_07A )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Source_07_Tripwire, gg_rct_Wave_Source_Tripwire_07B )
    call TriggerAddCondition( gg_trg_Wave_Source_07_Tripwire, Condition( function Trig_Wave_Source_07_Tripwire_Conditions ) )
    call TriggerAddAction( gg_trg_Wave_Source_07_Tripwire, function Trig_Wave_Source_07_Tripwire_Actions )
endfunction

//===========================================================================
// Trigger: Wave Types Starting
//===========================================================================
function Trig_Wave_Types_Starting_Actions takes nothing returns nothing
    set udg_WaveSpawnUnitTypeA = 'n001'
    set udg_WaveSpawnUnitTypeB = 'uske'
    set udg_WaveSpawnNumA = 2
    set udg_WaveSpawnNumB = 2
    set udg_WaveSpawnPackSize = ( udg_WaveSpawnNumA + udg_WaveSpawnNumB )
    set udg_WaveSpawnMax = ( udg_WaveSpawnPackSize * 2 )
endfunction

//===========================================================================
function InitTrig_Wave_Types_Starting takes nothing returns nothing
    set gg_trg_Wave_Types_Starting = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Wave_Types_Starting, function Trig_Wave_Types_Starting_Actions )
endfunction

//===========================================================================
// Trigger: Wave Types Upgrade01 Tripwire
//===========================================================================
function Trig_Wave_Types_Upgrade01_Tripwire_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetEnteringUnit() == udg_Arthas ) ) then
        return false
    endif
    return true
endfunction

function Trig_Wave_Types_Upgrade01_Tripwire_Actions takes nothing returns nothing
    set udg_WaveSpawnUnitTypeA = 'n001'
    set udg_WaveSpawnUnitTypeB = 'ugho'
    set udg_WaveSpawnNumA = 2
    set udg_WaveSpawnNumB = 1
    set udg_WaveSpawnPackSize = ( udg_WaveSpawnNumA + udg_WaveSpawnNumB )
    set udg_WaveSpawnMax = ( udg_WaveSpawnPackSize * 2 )
endfunction

//===========================================================================
function InitTrig_Wave_Types_Upgrade01_Tripwire takes nothing returns nothing
    set gg_trg_Wave_Types_Upgrade01_Tripwire = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Types_Upgrade01_Tripwire, gg_rct_Wave_Type_Tripwire_01A )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Types_Upgrade01_Tripwire, gg_rct_Wave_Type_Tripwire_01B )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Types_Upgrade01_Tripwire, gg_rct_Wave_Type_Tripwire_01C )
    call TriggerAddCondition( gg_trg_Wave_Types_Upgrade01_Tripwire, Condition( function Trig_Wave_Types_Upgrade01_Tripwire_Conditions ) )
    call TriggerAddAction( gg_trg_Wave_Types_Upgrade01_Tripwire, function Trig_Wave_Types_Upgrade01_Tripwire_Actions )
endfunction

//===========================================================================
// Trigger: Wave Types Upgrade02 Tripwire
//===========================================================================
function Trig_Wave_Types_Upgrade02_Tripwire_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetEnteringUnit() == udg_Arthas ) ) then
        return false
    endif
    return true
endfunction

function Trig_Wave_Types_Upgrade02_Tripwire_Actions takes nothing returns nothing
    set udg_WaveSpawnUnitTypeA = 'uske'
    set udg_WaveSpawnUnitTypeB = 'ugho'
    set udg_WaveSpawnNumA = 2
    set udg_WaveSpawnNumB = 2
    set udg_WaveSpawnPackSize = ( udg_WaveSpawnNumA + udg_WaveSpawnNumB )
    set udg_WaveSpawnMax = ( udg_WaveSpawnPackSize * 2 )
endfunction

//===========================================================================
function InitTrig_Wave_Types_Upgrade02_Tripwire takes nothing returns nothing
    set gg_trg_Wave_Types_Upgrade02_Tripwire = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Types_Upgrade02_Tripwire, gg_rct_Wave_Type_Tripwire_02A )
    call TriggerAddCondition( gg_trg_Wave_Types_Upgrade02_Tripwire, Condition( function Trig_Wave_Types_Upgrade02_Tripwire_Conditions ) )
    call TriggerAddAction( gg_trg_Wave_Types_Upgrade02_Tripwire, function Trig_Wave_Types_Upgrade02_Tripwire_Actions )
endfunction

//===========================================================================
// Trigger: Wave Types Upgrade03 Tripwire
//===========================================================================
function Trig_Wave_Types_Upgrade03_Tripwire_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetEnteringUnit() == udg_Arthas ) ) then
        return false
    endif
    return true
endfunction

function Trig_Wave_Types_Upgrade03_Tripwire_Actions takes nothing returns nothing
    set udg_WaveSpawnUnitTypeA = 'ugho'
    set udg_WaveSpawnUnitTypeB = 'ucry'
    set udg_WaveSpawnNumA = 2
    set udg_WaveSpawnNumB = 1
    set udg_WaveSpawnPackSize = ( udg_WaveSpawnNumA + udg_WaveSpawnNumB )
    set udg_WaveSpawnMax = ( udg_WaveSpawnPackSize * 2 )
endfunction

//===========================================================================
function InitTrig_Wave_Types_Upgrade03_Tripwire takes nothing returns nothing
    set gg_trg_Wave_Types_Upgrade03_Tripwire = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Types_Upgrade03_Tripwire, gg_rct_Wave_Type_Tripwire_03A )
    call TriggerAddCondition( gg_trg_Wave_Types_Upgrade03_Tripwire, Condition( function Trig_Wave_Types_Upgrade03_Tripwire_Conditions ) )
    call TriggerAddAction( gg_trg_Wave_Types_Upgrade03_Tripwire, function Trig_Wave_Types_Upgrade03_Tripwire_Actions )
endfunction

//===========================================================================
// Trigger: Wave Types Upgrade04 Tripwire
//===========================================================================
function Trig_Wave_Types_Upgrade04_Tripwire_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetEnteringUnit() == udg_Arthas ) ) then
        return false
    endif
    return true
endfunction

function Trig_Wave_Types_Upgrade04_Tripwire_Actions takes nothing returns nothing
    set udg_WaveSpawnUnitTypeA = 'ugho'
    set udg_WaveSpawnUnitTypeB = 'ucry'
    set udg_WaveSpawnNumA = 2
    set udg_WaveSpawnNumB = 2
    set udg_WaveSpawnPackSize = ( udg_WaveSpawnNumA + udg_WaveSpawnNumB )
    set udg_WaveSpawnMax = ( udg_WaveSpawnPackSize * 2 )
    set udg_WaveSpawnDelay = udg_WaveSpawnDelayLate
endfunction

//===========================================================================
function InitTrig_Wave_Types_Upgrade04_Tripwire takes nothing returns nothing
    set gg_trg_Wave_Types_Upgrade04_Tripwire = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Types_Upgrade04_Tripwire, gg_rct_Wave_Type_Tripwire_04A )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Types_Upgrade04_Tripwire, gg_rct_Wave_Type_Tripwire_04B )
    call TriggerAddCondition( gg_trg_Wave_Types_Upgrade04_Tripwire, Condition( function Trig_Wave_Types_Upgrade04_Tripwire_Conditions ) )
    call TriggerAddAction( gg_trg_Wave_Types_Upgrade04_Tripwire, function Trig_Wave_Types_Upgrade04_Tripwire_Actions )
endfunction

//===========================================================================
// Trigger: Wave Start
//===========================================================================
function Trig_Wave_Start_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetEnteringUnit() == udg_Arthas ) ) then
        return false
    endif
    return true
endfunction

function Trig_Wave_Start_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Init Spawn Source
    call TriggerExecute( gg_trg_Wave_Source_01_Tripwire )
    call ConditionalTriggerExecute( gg_trg_Wave_Types_Starting )
    // Start Spawning
    call ConditionalTriggerExecute( gg_trg_Wave_Spawn )
    // Repeat Harassment Orders
    call StartTimerBJ( udg_WaveOrdersTimer, true, 5.00 )
endfunction

//===========================================================================
function InitTrig_Wave_Start takes nothing returns nothing
    set gg_trg_Wave_Start = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Start, gg_rct_Wave_Start_TripwireA )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Start, gg_rct_Wave_Start_TripwireB )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Start, gg_rct_Wave_Start_TripwireC )
    call TriggerRegisterEnterRectSimple( gg_trg_Wave_Start, gg_rct_Wave_Start_TripwireD )
    call TriggerAddCondition( gg_trg_Wave_Start, Condition( function Trig_Wave_Start_Conditions ) )
    call TriggerAddAction( gg_trg_Wave_Start, function Trig_Wave_Start_Actions )
endfunction

//===========================================================================
// Trigger: Wave Spawn
//===========================================================================
function Trig_Wave_Spawn_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Wave_Spawn_Func003C takes nothing returns boolean
    if ( not ( ( CountUnitsInGroup(udg_WaveUnits) + udg_WaveSpawnPackSize ) > udg_WaveSpawnMax ) ) then
        return false
    endif
    return true
endfunction

function Trig_Wave_Spawn_Actions takes nothing returns nothing
    call StartTimerBJ( udg_WaveSpawnTimer, false, udg_WaveSpawnDelay )
    // Skip The Spawn If Too Many Units
    if ( Trig_Wave_Spawn_Func003C() ) then
        return
    else
    endif
    // Spawn Pack A
    set udg_WaveSpawnUnitType = udg_WaveSpawnUnitTypeA
    set udg_WaveSpawnSource = udg_WaveSpawnSourceA
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = udg_WaveSpawnNumA
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        call ConditionalTriggerExecute( gg_trg_Wave_Spawn_Single )
        call PolledWait( 0.50 )
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
    // Spawn Pack B
    set udg_WaveSpawnUnitType = udg_WaveSpawnUnitTypeB
    set udg_WaveSpawnSource = udg_WaveSpawnSourceB
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = udg_WaveSpawnNumB
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        call ConditionalTriggerExecute( gg_trg_Wave_Spawn_Single )
        call PolledWait( 0.50 )
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
    // Send Wave
    call ConditionalTriggerExecute( gg_trg_Wave_Orders )
endfunction

//===========================================================================
function InitTrig_Wave_Spawn takes nothing returns nothing
    set gg_trg_Wave_Spawn = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Wave_Spawn, udg_WaveSpawnTimer )
    call TriggerAddCondition( gg_trg_Wave_Spawn, Condition( function Trig_Wave_Spawn_Conditions ) )
    call TriggerAddAction( gg_trg_Wave_Spawn, function Trig_Wave_Spawn_Actions )
endfunction

//===========================================================================
// Trigger: Wave Spawn Single
//===========================================================================
function Trig_Wave_Spawn_Single_Actions takes nothing returns nothing
    call CreateNUnitsAtLoc( 1, udg_WaveSpawnUnitType, udg_P7_Dreadlords, udg_WaveSpawnSource, 90.00 )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_WaveUnits )
    call RemoveGuardPosition( GetLastCreatedUnit() )
endfunction

//===========================================================================
function InitTrig_Wave_Spawn_Single takes nothing returns nothing
    set gg_trg_Wave_Spawn_Single = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Wave_Spawn_Single, function Trig_Wave_Spawn_Single_Actions )
endfunction

//===========================================================================
// Trigger: Wave Orders
//===========================================================================
function Trig_Wave_Orders_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Wave_Orders_Func003Func001A takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnumUnit(), "attack", udg_TempPoint )
endfunction

function Trig_Wave_Orders_Func003C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_WaveUnits) > 12 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Wave_Orders_Actions takes nothing returns nothing
    set udg_TempPoint = GetUnitLoc(udg_Arthas)
    // Issue individual orders if we have over 12 units
    if ( Trig_Wave_Orders_Func003C() ) then
        call ForGroupBJ( udg_WaveUnits, function Trig_Wave_Orders_Func003Func001A )
    else
    endif
    // Hunt down Arthas
    call GroupPointOrderLocBJ( udg_WaveUnits, "attack", udg_TempPoint )
    // Cleanup
    call RemoveLocation( udg_TempPoint )
endfunction

//===========================================================================
function InitTrig_Wave_Orders takes nothing returns nothing
    set gg_trg_Wave_Orders = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Wave_Orders, udg_WaveOrdersTimer )
    call TriggerAddCondition( gg_trg_Wave_Orders, Condition( function Trig_Wave_Orders_Conditions ) )
    call TriggerAddAction( gg_trg_Wave_Orders, function Trig_Wave_Orders_Actions )
endfunction

//===========================================================================
// Trigger: Abom Ambush
//===========================================================================
function Trig_Abom_Ambush_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'ushd' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'uplg' ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(udg_AbomDoorLeft) == true ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(udg_AbomDoorRight) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Abom_Ambush_Func009A takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnumUnit(), "attack", GetRectCenter(gg_rct_Abom_Ambush_Target_Left) )
endfunction

function Trig_Abom_Ambush_Func010A takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnumUnit(), "attack", GetRectCenter(gg_rct_Abom_Ambush_Target_Right) )
endfunction

function Trig_Abom_Ambush_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Open the doors
    call ModifyGateBJ( bj_GATEOPERATION_OPEN, udg_AbomDoorLeft )
    call PlaySoundAtPointBJ( gg_snd_LargeCityGateOpen1, 100, GetDestructableLoc(udg_AbomDoorLeft), 0 )
    call TriggerSleepAction( 0.10 )
    call ModifyGateBJ( bj_GATEOPERATION_OPEN, udg_AbomDoorRight )
    call PlaySoundAtPointBJ( gg_snd_LargeCityGateOpen1, 100, GetDestructableLoc(udg_AbomDoorRight), 0 )
    // Ambush
    call ForGroupBJ( udg_AbomAmbushLeftUnits, function Trig_Abom_Ambush_Func009A )
    call ForGroupBJ( udg_AbomAmbushRightUnits, function Trig_Abom_Ambush_Func010A )
endfunction

//===========================================================================
function InitTrig_Abom_Ambush takes nothing returns nothing
    set gg_trg_Abom_Ambush = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Abom_Ambush, gg_rct_Abom_Ambush_Tripwire )
    call TriggerAddCondition( gg_trg_Abom_Ambush, Condition( function Trig_Abom_Ambush_Conditions ) )
    call TriggerAddAction( gg_trg_Abom_Ambush, function Trig_Abom_Ambush_Actions )
endfunction

//===========================================================================
// Trigger: Alley Ambush
//===========================================================================
function Trig_Alley_Ambush_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'ushd' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'uplg' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Alley_Ambush_Func004A takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_Uproot_Picked_Fiend )
endfunction

function Trig_Alley_Ambush_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_AlleyAmbushStarted = true
    // Ambush
    call ForGroupBJ( udg_AlleyAmbushUnits, function Trig_Alley_Ambush_Func004A )
endfunction

//===========================================================================
function InitTrig_Alley_Ambush takes nothing returns nothing
    set gg_trg_Alley_Ambush = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Alley_Ambush, gg_rct_Alley_Ambush_Tripwire )
    call TriggerAddCondition( gg_trg_Alley_Ambush, Condition( function Trig_Alley_Ambush_Conditions ) )
    call TriggerAddAction( gg_trg_Alley_Ambush, function Trig_Alley_Ambush_Actions )
endfunction

//===========================================================================
// Trigger: Prison Guards Pestering
//===========================================================================
function Trig_Prison_Guards_Pestering_Func001001 takes nothing returns boolean
    return ( udg_InCinematic == false )
endfunction

function Trig_Prison_Guards_Pestering_Actions takes nothing returns nothing
    loop
        exitwhen ( Trig_Prison_Guards_Pestering_Func001001() )
        call TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 1.00))
    endloop
    call IssueTargetDestructableOrder( udg_PrisonGuardA, "attack", gg_dest_DTg3_1073 )
    call PolledWait( 0.30 )
    call IssueTargetDestructableOrder( udg_PrisonGuardB, "attack", gg_dest_DTg3_1073 )
endfunction

//===========================================================================
function InitTrig_Prison_Guards_Pestering takes nothing returns nothing
    set gg_trg_Prison_Guards_Pestering = CreateTrigger(  )
    call TriggerRegisterTimerEventSingle( gg_trg_Prison_Guards_Pestering, 4.00 )
    call TriggerAddAction( gg_trg_Prison_Guards_Pestering, function Trig_Prison_Guards_Pestering_Actions )
endfunction

//===========================================================================
// Trigger: Prison Gate Regen
//===========================================================================
function Trig_Prison_Gate_Regen_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Prison_Gate_Regen_Actions takes nothing returns nothing
    call SetDestructableLifePercentBJ( udg_PrisonGate, 100.00 )
endfunction

//===========================================================================
function InitTrig_Prison_Gate_Regen takes nothing returns nothing
    set gg_trg_Prison_Gate_Regen = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Prison_Gate_Regen, 0.50 )
    call TriggerAddCondition( gg_trg_Prison_Gate_Regen, Condition( function Trig_Prison_Gate_Regen_Conditions ) )
    call TriggerAddAction( gg_trg_Prison_Gate_Regen, function Trig_Prison_Gate_Regen_Actions )
endfunction

//===========================================================================
// Trigger: Prison Guards Attacked
//===========================================================================
function Trig_Prison_Guards_Attacked_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( IsUnitInGroup(GetAttackedUnitBJ(), udg_PrisonGuards) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Prison_Guards_Attacked_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call PolledWait( 0.70 )
    call DisableTrigger( gg_trg_Prison_Gate_Regen )
    call IssuePointOrderLocBJ( udg_PrisonGuardA, "attack", GetRectCenter(gg_rct_Prison_Guards_AttackTargA) )
    call IssuePointOrderLocBJ( udg_PrisonGuardB, "attack", GetRectCenter(gg_rct_Prison_Guards_AttackTargB) )
endfunction

//===========================================================================
function InitTrig_Prison_Guards_Attacked takes nothing returns nothing
    set gg_trg_Prison_Guards_Attacked = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Prison_Guards_Attacked, Player(6), EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Prison_Guards_Attacked, Condition( function Trig_Prison_Guards_Attacked_Conditions ) )
    call TriggerAddAction( gg_trg_Prison_Guards_Attacked, function Trig_Prison_Guards_Attacked_Actions )
endfunction

//===========================================================================
// Trigger: Zombie Group Attacked
//===========================================================================
function Trig_Zombie_Group_Attacked_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( IsUnitInGroup(GetAttacker(), udg_ZombieGroupA) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Zombie_Group_Attacked_Func003A takes nothing returns nothing
    call GroupPointOrderLocBJ( udg_ZombieGroupA, "attack", GetUnitLoc(GetAttackedUnitBJ()) )
endfunction

function Trig_Zombie_Group_Attacked_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call ForGroupBJ( udg_ZombieGroupA, function Trig_Zombie_Group_Attacked_Func003A )
    call PolledWait( 10.00 )
    call EnableTrigger( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Zombie_Group_Attacked takes nothing returns nothing
    set gg_trg_Zombie_Group_Attacked = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Zombie_Group_Attacked, Player(0), EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Zombie_Group_Attacked, Condition( function Trig_Zombie_Group_Attacked_Conditions ) )
    call TriggerAddAction( gg_trg_Zombie_Group_Attacked, function Trig_Zombie_Group_Attacked_Actions )
endfunction

//===========================================================================
// Trigger: Fiend Ambush
//===========================================================================
function Trig_Fiend_Ambush_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'ushd' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'uplg' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Fiend_Ambush_Func004A takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_Uproot_Picked_Fiend )
endfunction

function Trig_Fiend_Ambush_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_FiendAmbushStarted = true
    // Ambush
    call ForGroupBJ( udg_FiendAmbushUnits, function Trig_Fiend_Ambush_Func004A )
endfunction

//===========================================================================
function InitTrig_Fiend_Ambush takes nothing returns nothing
    set gg_trg_Fiend_Ambush = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Fiend_Ambush, gg_rct_Fiend_Ambush_TripwireA )
    call TriggerRegisterEnterRectSimple( gg_trg_Fiend_Ambush, gg_rct_Fiend_Ambush_TripwireB )
    call TriggerRegisterEnterRectSimple( gg_trg_Fiend_Ambush, gg_rct_Fiend_Ambush_TripwireC )
    call TriggerAddCondition( gg_trg_Fiend_Ambush, Condition( function Trig_Fiend_Ambush_Conditions ) )
    call TriggerAddAction( gg_trg_Fiend_Ambush, function Trig_Fiend_Ambush_Actions )
endfunction

//===========================================================================
// Trigger: Skel Ambush
//===========================================================================
function Trig_Skel_Ambush_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'ushd' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'uplg' ) ) then
        return false
    endif
    if ( not ( IsLocationVisibleToPlayer(udg_VSourceSkelAmbushA, udg_AP1_Player) == false ) ) then
        return false
    endif
    if ( not ( IsLocationVisibleToPlayer(udg_VSourceSkelAmbushB, udg_AP1_Player) == false ) ) then
        return false
    endif
    if ( not ( IsLocationVisibleToPlayer(udg_VSourceSkelAmbushC, udg_AP1_Player) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Skel_Ambush_Func007A takes nothing returns nothing
    call PauseUnitBJ( false, GetEnumUnit() )
    call ShowUnitShow( GetEnumUnit() )
endfunction

function Trig_Skel_Ambush_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_SkelAmbushStarted = true
    // Open the door
    call ModifyGateBJ( bj_GATEOPERATION_OPEN, udg_GargoyleDoor )
    call PlaySoundAtPointBJ( gg_snd_LargeCityGateOpen1, 100, GetDestructableLoc(udg_GargoyleDoor), 0 )
    // Send in the troops
    call ForGroupBJ( udg_SkelAmbushers, function Trig_Skel_Ambush_Func007A )
    call GroupPointOrderLocBJ( udg_SkelAmbushers, "attack", GetRectCenter(gg_rct_Skel_Ambush_MoveTarg) )
    call PlaySoundAtPointBJ( gg_snd_NecromancerYesAttack3, 100, GetUnitLoc(gg_unit_unec_0149), 0 )
endfunction

//===========================================================================
function InitTrig_Skel_Ambush takes nothing returns nothing
    set gg_trg_Skel_Ambush = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Skel_Ambush, gg_rct_Horsie_Scene_Tripwire_Copy )
    call TriggerAddCondition( gg_trg_Skel_Ambush, Condition( function Trig_Skel_Ambush_Conditions ) )
    call TriggerAddAction( gg_trg_Skel_Ambush, function Trig_Skel_Ambush_Actions )
endfunction

//===========================================================================
// Trigger: Horsie Scene Setup
//===========================================================================
function Trig_Horsie_Scene_Setup_Func002A takes nothing returns nothing
    call CreatePermanentCorpseLocBJ( bj_CORPSETYPE_FLESH, GetUnitTypeId(GetEnumUnit()), GetOwningPlayer(GetEnumUnit()), GetUnitLoc(GetEnumUnit()), GetUnitFacing(GetEnumUnit()) )
    call RemoveUnit( GetEnumUnit() )
endfunction

function Trig_Horsie_Scene_Setup_Actions takes nothing returns nothing
    // Replace horses with horse corpses.
    call ForGroupBJ( udg_HorsieCorpses, function Trig_Horsie_Scene_Setup_Func002A )
    set udg_HorsieCorpses = GetUnitsInRectOfPlayer(gg_rct_Horsie_Corpses_Source, Player(PLAYER_NEUTRAL_PASSIVE))
endfunction

//===========================================================================
function InitTrig_Horsie_Scene_Setup takes nothing returns nothing
    set gg_trg_Horsie_Scene_Setup = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Horsie_Scene_Setup, function Trig_Horsie_Scene_Setup_Actions )
endfunction

//===========================================================================
// Trigger: Horsie Scene Tripwire
//===========================================================================
function Trig_Horsie_Scene_Tripwire_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( udg_HorsieSceneStarted == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'ushd' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'uplg' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Horsie_Scene_Tripwire_Actions takes nothing returns nothing
    set udg_HorsieSceneStarted = true
    call ConditionalTriggerExecute( gg_trg_Horsie_Scene )
endfunction

//===========================================================================
function InitTrig_Horsie_Scene_Tripwire takes nothing returns nothing
    set gg_trg_Horsie_Scene_Tripwire = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Horsie_Scene_Tripwire, gg_rct_Horsie_Scene_Tripwire )
    call TriggerAddCondition( gg_trg_Horsie_Scene_Tripwire, Condition( function Trig_Horsie_Scene_Tripwire_Conditions ) )
    call TriggerAddAction( gg_trg_Horsie_Scene_Tripwire, function Trig_Horsie_Scene_Tripwire_Actions )
endfunction

//===========================================================================
// Trigger: Horsie Scene VTripwire
//===========================================================================
function Trig_Horsie_Scene_VTripwire_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( udg_HorsieSceneStarted == false ) ) then
        return false
    endif
    if ( not ( IsLocationVisibleToPlayer(udg_VSourceHorsieA, udg_AP1_Player) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Horsie_Scene_VTripwire_Actions takes nothing returns nothing
    set udg_HorsieSceneStarted = true
    call ConditionalTriggerExecute( gg_trg_Horsie_Scene )
endfunction

//===========================================================================
function InitTrig_Horsie_Scene_VTripwire takes nothing returns nothing
    set gg_trg_Horsie_Scene_VTripwire = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Horsie_Scene_VTripwire, 0.50 )
    call TriggerAddCondition( gg_trg_Horsie_Scene_VTripwire, Condition( function Trig_Horsie_Scene_VTripwire_Conditions ) )
    call TriggerAddAction( gg_trg_Horsie_Scene_VTripwire, function Trig_Horsie_Scene_VTripwire_Actions )
endfunction

//===========================================================================
// Trigger: Horsie Scene
//===========================================================================
function Trig_Horsie_Scene_Func002A takes nothing returns nothing
    call SetUnitLifePercentBJ( GetEnumUnit(), 50.00 )
    call IssueImmediateOrderBJ( GetEnumUnit(), "cannibalize" )
endfunction

function Trig_Horsie_Scene_Func019A takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnumUnit(), "attack", GetRandomLocInRect(gg_rct_Horsie_Attackers_MoveTarg) )
endfunction

function Trig_Horsie_Scene_Actions takes nothing returns nothing
    // Eat up
    call ForGroupBJ( udg_HorsieEaters, function Trig_Horsie_Scene_Func002A )
    // Run Jimmy run!
    call SetUnitMoveSpeed( udg_HorsieRunner, 190.00 )
    call SetUnitLifeBJ( udg_HorsieRunner, 10.00 )
    call IssuePointOrderLocBJ( udg_HorsieRunner, "move", GetRectCenter(gg_rct_Horsie_Runner_MoveTarg) )
    call PolledWait( 0.20 )
    call PlaySoundOnUnitBJ( gg_snd_KnightNoRiderWhat3, 100, udg_HorsieRunner )
    // Chase him!
    call SetUnitMoveSpeed( udg_HorsieChaser, 270.00 )
    call IssueTargetOrderBJ( udg_HorsieChaser, "attack", udg_HorsieRunner )
    call PolledWait( 1.20 )
    call PlaySoundOnUnitBJ( gg_snd_KnightNoRiderWhat2, 100, udg_HorsieRunner )
    call PolledWait( 4.20 )
    // Give up (safety)
    call IssuePointOrderLocBJ( udg_HorsieChaser, "attack", GetRandomLocInRect(gg_rct_Horsie_Attackers_MoveTarg) )
    call PolledWait( 4.00 )
    // Now that some munching time has passed, bring out the other eaters
    call ForGroupBJ( udg_HorsieEaters, function Trig_Horsie_Scene_Func019A )
endfunction

//===========================================================================
function InitTrig_Horsie_Scene takes nothing returns nothing
    set gg_trg_Horsie_Scene = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Horsie_Scene, function Trig_Horsie_Scene_Actions )
endfunction

//===========================================================================
// Trigger: Chanting Corpse
//===========================================================================
function Trig_Chanting_Corpse_Actions takes nothing returns nothing
    call CreatePermanentCorpseLocBJ( bj_CORPSETYPE_BONE, 'n000', udg_P7_Dreadlords, GetRectCenter(gg_rct_Chanting_Skulls), GetRandomDirectionDeg() )
endfunction

//===========================================================================
function InitTrig_Chanting_Corpse takes nothing returns nothing
    set gg_trg_Chanting_Corpse = CreateTrigger(  )
    call TriggerRegisterTimerEventSingle( gg_trg_Chanting_Corpse, 1.00 )
    call TriggerAddAction( gg_trg_Chanting_Corpse, function Trig_Chanting_Corpse_Actions )
endfunction

//===========================================================================
// Trigger: Chanting Cycle
//===========================================================================
function Trig_Chanting_Cycle_Conditions takes nothing returns boolean
    if ( not ( udg_ChantingInterrupted == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Chanting_Cycle_Func002C takes nothing returns boolean
    if ( not ( udg_ChantingInterrupted == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Chanting_Cycle_Func004C takes nothing returns boolean
    if ( not ( udg_ChantingInterrupted == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Chanting_Cycle_Func006C takes nothing returns boolean
    if ( not ( udg_ChantingInterrupted == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Chanting_Cycle_Actions takes nothing returns nothing
    if ( Trig_Chanting_Cycle_Func002C() ) then
        call SetUnitAnimation( udg_ChantingNecroA, "stand channel" )
        call QueueUnitAnimationBJ( udg_ChantingNecroA, "spell attack" )
        call QueueUnitAnimationBJ( udg_ChantingNecroA, "stand victory" )
    else
    endif
    call PolledWait( 0.40 )
    if ( Trig_Chanting_Cycle_Func004C() ) then
        call SetUnitAnimation( udg_ChantingNecroB, "stand channel" )
        call QueueUnitAnimationBJ( udg_ChantingNecroB, "spell attack" )
        call QueueUnitAnimationBJ( udg_ChantingNecroB, "stand victory" )
    else
    endif
    call PolledWait( 0.40 )
    if ( Trig_Chanting_Cycle_Func006C() ) then
        call SetUnitAnimation( udg_ChantingNecroC, "stand channel" )
        call QueueUnitAnimationBJ( udg_ChantingNecroC, "spell attack" )
        call QueueUnitAnimationBJ( udg_ChantingNecroC, "stand victory" )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Chanting_Cycle takes nothing returns nothing
    set gg_trg_Chanting_Cycle = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Chanting_Cycle, 5.00 )
    call TriggerAddCondition( gg_trg_Chanting_Cycle, Condition( function Trig_Chanting_Cycle_Conditions ) )
    call TriggerAddAction( gg_trg_Chanting_Cycle, function Trig_Chanting_Cycle_Actions )
endfunction

//===========================================================================
// Trigger: Chanting Necro Attacked
//===========================================================================
function Trig_Chanting_Necro_Attacked_Conditions takes nothing returns boolean
    if ( not ( udg_ChantingInterrupted == false ) ) then
        return false
    endif
    if ( not ( IsUnitInGroup(GetAttackedUnitBJ(), udg_ChantingUnits) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Chanting_Necro_Attacked_Actions takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_Chanting_Necros_Interrupted )
endfunction

//===========================================================================
function InitTrig_Chanting_Necro_Attacked takes nothing returns nothing
    set gg_trg_Chanting_Necro_Attacked = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Chanting_Necro_Attacked, Player(6), EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Chanting_Necro_Attacked, Condition( function Trig_Chanting_Necro_Attacked_Conditions ) )
    call TriggerAddAction( gg_trg_Chanting_Necro_Attacked, function Trig_Chanting_Necro_Attacked_Actions )
endfunction

//===========================================================================
// Trigger: Chanting Necro Attacks
//===========================================================================
function Trig_Chanting_Necro_Attacks_Conditions takes nothing returns boolean
    if ( not ( udg_ChantingInterrupted == false ) ) then
        return false
    endif
    if ( not ( IsUnitInGroup(GetAttacker(), udg_ChantingUnits) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Chanting_Necro_Attacks_Actions takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_Chanting_Necros_Interrupted )
endfunction

//===========================================================================
function InitTrig_Chanting_Necro_Attacks takes nothing returns nothing
    set gg_trg_Chanting_Necro_Attacks = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Chanting_Necro_Attacks, Player(0), EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Chanting_Necro_Attacks, Condition( function Trig_Chanting_Necro_Attacks_Conditions ) )
    call TriggerAddAction( gg_trg_Chanting_Necro_Attacks, function Trig_Chanting_Necro_Attacks_Actions )
endfunction

//===========================================================================
// Trigger: Chanting Necros Interrupted
//===========================================================================
function Trig_Chanting_Necros_Interrupted_Func007C takes nothing returns boolean
    if ( not ( udg_Speaker != null ) ) then
        return false
    endif
    return true
endfunction

function Trig_Chanting_Necros_Interrupted_Actions takes nothing returns nothing
    set udg_ChantingInterrupted = true
    call IssuePointOrderLocBJ( udg_ChantingNecroA, "attack", GetRectCenter(gg_rct_Chanting_MoveTargA) )
    call IssuePointOrderLocBJ( udg_ChantingNecroB, "attack", GetRectCenter(gg_rct_Chanting_MoveTargB) )
    call IssuePointOrderLocBJ( udg_ChantingNecroC, "attack", GetRectCenter(gg_rct_Chanting_MoveTargC) )
    // Incidental Line
    set udg_Speaker = GroupPickRandomUnit(udg_ChantingUnits)
    if ( Trig_Chanting_Necros_Interrupted_Func007C() ) then
        call PlaySoundOnUnitBJ( gg_snd_NecromancerYesAttack1, 100, udg_Speaker )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Chanting_Necros_Interrupted takes nothing returns nothing
    set gg_trg_Chanting_Necros_Interrupted = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Chanting_Necros_Interrupted, function Trig_Chanting_Necros_Interrupted_Actions )
endfunction

//===========================================================================
// Trigger: Battle Room Corpses
//===========================================================================
function Trig_Battle_Room_Corpses_Func001A takes nothing returns nothing
    call GroupRemoveUnitSimple( GetEnumUnit(), udg_BattleRoomUnits )
    call CreatePermanentCorpseLocBJ( bj_CORPSETYPE_BONE, GetUnitTypeId(GetEnumUnit()), udg_P7_Dreadlords, GetUnitLoc(GetEnumUnit()), GetUnitFacing(GetEnumUnit()) )
    call RemoveUnit( GetEnumUnit() )
endfunction

function Trig_Battle_Room_Corpses_Actions takes nothing returns nothing
    call ForGroupBJ( udg_BattleRoomCorpseUnits, function Trig_Battle_Room_Corpses_Func001A )
endfunction

//===========================================================================
function InitTrig_Battle_Room_Corpses takes nothing returns nothing
    set gg_trg_Battle_Room_Corpses = CreateTrigger(  )
    call TriggerRegisterTimerEventSingle( gg_trg_Battle_Room_Corpses, 1.00 )
    call TriggerAddAction( gg_trg_Battle_Room_Corpses, function Trig_Battle_Room_Corpses_Actions )
endfunction

//===========================================================================
// Trigger: Battle Room Door Opened
//===========================================================================
function Trig_Battle_Room_Door_Opened_Func003Func004C takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnumUnit()) == udg_P2_Rescuables ) ) then
        return false
    endif
    return true
endfunction

function Trig_Battle_Room_Door_Opened_Func003Func005C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetEnumUnit()) == 'unec' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Battle_Room_Door_Opened_Func003A takes nothing returns nothing
    call ShowUnitShow( GetEnumUnit() )
    call PauseUnitBJ( false, GetEnumUnit() )
    call SetUnitInvulnerable( GetEnumUnit(), false )
    if ( Trig_Battle_Room_Door_Opened_Func003Func004C() ) then
        call RescueUnitBJ( GetEnumUnit(), udg_AP1_Player, true )
    else
    endif
    if ( Trig_Battle_Room_Door_Opened_Func003Func005C() ) then
        call IssueImmediateOrderBJ( GetEnumUnit(), "raisedeadon" )
    else
    endif
endfunction

function Trig_Battle_Room_Door_Opened_Actions takes nothing returns nothing
    // Battle begins
    call ForGroupBJ( udg_BattleRoomUnits, function Trig_Battle_Room_Door_Opened_Func003A )
    // Pan Camera
    call SmartCameraPanBJ( udg_AP1_Player, GetRectCenter(gg_rct_BattleRoom_PanTarg), 0.5 )
    // Visibility
    call CreateFogModifierRectBJ( true, udg_AP1_Player, FOG_OF_WAR_VISIBLE, gg_rct_BattleRoom_VM )
    set udg_BattleRoomVM = GetLastCreatedFogModifier()
    call TriggerSleepAction( 5.00 )
    call DestroyFogModifier( udg_BattleRoomVM )
endfunction

//===========================================================================
function InitTrig_Battle_Room_Door_Opened takes nothing returns nothing
    set gg_trg_Battle_Room_Door_Opened = CreateTrigger(  )
    call TriggerRegisterDeathEvent( gg_trg_Battle_Room_Door_Opened, gg_dest_L000_1875 )
    call TriggerAddAction( gg_trg_Battle_Room_Door_Opened, function Trig_Battle_Room_Door_Opened_Actions )
endfunction

//===========================================================================
// Trigger: CryptLeft Start
//===========================================================================
function Trig_CryptLeft_Start_Actions takes nothing returns nothing
    // Start Spawning
    set udg_CryptLeftDelay = 35.00
    set udg_CryptLeftMax = CountUnitsInGroup(udg_CryptLeftUnits)
    call StartTimerBJ( udg_CryptLeftTimer, false, udg_CryptLeftDelay )
endfunction

//===========================================================================
function InitTrig_CryptLeft_Start takes nothing returns nothing
    set gg_trg_CryptLeft_Start = CreateTrigger(  )
    call TriggerAddAction( gg_trg_CryptLeft_Start, function Trig_CryptLeft_Start_Actions )
endfunction

//===========================================================================
// Trigger: CryptLeft Spawn
//===========================================================================
function Trig_CryptLeft_Spawn_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_CryptLeft != null ) ) then
        return false
    endif
    return true
endfunction

function Trig_CryptLeft_Spawn_Func003C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_CryptLeftUnits) < udg_CryptLeftMax ) ) then
        return false
    endif
    return true
endfunction

function Trig_CryptLeft_Spawn_Actions takes nothing returns nothing
    call StartTimerBJ( udg_CryptLeftTimer, false, udg_CryptLeftDelay )
    // Bail if too many units
    if ( Trig_CryptLeft_Spawn_Func003C() ) then
        // Spawn
        call CreateNUnitsAtLoc( 1, 'ugho', udg_P7_Dreadlords, udg_PointCryptLeftSpawn, 270.00 )
        call GroupAddUnitSimple( GetLastCreatedUnit(), udg_CryptLeftUnits )
        call RemoveGuardPosition( GetLastCreatedUnit() )
        set udg_TempPoint = GetRandomLocInRect(gg_rct_CryptLeft_Sitting_Area)
        call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", udg_TempPoint )
        call RemoveLocation( udg_TempPoint )
    else
    endif
endfunction

//===========================================================================
function InitTrig_CryptLeft_Spawn takes nothing returns nothing
    set gg_trg_CryptLeft_Spawn = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_CryptLeft_Spawn, udg_CryptLeftTimer )
    call TriggerAddCondition( gg_trg_CryptLeft_Spawn, Condition( function Trig_CryptLeft_Spawn_Conditions ) )
    call TriggerAddAction( gg_trg_CryptLeft_Spawn, function Trig_CryptLeft_Spawn_Actions )
endfunction

//===========================================================================
// Trigger: CryptRight Start
//===========================================================================
function Trig_CryptRight_Start_Actions takes nothing returns nothing
    // Start Spawning
    set udg_CryptRightDelay = 35.00
    set udg_CryptRightMax = CountUnitsInGroup(udg_CryptRightUnits)
    call StartTimerBJ( udg_CryptRightTimer, false, udg_CryptRightDelay )
endfunction

//===========================================================================
function InitTrig_CryptRight_Start takes nothing returns nothing
    set gg_trg_CryptRight_Start = CreateTrigger(  )
    call TriggerAddAction( gg_trg_CryptRight_Start, function Trig_CryptRight_Start_Actions )
endfunction

//===========================================================================
// Trigger: CryptRight Spawn
//===========================================================================
function Trig_CryptRight_Spawn_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_CryptRight != null ) ) then
        return false
    endif
    return true
endfunction

function Trig_CryptRight_Spawn_Func003C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_CryptRightUnits) < udg_CryptRightMax ) ) then
        return false
    endif
    return true
endfunction

function Trig_CryptRight_Spawn_Actions takes nothing returns nothing
    call StartTimerBJ( udg_CryptRightTimer, false, udg_CryptRightDelay )
    // Bail if too many units
    if ( Trig_CryptRight_Spawn_Func003C() ) then
        // Spawn
        call CreateNUnitsAtLoc( 1, 'ugho', udg_P7_Dreadlords, udg_PointCryptRightSpawn, 270.00 )
        call GroupAddUnitSimple( GetLastCreatedUnit(), udg_CryptRightUnits )
        call RemoveGuardPosition( GetLastCreatedUnit() )
        set udg_TempPoint = GetRandomLocInRect(gg_rct_CryptRight_Sitting_Area)
        call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", udg_TempPoint )
        call RemoveLocation( udg_TempPoint )
    else
    endif
endfunction

//===========================================================================
function InitTrig_CryptRight_Spawn takes nothing returns nothing
    set gg_trg_CryptRight_Spawn = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_CryptRight_Spawn, udg_CryptRightTimer )
    call TriggerAddCondition( gg_trg_CryptRight_Spawn, Condition( function Trig_CryptRight_Spawn_Conditions ) )
    call TriggerAddAction( gg_trg_CryptRight_Spawn, function Trig_CryptRight_Spawn_Actions )
endfunction

//===========================================================================
// Trigger: Bloodfeast Found
//===========================================================================
function Trig_Bloodfeast_Found_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'ushd' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) != 'uplg' ) ) then
        return false
    endif
    if ( not ( udg_BloodfeastLinesDone == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Bloodfeast_Found_Actions takes nothing returns nothing
    set udg_BloodfeastLinesDone = true
    call ConditionalTriggerExecute( gg_trg_Bloodfeast_Scene )
endfunction

//===========================================================================
function InitTrig_Bloodfeast_Found takes nothing returns nothing
    set gg_trg_Bloodfeast_Found = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Bloodfeast_Found, gg_rct_Bloodfeast_Tripwire )
    call TriggerAddCondition( gg_trg_Bloodfeast_Found, Condition( function Trig_Bloodfeast_Found_Conditions ) )
    call TriggerAddAction( gg_trg_Bloodfeast_Found, function Trig_Bloodfeast_Found_Actions )
endfunction

//===========================================================================
// Trigger: Bloodfeast Attacked
//===========================================================================
function Trig_Bloodfeast_Attacked_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetAttacker()) == udg_AP1_Player ) ) then
        return false
    endif
    if ( not ( udg_BloodfeastLinesDone == false ) ) then
        return false
    endif
    if ( not ( IsUnitInGroup(GetAttackedUnitBJ(), udg_BloodfeastUnits) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Bloodfeast_Attacked_Actions takes nothing returns nothing
    set udg_BloodfeastLinesDone = true
    call ConditionalTriggerExecute( gg_trg_Bloodfeast_Scene )
endfunction

//===========================================================================
function InitTrig_Bloodfeast_Attacked takes nothing returns nothing
    set gg_trg_Bloodfeast_Attacked = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Bloodfeast_Attacked, Player(6), EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Bloodfeast_Attacked, Condition( function Trig_Bloodfeast_Attacked_Conditions ) )
    call TriggerAddAction( gg_trg_Bloodfeast_Attacked, function Trig_Bloodfeast_Attacked_Actions )
endfunction

//===========================================================================
// Trigger: Bloodfeast Scene
//===========================================================================
function Trig_Bloodfeast_Scene_Actions takes nothing returns nothing
    call QueuedTriggerAddBJ( gg_trg_Bloodfeast_Lines_Q, true )
endfunction

//===========================================================================
function InitTrig_Bloodfeast_Scene takes nothing returns nothing
    set gg_trg_Bloodfeast_Scene = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Bloodfeast_Scene, function Trig_Bloodfeast_Scene_Actions )
endfunction

//===========================================================================
// Trigger: Bloodfeast Lines Q
//===========================================================================
function Trig_Bloodfeast_Lines_Q_Actions takes nothing returns nothing
    call CreateFogModifierRadiusLocBJ( true, udg_AP1_Player, FOG_OF_WAR_VISIBLE, GetRectCenter(gg_rct_Vision_Bloodfeast_VM), 512.00 )
    set udg_BloodfeastVM = GetLastCreatedFogModifier()
    call SetSpeechVolumeGroupsBJ(  )
    // Line
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Bloodfeast, "TRIGSTR_261", gg_snd_L02Abomination25, "TRIGSTR_262", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_L02Abomination25, 0 )
    call VolumeGroupResetBJ(  )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
    call TriggerSleepAction( 3.00 )
    call DestroyFogModifier( udg_BloodfeastVM )
endfunction

//===========================================================================
function InitTrig_Bloodfeast_Lines_Q takes nothing returns nothing
    set gg_trg_Bloodfeast_Lines_Q = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Bloodfeast_Lines_Q, function Trig_Bloodfeast_Lines_Q_Actions )
endfunction

//===========================================================================
// Trigger: Keep Cinematic Arthas Alive
//===========================================================================
function Trig_Keep_Cinematic_Arthas_Alive_Actions takes nothing returns nothing
    call SetUnitLifePercentBJ( gg_unit_Uear_0214, 90.00 )
endfunction

//===========================================================================
function InitTrig_Keep_Cinematic_Arthas_Alive takes nothing returns nothing
    set gg_trg_Keep_Cinematic_Arthas_Alive = CreateTrigger(  )
    call TriggerRegisterUnitLifeEvent( gg_trg_Keep_Cinematic_Arthas_Alive, gg_unit_Uear_0214, LESS_THAN, 400.00 )
    call TriggerAddAction( gg_trg_Keep_Cinematic_Arthas_Alive, function Trig_Keep_Cinematic_Arthas_Alive_Actions )
endfunction

//===========================================================================
function InitCustomTriggers takes nothing returns nothing
    call InitTrig_Initialization(  )
    call InitTrig_Init_01_Players(  )
    call InitTrig_Init_02_RegionsToPoints(  )
    call InitTrig_Init_03a_Player_Units(  )
    call InitTrig_Init_03b_Enemy_Units(  )
    call InitTrig_Init_03c_Scene_Units(  )
    call InitTrig_Init_03d_Cinematic_Units(  )
    call InitTrig_Init_04_Music(  )
    call InitTrig_Init_05_Sounds(  )
    call InitTrig_Init_06a_Environment(  )
    call InitTrig_Init_06b_Elevators(  )
    call InitTrig_Init_06c_Vision(  )
    call InitTrig_Init_07_Quests(  )
    call InitTrig_Init_08a_Hard(  )
    call InitTrig_Init_08b_Normal(  )
    call InitTrig_Init_08c_Easy(  )
    call InitTrig_Load_Heroes(  )
    call InitTrig_Load_Arthas(  )
    call InitTrig_Loot_KelThuzad(  )
    call InitTrig_Cinematic_Revival(  )
    call InitTrig_Post_Cinematic_Pause(  )
    call InitTrig_Intro_Cinematic_Q(  )
    call InitTrig_Intro_Skipped(  )
    call InitTrig_Intro_Setup(  )
    call InitTrig_Intro_Cleanup(  )
    call InitTrig_Gameplay(  )
    call InitTrig_Victory_Cinematic_Q(  )
    call InitTrig_Victory_Skipped(  )
    call InitTrig_Victory_Setup(  )
    call InitTrig_Exit_Banshee_Strike(  )
    call InitTrig_Fountain_MiniCinematic_Q(  )
    call InitTrig_Fountain_Setup(  )
    call InitTrig_Fountain_Cleanup(  )
    call InitTrig_Next_Level_Prep(  )
    call InitTrig_Next_Level_Run(  )
    call InitTrig_Victory_Cheat(  )
    call InitTrig_Defeat_Cheat(  )
    call InitTrig_Quest_Exit_Create(  )
    call InitTrig_Quest_Exit_Discover(  )
    call InitTrig_Quest_Exit_Completed(  )
    call InitTrig_Quest_Meat_Create(  )
    call InitTrig_Quest_Meat_Discover(  )
    call InitTrig_Quest_Meat_UpdateA(  )
    call InitTrig_Quest_Meat_UpdateB(  )
    call InitTrig_Quest_Meat_Completed(  )
    call InitTrig_Mission_Failed_Arthas_Dead(  )
    call InitTrig_Quest_Exit_Discover_Q(  )
    call InitTrig_Quest_Exit_Completed_Q(  )
    call InitTrig_Hint_Keep_Clean_Q(  )
    call InitTrig_Secret_Found_Q(  )
    call InitTrig_Victory_Exit_Reached(  )
    call InitTrig_Defeat_Arthas_Dead(  )
    call InitTrig_Armory_Found(  )
    call InitTrig_Armory_Found_Q(  )
    call InitTrig_Armory_Guards_Dead(  )
    call InitTrig_Armory_Guards_Dead_Q(  )
    call InitTrig_Meat_Quest_Msg_A(  )
    call InitTrig_Meat_Quest_Msg_B(  )
    call InitTrig_Combat_Detected(  )
    call InitTrig_Combat_Resolved(  )
    call InitTrig_Marketplace_Config(  )
    call InitTrig_Marketplace_Item_Sold(  )
    call InitTrig_Fountain_Plate(  )
    call InitTrig_Bridge_Plate_C(  )
    call InitTrig_Bridge_Plate_TripwireA(  )
    call InitTrig_Bridge_Plate_TripwireB(  )
    call InitTrig_Bridge_Plate(  )
    call InitTrig_Bridge_Elevator_Rising(  )
    call InitTrig_Bridge_Elevator_Falling(  )
    call InitTrig_Group_Cleanup_Death(  )
    call InitTrig_Group_Cleanup_OwnerChange(  )
    call InitTrig_Uproot_Picked_Fiend(  )
    call InitTrig_Restock_Corpse_Piles(  )
    call InitTrig_Corpse_Pile_Found(  )
    call InitTrig_Corpse_Pile_Lines_Q(  )
    call InitTrig_LOS_Block(  )
    call InitTrig_LOS_Clear(  )
    call InitTrig_LOS_Clear_StartingDoor(  )
    call InitTrig_LOS_Clear_ThroneRoom(  )
    call InitTrig_LOS_Clear_AbomDoor_Left(  )
    call InitTrig_LOS_Clear_AbomDoor_Right(  )
    call InitTrig_LOS_Clear_FountainRoom(  )
    call InitTrig_LOS_Clear_SpiderRoom(  )
    call InitTrig_LOS_Clear_GargRoom(  )
    call InitTrig_LOS_Clear_CourtyardDoor(  )
    call InitTrig_LOS_Clear_ExitDoor(  )
    call InitTrig_LOS_Clear_WallSecret(  )
    call InitTrig_Bridge_Revealer(  )
    call InitTrig_Prison_Revealer_On(  )
    call InitTrig_Prison_Revealer_Off(  )
    call InitTrig_ArmoryChurch_Revealer_On(  )
    call InitTrig_ArmoryChurch_Revealer_Off(  )
    call InitTrig_Nook_Revealer_On(  )
    call InitTrig_Nook_Revealer_Off(  )
    call InitTrig_FountainPlate_Glow_On(  )
    call InitTrig_FountainPlate_Glow_Off(  )
    call InitTrig_BridgePlateA_Glow_On(  )
    call InitTrig_BridgePlateA_Glow_Off(  )
    call InitTrig_BridgePlateB_Glow_On(  )
    call InitTrig_BridgePlateB_Glow_Off(  )
    call InitTrig_BridgePlateC_Glow_On(  )
    call InitTrig_BridgePlateC_Glow_Off(  )
    call InitTrig_Barricade_FiendA(  )
    call InitTrig_Barricade_FiendB(  )
    call InitTrig_Barricade_BelowShade(  )
    call InitTrig_Polite_Pan(  )
    call InitTrig_Rescue_Necro_Corpses(  )
    call InitTrig_Rescue_Necro(  )
    call InitTrig_Rescue_Necro_Q(  )
    call InitTrig_Rescue_Abom(  )
    call InitTrig_Rescue_Shade(  )
    call InitTrig_Rescue_Shade_Q(  )
    call InitTrig_Rescue_Fiends(  )
    call InitTrig_Rescue_Fiends_Q(  )
    call InitTrig_Rescue_Ghouls(  )
    call InitTrig_Rescue_Ghouls_Q(  )
    call InitTrig_Rescue_Shelf(  )
    call InitTrig_Rescue_Shelf_Q(  )
    call InitTrig_Rescue_Wagons(  )
    call InitTrig_Rescue_Wagons_Q(  )
    call InitTrig_Rescue_Guys(  )
    call InitTrig_Rescue_Guys_Q(  )
    call InitTrig_Rescue_CageA(  )
    call InitTrig_Rescue_CageB(  )
    call InitTrig_Hall_Patrol_Start(  )
    call InitTrig_Hall_Patrol_Orders(  )
    call InitTrig_Hall_Patrol_Attacked(  )
    call InitTrig_Hall_Patrol_Attacking(  )
    call InitTrig_Hall_Patrol_01(  )
    call InitTrig_Hall_Patrol_02(  )
    call InitTrig_Hall_Patrol_03(  )
    call InitTrig_Hall_Patrol_04(  )
    call InitTrig_Hall_Patrol_05(  )
    call InitTrig_Hall_Patrol_06(  )
    call InitTrig_Wave_Source_01_Tripwire(  )
    call InitTrig_Wave_Source_02_Tripwire(  )
    call InitTrig_Wave_Source_03_Tripwire(  )
    call InitTrig_Wave_Source_04_Tripwire(  )
    call InitTrig_Wave_Source_05_Tripwire(  )
    call InitTrig_Wave_Source_06_Tripwire(  )
    call InitTrig_Wave_Source_07_Tripwire(  )
    call InitTrig_Wave_Types_Starting(  )
    call InitTrig_Wave_Types_Upgrade01_Tripwire(  )
    call InitTrig_Wave_Types_Upgrade02_Tripwire(  )
    call InitTrig_Wave_Types_Upgrade03_Tripwire(  )
    call InitTrig_Wave_Types_Upgrade04_Tripwire(  )
    call InitTrig_Wave_Start(  )
    call InitTrig_Wave_Spawn(  )
    call InitTrig_Wave_Spawn_Single(  )
    call InitTrig_Wave_Orders(  )
    call InitTrig_Abom_Ambush(  )
    call InitTrig_Alley_Ambush(  )
    call InitTrig_Prison_Guards_Pestering(  )
    call InitTrig_Prison_Gate_Regen(  )
    call InitTrig_Prison_Guards_Attacked(  )
    call InitTrig_Zombie_Group_Attacked(  )
    call InitTrig_Fiend_Ambush(  )
    call InitTrig_Skel_Ambush(  )
    call InitTrig_Horsie_Scene_Setup(  )
    call InitTrig_Horsie_Scene_Tripwire(  )
    call InitTrig_Horsie_Scene_VTripwire(  )
    call InitTrig_Horsie_Scene(  )
    call InitTrig_Chanting_Corpse(  )
    call InitTrig_Chanting_Cycle(  )
    call InitTrig_Chanting_Necro_Attacked(  )
    call InitTrig_Chanting_Necro_Attacks(  )
    call InitTrig_Chanting_Necros_Interrupted(  )
    call InitTrig_Battle_Room_Corpses(  )
    call InitTrig_Battle_Room_Door_Opened(  )
    call InitTrig_CryptLeft_Start(  )
    call InitTrig_CryptLeft_Spawn(  )
    call InitTrig_CryptRight_Start(  )
    call InitTrig_CryptRight_Spawn(  )
    call InitTrig_Bloodfeast_Found(  )
    call InitTrig_Bloodfeast_Attacked(  )
    call InitTrig_Bloodfeast_Scene(  )
    call InitTrig_Bloodfeast_Lines_Q(  )
    call InitTrig_Keep_Cinematic_Arthas_Alive(  )
endfunction

//===========================================================================
function RunInitializationTriggers takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_Initialization )
endfunction

//***************************************************************************
//*
//*  Upgrades
//*
//***************************************************************************

function InitUpgrades_Player0 takes nothing returns nothing
    call SetPlayerTechResearched( Player(0), 'Ruac', 1 )
    call SetPlayerTechResearched( Player(0), 'Ruwb', 1 )
    call SetPlayerTechResearched( Player(0), 'Ruba', 2 )
    call SetPlayerTechResearched( Player(0), 'Rusm', 1 )
    call SetPlayerTechResearched( Player(0), 'Rupc', 1 )
    call SetPlayerTechResearched( Player(0), 'Rusl', 1 )
    call SetPlayerTechResearched( Player(0), 'Rume', 3 )
    call SetPlayerTechResearched( Player(0), 'Rura', 3 )
    call SetPlayerTechResearched( Player(0), 'Ruar', 3 )
    call SetPlayerTechResearched( Player(0), 'Rugf', 1 )
    call SetPlayerTechResearched( Player(0), 'Rune', 2 )
    call SetPlayerTechResearched( Player(0), 'Rucr', 3 )
    call SetPlayerTechResearched( Player(0), 'Ruex', 1 )
    call SetPlayerTechResearched( Player(0), 'Rusp', 1 )
    call SetPlayerTechResearched( Player(0), 'Ruru', 1 )
    call SetPlayerTechMaxAllowed( Player(0), 'Rubu', 0 )
    call SetPlayerTechResearched( Player(0), 'Rufb', 1 )
    call SetPlayerTechResearched( Player(0), 'Rusf', 1 )
    call SetPlayerTechMaxAllowed( Player(0), 'Rupm', 0 )
endfunction

function InitUpgrades_Player1 takes nothing returns nothing
    call SetPlayerTechResearched( Player(1), 'Ruac', 1 )
    call SetPlayerTechResearched( Player(1), 'Ruwb', 1 )
    call SetPlayerTechResearched( Player(1), 'Ruba', 2 )
    call SetPlayerTechResearched( Player(1), 'Rusm', 1 )
    call SetPlayerTechResearched( Player(1), 'Rupc', 1 )
    call SetPlayerTechResearched( Player(1), 'Rusl', 1 )
    call SetPlayerTechResearched( Player(1), 'Rume', 3 )
    call SetPlayerTechResearched( Player(1), 'Rura', 3 )
    call SetPlayerTechResearched( Player(1), 'Ruar', 3 )
    call SetPlayerTechResearched( Player(1), 'Rugf', 1 )
    call SetPlayerTechResearched( Player(1), 'Rune', 2 )
    call SetPlayerTechResearched( Player(1), 'Rucr', 3 )
    call SetPlayerTechResearched( Player(1), 'Ruex', 1 )
    call SetPlayerTechResearched( Player(1), 'Rusp', 1 )
    call SetPlayerTechResearched( Player(1), 'Ruru', 1 )
    call SetPlayerTechMaxAllowed( Player(1), 'Rubu', 0 )
    call SetPlayerTechResearched( Player(1), 'Rufb', 1 )
    call SetPlayerTechResearched( Player(1), 'Rusf', 1 )
    call SetPlayerTechMaxAllowed( Player(1), 'Rupm', 0 )
endfunction

function InitUpgrades_Player4 takes nothing returns nothing
    call SetPlayerTechResearched( Player(4), 'Ruac', 1 )
    call SetPlayerTechResearched( Player(4), 'Ruwb', 1 )
    call SetPlayerTechResearched( Player(4), 'Ruba', 2 )
    call SetPlayerTechResearched( Player(4), 'Rusm', 1 )
    call SetPlayerTechResearched( Player(4), 'Rupc', 1 )
    call SetPlayerTechResearched( Player(4), 'Rusl', 1 )
    call SetPlayerTechResearched( Player(4), 'Rume', 3 )
    call SetPlayerTechResearched( Player(4), 'Rura', 3 )
    call SetPlayerTechResearched( Player(4), 'Ruar', 3 )
    call SetPlayerTechResearched( Player(4), 'Rugf', 1 )
    call SetPlayerTechResearched( Player(4), 'Rune', 2 )
    call SetPlayerTechResearched( Player(4), 'Rucr', 3 )
    call SetPlayerTechResearched( Player(4), 'Ruex', 1 )
    call SetPlayerTechResearched( Player(4), 'Rusp', 1 )
    call SetPlayerTechResearched( Player(4), 'Ruru', 1 )
    call SetPlayerTechMaxAllowed( Player(4), 'Rubu', 0 )
    call SetPlayerTechResearched( Player(4), 'Rufb', 1 )
    call SetPlayerTechResearched( Player(4), 'Rusf', 1 )
    call SetPlayerTechMaxAllowed( Player(4), 'Rupm', 0 )
endfunction

function InitUpgrades_Player6 takes nothing returns nothing
    call SetPlayerTechResearched( Player(6), 'Rupc', 1 )
    call SetPlayerTechResearched( Player(6), 'Rusl', 1 )
    call SetPlayerTechResearched( Player(6), 'Rune', 1 )
    call SetPlayerTechMaxAllowed( Player(6), 'Rubu', 0 )
    call SetPlayerTechResearched( Player(6), 'Rufb', 1 )
    call SetPlayerTechResearched( Player(6), 'Rusf', 1 )
    call SetPlayerTechMaxAllowed( Player(6), 'Rupm', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Ruwb', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Ruba', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Rusm', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Ruru', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Rusp', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Ruex', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Ruac', 0 )
endfunction

function InitUpgrades takes nothing returns nothing
    call InitUpgrades_Player0(  )
    call InitUpgrades_Player1(  )
    call InitUpgrades_Player4(  )
    call InitUpgrades_Player6(  )
endfunction

//***************************************************************************
//*
//*  TechTree
//*
//***************************************************************************

function InitTechTree_Player0 takes nothing returns nothing
    call SetPlayerTechMaxAllowed( Player(0), 'Udea', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Ulic', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Udre', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Ucrl', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Hpal', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Hamg', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Hmkg', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Hblm', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Obla', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Ofar', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Otch', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Oshd', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Ekee', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Emoo', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Edem', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Ewar', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'uaco', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'ugho', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'uabo', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'ucry', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'umtw', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'ugar', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'uobs', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'uban', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'unec', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'ufro', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'unpl', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'unp1', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'unp2', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'uzig', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'uzg1', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'uaod', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'usep', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'usap', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'ugrv', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'uslh', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'utod', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'ubon', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'ugol', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'utom', 0 )
endfunction

function InitTechTree_Player1 takes nothing returns nothing
    call SetPlayerTechMaxAllowed( Player(1), 'Udea', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'Ulic', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'Udre', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'Ucrl', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'Hpal', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'Hamg', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'Hmkg', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'Hblm', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'Obla', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'Ofar', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'Otch', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'Oshd', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'Ekee', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'Emoo', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'Edem', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'Ewar', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'uaco', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'ugho', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'uabo', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'ucry', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'umtw', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'ugar', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'uobs', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'uban', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'unec', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'ufro', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'unpl', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'unp1', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'unp2', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'uzig', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'uzg1', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'uaod', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'usep', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'usap', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'ugrv', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'uslh', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'utod', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'ubon', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'ugol', 0 )
    call SetPlayerTechMaxAllowed( Player(1), 'utom', 0 )
endfunction

function InitTechTree_Player4 takes nothing returns nothing
    call SetPlayerTechMaxAllowed( Player(4), 'Udea', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'Ulic', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'Udre', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'Ucrl', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'Hpal', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'Hamg', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'Hmkg', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'Hblm', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'Obla', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'Ofar', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'Otch', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'Oshd', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'Ekee', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'Emoo', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'Edem', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'Ewar', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'uaco', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'ugho', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'uabo', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'ucry', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'umtw', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'ugar', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'uobs', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'uban', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'unec', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'ufro', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'unpl', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'unp1', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'unp2', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'uzig', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'uzg1', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'uaod', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'usep', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'usap', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'ugrv', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'uslh', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'utod', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'ubon', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'ugol', 0 )
    call SetPlayerTechMaxAllowed( Player(4), 'utom', 0 )
endfunction

function InitTechTree_Player6 takes nothing returns nothing
    call SetPlayerTechMaxAllowed( Player(6), 'Udea', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Ulic', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Udre', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Ucrl', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Hpal', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Hamg', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Hmkg', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Hblm', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Obla', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Ofar', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Otch', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Oshd', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Ekee', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Emoo', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Edem', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'Ewar', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'uaco', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'ugho', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'uabo', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'ucry', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'umtw', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'ugar', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'uobs', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'uban', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'unec', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'ufro', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'unpl', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'unp1', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'unp2', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'uzig', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'uzg1', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'uaod', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'usep', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'usap', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'ugrv', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'uslh', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'utod', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'ubon', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'ugol', 0 )
    call SetPlayerTechMaxAllowed( Player(6), 'utom', 0 )
endfunction

function InitTechTree_Player7 takes nothing returns nothing
    call SetPlayerTechMaxAllowed( Player(7), 'Udea', 0 )
    call SetPlayerTechMaxAllowed( Player(7), 'Ulic', 0 )
    call SetPlayerTechMaxAllowed( Player(7), 'Udre', 0 )
    call SetPlayerTechMaxAllowed( Player(7), 'Ucrl', 0 )
endfunction

function InitTechTree takes nothing returns nothing
    call InitTechTree_Player0(  )
    call InitTechTree_Player1(  )
    call InitTechTree_Player4(  )
    call InitTechTree_Player6(  )
    call InitTechTree_Player7(  )
endfunction

//***************************************************************************
//*
//*  Players
//*
//***************************************************************************

function InitCustomPlayerSlots takes nothing returns nothing

    // Player 0
    call SetPlayerStartLocation( Player(0), 0 )
    call ForcePlayerStartLocation( Player(0), 0 )
    call SetPlayerColor( Player(0), ConvertPlayerColor(0) )
    call SetPlayerRacePreference( Player(0), RACE_PREF_UNDEAD )
    call SetPlayerRaceSelectable( Player(0), false )
    call SetPlayerController( Player(0), MAP_CONTROL_USER )

    // Player 1
    call SetPlayerStartLocation( Player(1), 1 )
    call ForcePlayerStartLocation( Player(1), 1 )
    call SetPlayerColor( Player(1), ConvertPlayerColor(1) )
    call SetPlayerRacePreference( Player(1), RACE_PREF_UNDEAD )
    call SetPlayerRaceSelectable( Player(1), false )
    call SetPlayerController( Player(1), MAP_CONTROL_NEUTRAL )

    // Player 4
    call SetPlayerStartLocation( Player(4), 2 )
    call ForcePlayerStartLocation( Player(4), 2 )
    call SetPlayerColor( Player(4), ConvertPlayerColor(4) )
    call SetPlayerRacePreference( Player(4), RACE_PREF_UNDEAD )
    call SetPlayerRaceSelectable( Player(4), false )
    call SetPlayerController( Player(4), MAP_CONTROL_COMPUTER )

    // Player 6
    call SetPlayerStartLocation( Player(6), 3 )
    call ForcePlayerStartLocation( Player(6), 3 )
    call SetPlayerColor( Player(6), ConvertPlayerColor(6) )
    call SetPlayerRacePreference( Player(6), RACE_PREF_UNDEAD )
    call SetPlayerRaceSelectable( Player(6), false )
    call SetPlayerController( Player(6), MAP_CONTROL_COMPUTER )

    // Player 7
    call SetPlayerStartLocation( Player(7), 4 )
    call ForcePlayerStartLocation( Player(7), 4 )
    call SetPlayerColor( Player(7), ConvertPlayerColor(7) )
    call SetPlayerRacePreference( Player(7), RACE_PREF_UNDEAD )
    call SetPlayerRaceSelectable( Player(7), false )
    call SetPlayerController( Player(7), MAP_CONTROL_COMPUTER )

endfunction

function InitCustomTeams takes nothing returns nothing
    // Force: TRIGSTR_203
    call SetPlayerTeam( Player(0), 0 )
    call SetPlayerTeam( Player(1), 0 )
    call SetPlayerTeam( Player(4), 0 )
    call SetPlayerTeam( Player(7), 0 )

    // Force: TRIGSTR_204
    call SetPlayerTeam( Player(6), 1 )

endfunction

function InitAllyPriorities takes nothing returns nothing

    call SetStartLocPrioCount( 1, 3 )
    call SetStartLocPrio( 1, 0, 3, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 1, 1, 4, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 2, 3 )
    call SetStartLocPrio( 2, 0, 1, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 2, 1, 3, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 2, 2, 4, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 3, 3 )
    call SetStartLocPrio( 3, 0, 1, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 3, 1, 4, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 4, 3 )
    call SetStartLocPrio( 4, 0, 1, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 4, 1, 3, MAP_LOC_PRIO_LOW )
endfunction

//***************************************************************************
//*
//*  Main Initialization
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
    call SetCameraBounds( -256.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), -8832.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 6400.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 12160.0 - GetCameraMargin(CAMERA_MARGIN_TOP), -256.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), 12160.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 6400.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), -8832.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM) )
    call SetDayNightModels( "Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl" )
    call SetTerrainFogEx( 0, 300.0, 8000.0, 0.000, 0.502, 0.000, 0.000 )
    call NewSoundEnvironment( "Default" )
    call SetAmbientDaySound( "CityScapeDay" )
    call SetAmbientNightSound( "CityScapeNight" )
    call SetMapMusic( "Music", true, 0 )
    call InitSounds(  )
    call CreateRegions(  )
    call CreateCameras(  )
    call InitUpgrades(  )
    call InitTechTree(  )
    call CreateAllDestructables(  )
    call CreateAllItems(  )
    call CreateAllUnits(  )
    call InitBlizzard(  )
    call InitGlobals(  )
    call InitCustomTriggers(  )
    call RunInitializationTriggers(  )

endfunction

//***************************************************************************
//*
//*  Map Configuration
//*
//***************************************************************************

function config takes nothing returns nothing
    call SetMapName( "TRIGSTR_001" )
    call SetMapDescription( "TRIGSTR_003" )
    call SetPlayers( 5 )
    call SetTeams( 5 )
    call SetGamePlacement( MAP_PLACEMENT_USE_MAP_SETTINGS )

    call DefineStartLocation( 0, 768.0, -5952.0 )
    call DefineStartLocation( 1, 6144.0, -6656.0 )
    call DefineStartLocation( 2, 6144.0, -7168.0 )
    call DefineStartLocation( 3, 1920.0, -8576.0 )
    call DefineStartLocation( 4, 6144.0, -7680.0 )

    // Player setup
    call InitCustomPlayerSlots(  )
    call InitCustomTeams(  )
    call InitAllyPriorities(  )
endfunction

