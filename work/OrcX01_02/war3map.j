//===========================================================================
// 
// OrcX01_02
// 
//   Warcraft III map script
//   Generated by the Warcraft III World Editor
//   Date: Sat May 17 12:15:07 2003
//   Map Author: Blizzard Entertainment
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************

globals
    // User-defined
    boolean                 udg_GameOver               = false
    player                  udg_AP1_Player             = null
    force                   udg_APG1_Player            = null
    unit                    udg_Rexxar                 = null
    string array            udg_ZoneMaps
    integer                 udg_ZoneCount              = 0
    integer                 udg_Zone                   = 0
    string array            udg_ZoneSaves
    string                  udg_TransitionKey
    integer                 udg_TransitionSource       = 0
    integer                 udg_TransitionTarget       = 0
    location                udg_TransitionSpawnA       = null
    integer                 udg_TransitionTargetArea   = 0
    location                udg_TransitionSpawnB       = null
    location                udg_TransitionSpawnC       = null
    string                  udg_ZoneMapPath
    string                  udg_SaveExt
    string                  udg_ZoneFolder
    string                  udg_ZoneMapExt
    string                  udg_SaveFolder
    string                  udg_TempPathA
    string                  udg_TempPathB
    string                  udg_NULLString
    quest                   udg_QuestSealTunnel        = null
    questitem               udg_QuestSealTunnelReq1    = null
    questitem               udg_QuestSealTunnelReq2    = null
    integer                 udg_QuestSealTunnelProgress = 0
    unit                    udg_RevivalHero            = null
    location                udg_RevivalSpot            = null
    unit                    udg_RevivalAltar           = null
    location                udg_RevivalReturnSpot      = null
    boolean                 udg_IntroSkipped           = false
    group                   udg_HiddenUnits            = null
    boolean                 udg_ExpDisabledForRexxar   = false
    boolean                 udg_InCinematic            = false
    questitem               udg_QuestSealTunnelReq3    = null
    questitem               udg_QuestSealTunnelReq4    = null
    leaderboard             udg_LBColumnLeaderboard    = null
    integer                 udg_LBColumnsDestroyed     = 0
    unit                    udg_GoblinSapper01         = null
    unit                    udg_Chen                   = null
    unit                    udg_Rokhan                 = null
    boolean                 udg_ChenInParty            = false
    boolean                 udg_RokhanInParty          = false
    boolean                 udg_RexxarInParty          = false
    unit                    udg_TransitionHero         = null
    string                  udg_TransitionHeroName
    boolean                 udg_TransitionHeroInParty  = false
    real                    udg_TransitionHeroLife     = 0
    real                    udg_TransitionHeroMana     = 0
    location                udg_TransitionSpot         = null
    integer                 udg_QuestDestroyHumansProgress = 0
    integer                 udg_QuestDyingWishProgress = 0
    integer                 udg_QuestEarnKeepProgress  = 0
    boolean                 udg_QuestEarnKeepProgress1 = false
    boolean                 udg_QuestEarnKeepProgress2 = false
    boolean                 udg_QuestEarnKeepProgress3 = false
    integer                 udg_QuestHarpyThreatProgress = 0
    integer                 udg_QuestSignalPyresProgress = 0
    integer                 udg_QuestSinkFleetProgress = 0
    integer                 udg_QuestSummitProgress    = 0
    integer                 udg_QuestSurveyProgress    = 0
    integer                 udg_QuestThunderHerbProgress = 0
    integer                 udg_QuestWarnTrollsProgress = 0
    integer                 udg_QuestSecureWellsProgress = 0
    integer                 udg_QuestThunderLizardsProgress = 0
    integer                 udg_QuestLizardEggsProgress = 0
    integer                 udg_QuestQuillboarsProgress = 0
    integer                 udg_QuestWarlockCovenProgress = 0
    integer                 udg_QuestStrangeBrewProgress = 0
    boolean                 udg_QuestStrangeBrewProgress1 = false
    boolean                 udg_QuestStrangeBrewProgress2 = false
    boolean                 udg_QuestStrangeBrewProgress3 = false
    quest                   udg_QuestDyingWish         = null
    questitem               udg_QuestDyingWishReq1     = null
    quest                   udg_QuestEarnKeep          = null
    questitem               udg_QuestEarnKeepReq1      = null
    questitem               udg_QuestEarnKeepReq2      = null
    questitem               udg_QuestEarnKeepReq3      = null
    questitem               udg_QuestEarnKeepReq4      = null
    quest                   udg_QuestHarpyThreat       = null
    questitem               udg_QuestHarpyThreatReq1   = null
    questitem               udg_QuestHarpyThreatReq2   = null
    questitem               udg_QuestHarpyThreatReq3   = null
    quest                   udg_QuestThunderHerb       = null
    questitem               udg_QuestThunderHerbReq1   = null
    questitem               udg_QuestThunderHerbReq2   = null
    quest                   udg_QuestSurvey            = null
    questitem               udg_QuestSurveyReq1        = null
    questitem               udg_QuestSurveyReq2        = null
    questitem               udg_QuestSurveyReq3        = null
    questitem               udg_QuestSurveyReq4        = null
    quest                   udg_QuestDestroyHumans     = null
    questitem               udg_QuestDestroyHumansReq1 = null
    questitem               udg_QuestDestroyHumansReq2 = null
    questitem               udg_QuestDestroyHumansReq3 = null
    questitem               udg_QuestDestroyHumansReq4 = null
    quest                   udg_QuestWarnTrolls        = null
    questitem               udg_QuestWarnTrollsReq1    = null
    questitem               udg_QuestWarnTrollsReq2    = null
    quest                   udg_QuestSinkFleet         = null
    questitem               udg_QuestSinkFleetReq1     = null
    questitem               udg_QuestSinkFleetReq2     = null
    quest                   udg_QuestSignalPyres       = null
    questitem               udg_QuestSignalPyresReq1   = null
    quest                   udg_QuestSummit            = null
    questitem               udg_QuestSummitReq1        = null
    questitem               udg_QuestSummitReq2        = null
    questitem               udg_QuestSummitReq3        = null
    quest                   udg_QuestSecureWells       = null
    questitem               udg_QuestSecureWellsReq1   = null
    questitem               udg_QuestSecureWellsReq2   = null
    quest                   udg_QuestThunderLizards    = null
    questitem               udg_QuestThunderLizardsReq1 = null
    questitem               udg_QuestThunderLizardsReq2 = null
    questitem               udg_QuestThunderLizardsReq3 = null
    quest                   udg_QuestLizardEggs        = null
    questitem               udg_QuestLizardEggsReq1    = null
    quest                   udg_QuestQuillboars        = null
    questitem               udg_QuestQuillboarsReq1    = null
    questitem               udg_QuestQuillboarsReq2    = null
    quest                   udg_QuestWarlockCoven      = null
    questitem               udg_QuestWarlockCovenReq1  = null
    questitem               udg_QuestWarlockCovenReq2  = null
    questitem               udg_QuestWarlockCovenReq3  = null
    quest                   udg_QuestStrangeBrew       = null
    questitem               udg_QuestStrangeBrewReq1   = null
    questitem               udg_QuestStrangeBrewReq2   = null
    questitem               udg_QuestStrangeBrewReq3   = null
    questitem               udg_QuestStrangeBrewReq4   = null
    boolean                 udg_RampVisionOn           = false
    fogmodifier             udg_RampVM                 = null
    boolean                 udg_ExpDisabledForChen     = false
    group                   udg_SelectedUnits          = null
    location                udg_CameraReturnPoint      = null
    timer                   udg_QuakeTimer             = null
    sound                   udg_SoundEarthquake        = null
    sound                   udg_SoundCollapse          = null
    unit                    udg_RexxarCinematic        = null
    unit                    udg_GoblinSapper02         = null
    unit                    udg_GoblinSapper03         = null
    unit                    udg_GoblinSapper04         = null
    timer                   udg_GoblinRespawnTimer     = null
    real                    udg_SpawnPackSpawnChance   = 0
    integer                 udg_SpawnPackUnitMax       = 0
    rect                    udg_SpawnPackRegion        = null
    location                udg_TempPoint              = null
    integer                 udg_SpawnPackUnitType      = 0
    group                   udg_SpawnPackDropTable     = null
    group                   udg_DropTableNone          = null
    group                   udg_DropTableCommonKoboldA = null
    group                   udg_DropTableCommonKoboldB = null
    location                udg_DropPoint              = null
    real                    udg_DropCommonChance       = 0
    integer                 udg_DropCommonItem         = 0
    real                    udg_DropRareChance         = 0
    integer                 udg_DropRareItem           = 0
    real                    udg_DropRoll               = 0
    real                    udg_SpawnPackRoamChance    = 0
    group                   udg_DropTableKT03A         = null
    group                   udg_DropTableKT04XA        = null
    group                   udg_DropTableKG06A         = null
    group                   udg_DropTableWildkin       = null
    group                   udg_DropTableKT09A         = null
    group                   udg_DropTableKT10A         = null
    group                   udg_DropTableKG11XA        = null
    location                udg_CreateDefaultSpot      = null
    boolean                 udg_ExpDisabledForRokhan   = false
    group                   udg_DropTableKT12A         = null
    group                   udg_DropTableKT13A         = null
    group                   udg_DropTableKTM15A        = null
    group                   udg_DropTableKG15B         = null
    group                   udg_DropTableKG16XA        = null
    group                   udg_DropTableKT17A         = null
    boolean                 udg_Column01Dead           = false
    boolean                 udg_Column02Dead           = false
    boolean                 udg_Column03Dead           = false
    location                udg_zVSourceRamp           = null
    integer                 udg_BonusSkillPointsGiven  = 0
    boolean                 udg_GoblinSkipped          = false
    location                udg_RexxarReturnSpot       = null
    location                udg_ResurrectionSpot       = null
    location                udg_ResurrectionSpotLocal  = null
    fogmodifier             udg_ResurrectionVM         = null
    boolean                 udg_ResurrectionVMExists   = false
    location                udg_ResurrectionStoneSpot  = null
    effect                  udg_ResurrectionChangeEffectLocal = null
    integer                 udg_ResurrectionStonePicked = 0
    string                  udg_BlizzardFolder
    timer                   udg_SpawnTimerCommon01     = null
    real                    udg_CommonSpawnTimerLength = 0
    timer                   udg_SpawnTimerRare01       = null
    real                    udg_RareSpawnTimerLength   = 0
    timer                   udg_SpawnTimerCommon02     = null
    timer                   udg_SpawnTimerCommon03     = null
    timer                   udg_SpawnTimerCommon04     = null
    timer                   udg_SpawnTimerCommon05     = null
    timer                   udg_SpawnTimerRare02       = null
    timer                   udg_GraveyardTimer         = null
    boolean                 udg_DebugSpawning          = false
    group                   udg_GraveyardUnits         = null
    unit                    udg_TempUnit               = null
    unit                    udg_CinematicKobold        = null
    unit                    udg_ResurrectionStone      = null
    integer                 udg_SpawnPackTotal         = 0
    integer                 udg_UnitRespawnTime        = 0
    integer array           udg_PackRespawnTimeArray
    group array             udg_PackGroupArray
    location                udg_TempPointA             = null
    unit                    udg_TempPHUnit             = null
    group array             udg_GraveyardArray
    integer                 udg_SpawnPackID            = 0
    boolean                 udg_AllTunnelsClosed       = false
    unit                    udg_RokhanCinematic        = null
    location                udg_RokhanReturnSpot       = null
    questitem               udg_QuestSignalPyresReq2   = null
    location                udg_ChenReturnSpot         = null
    unit                    udg_ChenCinematic          = null
    boolean                 udg_CinematicSafety        = false
    location                udg_TempPointRexxar        = null
    location                udg_TempPointRokhan        = null
    location                udg_TempPointChen          = null
    player                  udg_P4_Goblins             = null
    player                  udg_P7_RezStone            = null

    // Generated
    rect                    gg_rct_Gameplay_Rexxar_Start = null
    rect                    gg_rct_GoblinRexxar01      = null
    rect                    gg_rct_GoblinRexxar02      = null
    rect                    gg_rct_GoblinTripwire      = null
    rect                    gg_rct_NearTunnel01        = null
    rect                    gg_rct_NearTunnel02        = null
    rect                    gg_rct_NearTunnel03        = null
    rect                    gg_rct_Pack01              = null
    rect                    gg_rct_Pack02              = null
    rect                    gg_rct_Pack03              = null
    rect                    gg_rct_Pack04X             = null
    rect                    gg_rct_Pack05X             = null
    rect                    gg_rct_Pack06              = null
    rect                    gg_rct_Pack07              = null
    rect                    gg_rct_Pack08              = null
    rect                    gg_rct_Pack09              = null
    rect                    gg_rct_Pack10              = null
    rect                    gg_rct_Pack11X             = null
    rect                    gg_rct_Pack12              = null
    rect                    gg_rct_Pack13              = null
    rect                    gg_rct_Pack14X             = null
    rect                    gg_rct_Pack15              = null
    rect                    gg_rct_Pack16X             = null
    rect                    gg_rct_Pack17              = null
    rect                    gg_rct_Pack18              = null
    rect                    gg_rct_Pack19              = null
    rect                    gg_rct_Pack20              = null
    rect                    gg_rct_Ramp_Vision_Source  = null
    rect                    gg_rct_Ramp01VM            = null
    rect                    gg_rct_Resurrection_Stone_01 = null
    rect                    gg_rct_Resurrection_Stone_01_Spot = null
    rect                    gg_rct_Resurrection_Stone_01_Tripwire = null
    rect                    gg_rct_Sapper_Respawn_Dest = null
    rect                    gg_rct_Sapper_Respawn_Enter = null
    rect                    gg_rct_Spawn04X            = null
    rect                    gg_rct_Spawn11X            = null
    rect                    gg_rct_Spawn16X            = null
    rect                    gg_rct_SpawnPoint1A        = null
    rect                    gg_rct_SpawnPoint1B        = null
    rect                    gg_rct_SpawnPoint1C        = null
    rect                    gg_rct_StreamSound1        = null
    rect                    gg_rct_StreamSound10       = null
    rect                    gg_rct_StreamSound12       = null
    rect                    gg_rct_StreamSound13       = null
    rect                    gg_rct_StreamSound14       = null
    rect                    gg_rct_StreamSound15       = null
    rect                    gg_rct_StreamSound16       = null
    rect                    gg_rct_StreamSound17       = null
    rect                    gg_rct_StreamSound18       = null
    rect                    gg_rct_StreamSound19       = null
    rect                    gg_rct_StreamSound2        = null
    rect                    gg_rct_StreamSound20       = null
    rect                    gg_rct_StreamSound21       = null
    rect                    gg_rct_StreamSound22       = null
    rect                    gg_rct_StreamSound23       = null
    rect                    gg_rct_StreamSound24       = null
    rect                    gg_rct_StreamSound25       = null
    rect                    gg_rct_StreamSound26       = null
    rect                    gg_rct_StreamSound27       = null
    rect                    gg_rct_StreamSound28       = null
    rect                    gg_rct_StreamSound29       = null
    rect                    gg_rct_StreamSound3        = null
    rect                    gg_rct_StreamSound30       = null
    rect                    gg_rct_StreamSound4        = null
    rect                    gg_rct_StreamSound5        = null
    rect                    gg_rct_StreamSound6        = null
    rect                    gg_rct_StreamSound7        = null
    rect                    gg_rct_StreamSound8        = null
    rect                    gg_rct_StreamSound9        = null
    rect                    gg_rct_Tunnel01            = null
    rect                    gg_rct_Tunnel01Area        = null
    rect                    gg_rct_Tunnel01Dust01      = null
    rect                    gg_rct_Tunnel01Dust02      = null
    rect                    gg_rct_Tunnel01Dust03      = null
    rect                    gg_rct_Tunnel01Dust04      = null
    rect                    gg_rct_Tunnel01MoveTo      = null
    rect                    gg_rct_Tunnel01Rock01      = null
    rect                    gg_rct_Tunnel01Rock02      = null
    rect                    gg_rct_Tunnel01Rock03      = null
    rect                    gg_rct_Tunnel01Rock04      = null
    rect                    gg_rct_Tunnel01Rock05      = null
    rect                    gg_rct_Tunnel01Rock06      = null
    rect                    gg_rct_Tunnel01Rock07      = null
    rect                    gg_rct_Tunnel01Rock08      = null
    rect                    gg_rct_Tunnel01Rock09      = null
    rect                    gg_rct_Tunnel01Rock10      = null
    rect                    gg_rct_Tunnel01Rock11      = null
    rect                    gg_rct_Tunnel01Rock12      = null
    rect                    gg_rct_Tunnel01Rock13      = null
    rect                    gg_rct_Tunnel02            = null
    rect                    gg_rct_Tunnel02Area        = null
    rect                    gg_rct_Tunnel02Dust01      = null
    rect                    gg_rct_Tunnel02Dust02      = null
    rect                    gg_rct_Tunnel02Dust03      = null
    rect                    gg_rct_Tunnel02Dust04      = null
    rect                    gg_rct_Tunnel02MoveTo      = null
    rect                    gg_rct_Tunnel02Rock01      = null
    rect                    gg_rct_Tunnel02Rock02      = null
    rect                    gg_rct_Tunnel02Rock03      = null
    rect                    gg_rct_Tunnel02Rock04      = null
    rect                    gg_rct_Tunnel02Rock05      = null
    rect                    gg_rct_Tunnel02Rock06      = null
    rect                    gg_rct_Tunnel02Rock07      = null
    rect                    gg_rct_Tunnel02Rock08      = null
    rect                    gg_rct_Tunnel02Rock09      = null
    rect                    gg_rct_Tunnel02Rock10      = null
    rect                    gg_rct_Tunnel02Rock11      = null
    rect                    gg_rct_Tunnel02Rock12      = null
    rect                    gg_rct_Tunnel02Rock13      = null
    rect                    gg_rct_Tunnel03            = null
    rect                    gg_rct_Tunnel03Area        = null
    rect                    gg_rct_Tunnel03Dust01      = null
    rect                    gg_rct_Tunnel03Dust02      = null
    rect                    gg_rct_Tunnel03Dust03      = null
    rect                    gg_rct_Tunnel03Dust04      = null
    rect                    gg_rct_Tunnel03MoveTo      = null
    rect                    gg_rct_Tunnel03Rock01      = null
    rect                    gg_rct_Tunnel03Rock02      = null
    rect                    gg_rct_Tunnel03Rock03      = null
    rect                    gg_rct_Tunnel03Rock04      = null
    rect                    gg_rct_Tunnel03Rock05      = null
    rect                    gg_rct_Tunnel03Rock06      = null
    rect                    gg_rct_Tunnel03Rock07      = null
    rect                    gg_rct_Tunnel03Rock08      = null
    rect                    gg_rct_Tunnel03Rock09      = null
    rect                    gg_rct_Tunnel03Rock10      = null
    rect                    gg_rct_Tunnel03Rock11      = null
    rect                    gg_rct_Tunnel03Rock12      = null
    rect                    gg_rct_Tunnel03Rock13      = null
    rect                    gg_rct_Zone_Orgrimmar_Tripwire = null
    rect                    gg_rct_KoboldExplodeSound  = null
    rect                    gg_rct_GoblinRokhan01      = null
    rect                    gg_rct_GoblinRokhan02      = null
    rect                    gg_rct_SapperTarget        = null
    rect                    gg_rct_GoblinChen02        = null
    rect                    gg_rct_GoblinChen01        = null
    camerasetup             gg_cam_Dwarf_01            = null
    camerasetup             gg_cam_Dwarf_02            = null
    camerasetup             gg_cam_Goblin01            = null
    camerasetup             gg_cam_Goblin02A           = null
    camerasetup             gg_cam_Intro_Skipped       = null
    camerasetup             gg_cam_Tunnel01A           = null
    camerasetup             gg_cam_Tunnel01B           = null
    camerasetup             gg_cam_Tunnel02            = null
    camerasetup             gg_cam_Tunnel03            = null
    camerasetup             gg_cam_Victory_01          = null
    camerasetup             gg_cam_Goblin02B           = null
    camerasetup             gg_cam_Goblin01A           = null
    camerasetup             gg_cam_Tunnel02B           = null
    camerasetup             gg_cam_GoblinStart         = null
    camerasetup             gg_cam_GoblinStartB        = null
    sound                   gg_snd_D03Rexxar06         = null
    sound                   gg_snd_D03Rexxar08         = null
    sound                   gg_snd_D03Sapper05         = null
    sound                   gg_snd_D03Sapper07         = null
    sound                   gg_snd_WaterStreamLoop1    = null
    sound                   gg_snd_Earthquake          = null
    sound                   gg_snd_BridgeDeath         = null
    sound                   gg_snd_ShimmeringPortalEntrance = null
    sound                   gg_snd_EarthquakeLoop1     = null
    sound                   gg_snd_KoboldDeath         = null
    sound                   gg_snd_ArtilleryCorpseExplodeDeath1 = null
    trigger                 gg_trg_Initialization      = null
    trigger                 gg_trg_Init_01_Players     = null
    trigger                 gg_trg_Init_02_Units       = null
    trigger                 gg_trg_Init_03_Music       = null
    trigger                 gg_trg_Init_04_Environment = null
    trigger                 gg_trg_Init_05_Quests      = null
    trigger                 gg_trg_Init_06a_Hard       = null
    trigger                 gg_trg_Init_06b_Normal     = null
    trigger                 gg_trg_Init_06c_Easy       = null
    trigger                 gg_trg_Init_07_Sync_Data   = null
    trigger                 gg_trg_Init_08_Spawn_Timers = null
    trigger                 gg_trg_FirstTime_MiniCinematic_Q = null
    trigger                 gg_trg_FirstTime_Gameplay  = null
    trigger                 gg_trg_Cinematic_Revival   = null
    trigger                 gg_trg_Resurrection_Effect = null
    trigger                 gg_trg_Resurrection_Stone_Update_Visibility = null
    trigger                 gg_trg_Resurrection_Stone_Picked_Effect = null
    trigger                 gg_trg_Approach_Resurrection_Stone_01 = null
    trigger                 gg_trg_Pick_Resurrection_Stone_01 = null
    trigger                 gg_trg_Create_Default_Rexxar = null
    trigger                 gg_trg_Create_Default_Rokhan = null
    trigger                 gg_trg_Create_Default_Chen = null
    trigger                 gg_trg_Experience_Cap_Rexxar = null
    trigger                 gg_trg_Experience_Cap_Rokhan = null
    trigger                 gg_trg_Experience_Cap_Chen = null
    trigger                 gg_trg_Next_Level_Prep     = null
    trigger                 gg_trg_Next_Level_Run      = null
    trigger                 gg_trg_Victory_Cheat       = null
    trigger                 gg_trg_Defeat_Cheat        = null
    trigger                 gg_trg_DEBUG_Zone          = null
    trigger                 gg_trg_DEBUG_Saves         = null
    trigger                 gg_trg_DEBUG_Maps          = null
    trigger                 gg_trg_DEBUG_Load          = null
    trigger                 gg_trg_DEBUG_Rexxar        = null
    trigger                 gg_trg_DEBUG_Rokhan        = null
    trigger                 gg_trg_DEBUG_Chen          = null
    trigger                 gg_trg_DEBUG_Spawn         = null
    trigger                 gg_trg_User_Save           = null
    trigger                 gg_trg_User_Load           = null
    trigger                 gg_trg_Init_Zones          = null
    trigger                 gg_trg_Transition          = null
    trigger                 gg_trg_Export_All          = null
    trigger                 gg_trg_Export_Mission_Data = null
    trigger                 gg_trg_Export_Heroes       = null
    trigger                 gg_trg_Export_One_Hero     = null
    trigger                 gg_trg_Perform_Map_Transition = null
    trigger                 gg_trg_Prep_For_Save       = null
    trigger                 gg_trg_Game_Load           = null
    trigger                 gg_trg_Import_All          = null
    trigger                 gg_trg_Import_Mission_Data = null
    trigger                 gg_trg_Import_Heroes       = null
    trigger                 gg_trg_Import_Hero_Rexxar  = null
    trigger                 gg_trg_Import_Hero_Rokhan  = null
    trigger                 gg_trg_Import_Hero_Chen    = null
    trigger                 gg_trg_Enforce_Experience_Caps = null
    trigger                 gg_trg_Identify_Zone       = null
    trigger                 gg_trg_Disable_Restart_Mission = null
    trigger                 gg_trg_Set_Hero_Locations  = null
    trigger                 gg_trg_Resume_Game         = null
    trigger                 gg_trg_Zone_to_Orgrimmar   = null
    trigger                 gg_trg_Zone_Begin_MiniCinematic_Q = null
    trigger                 gg_trg_Zone_Finish_MiniCinematic_Q = null
    trigger                 gg_trg_RampOn              = null
    trigger                 gg_trg_RampOff             = null
    trigger                 gg_trg_Goblin_Midgame_Cinematic_Q = null
    trigger                 gg_trg_Goblin_Skipped      = null
    trigger                 gg_trg_Goblin_Setup        = null
    trigger                 gg_trg_Goblin_Cleanup      = null
    trigger                 gg_trg_Tunnel01_Setup      = null
    trigger                 gg_trg_Tunnel01_MiniCinematic_Q = null
    trigger                 gg_trg_Tunnel01_Cleanup    = null
    trigger                 gg_trg_Tunnel02_Setup      = null
    trigger                 gg_trg_Tunnel02_MiniCinematic_Q = null
    trigger                 gg_trg_Tunnel02_Cleanup    = null
    trigger                 gg_trg_Tunnel03_Setup      = null
    trigger                 gg_trg_Tunnel03_MiniCinematic_Q = null
    trigger                 gg_trg_Tunnel03_Cleanup    = null
    trigger                 gg_trg_Quake_Event         = null
    trigger                 gg_trg_Quake_Shake         = null
    trigger                 gg_trg_Sync_Quests         = null
    trigger                 gg_trg_Quest_DyingWish_Create = null
    trigger                 gg_trg_Quest_DyingWish_Discovered = null
    trigger                 gg_trg_Quest_DyingWish_Completed = null
    trigger                 gg_trg_Quest_DyingWish_Sync = null
    trigger                 gg_trg_Quest_EarnKeep_Create = null
    trigger                 gg_trg_Quest_EarnKeep_Discovered = null
    trigger                 gg_trg_Quest_EarnKeep_Update1 = null
    trigger                 gg_trg_Quest_EarnKeep_Update2 = null
    trigger                 gg_trg_Quest_EarnKeep_Update3 = null
    trigger                 gg_trg_Quest_EarnKeep_Update_Message = null
    trigger                 gg_trg_Quest_EarnKeep_Completed = null
    trigger                 gg_trg_Quest_EarnKeep_Sync = null
    trigger                 gg_trg_Quest_HarpyThreat_Create = null
    trigger                 gg_trg_Quest_HarpyThreat_CreateReq3 = null
    trigger                 gg_trg_Quest_HarpyThreat_Discovered = null
    trigger                 gg_trg_Quest_HarpyThreat_Update1 = null
    trigger                 gg_trg_Quest_HarpyThreat_Update2 = null
    trigger                 gg_trg_Quest_HarpyThreat_Completed = null
    trigger                 gg_trg_Quest_HarpyThreat_Sync = null
    trigger                 gg_trg_Quest_ThunderHerb_Create = null
    trigger                 gg_trg_Quest_ThunderHerb_Discovered = null
    trigger                 gg_trg_Quest_ThunderHerb_Update1 = null
    trigger                 gg_trg_Quest_ThunderHerb_Update2 = null
    trigger                 gg_trg_Quest_ThunderHerb_Update3 = null
    trigger                 gg_trg_Quest_ThunderHerb_Update4 = null
    trigger                 gg_trg_Quest_ThunderHerb_Update5 = null
    trigger                 gg_trg_Quest_ThunderHerb_Update6 = null
    trigger                 gg_trg_Quest_ThunderHerb_Completed = null
    trigger                 gg_trg_Quest_ThunderHerb_Description1 = null
    trigger                 gg_trg_Quest_ThunderHerb_Description2 = null
    trigger                 gg_trg_Quest_ThunderHerb_Description3 = null
    trigger                 gg_trg_Quest_ThunderHerb_Description4 = null
    trigger                 gg_trg_Quest_ThunderHerb_Description5 = null
    trigger                 gg_trg_Quest_ThunderHerb_Description6 = null
    trigger                 gg_trg_Quest_ThunderHerb_Sync = null
    trigger                 gg_trg_Quest_SealTunnel_Create = null
    trigger                 gg_trg_Quest_SealTunnel_Discovered = null
    trigger                 gg_trg_Quest_SealTunnel_Update1 = null
    trigger                 gg_trg_Quest_SealTunnel_Update2 = null
    trigger                 gg_trg_Quest_SealTunnel_Completed = null
    trigger                 gg_trg_Quest_SealTunnel_Sync = null
    trigger                 gg_trg_Quest_Survey_Create = null
    trigger                 gg_trg_Quest_Survey_Discovered = null
    trigger                 gg_trg_Quest_Survey_Update1 = null
    trigger                 gg_trg_Quest_Survey_Update2 = null
    trigger                 gg_trg_Quest_Survey_Update3 = null
    trigger                 gg_trg_Quest_Survey_Completed = null
    trigger                 gg_trg_Quest_Survey_Sync   = null
    trigger                 gg_trg_Quest_DestroyHumans_Create = null
    trigger                 gg_trg_Quest_DestroyHumans_CreateReq234 = null
    trigger                 gg_trg_Quest_DestroyHumans_Discovered = null
    trigger                 gg_trg_Quest_DestroyHumans_Update1 = null
    trigger                 gg_trg_Quest_DestroyHumans_Update2 = null
    trigger                 gg_trg_Quest_DestroyHumans_Update3 = null
    trigger                 gg_trg_Quest_DestroyHumans_Completed = null
    trigger                 gg_trg_Quest_DestroyHumans_Sync = null
    trigger                 gg_trg_Quest_WarnTrolls_Create = null
    trigger                 gg_trg_Quest_WarnTrolls_Discovered = null
    trigger                 gg_trg_Quest_WarnTrolls_Update = null
    trigger                 gg_trg_Quest_WarnTrolls_Completed = null
    trigger                 gg_trg_Quest_WarnTrolls_Sync = null
    trigger                 gg_trg_Quest_SinkFleet_Create = null
    trigger                 gg_trg_Quest_SinkFleet_Discovered = null
    trigger                 gg_trg_Quest_SinkFleet_Update1 = null
    trigger                 gg_trg_Quest_SinkFleet_Update2 = null
    trigger                 gg_trg_Quest_SinkFleet_Update3 = null
    trigger                 gg_trg_Quest_SinkFleet_Update4 = null
    trigger                 gg_trg_Quest_SinkFleet_Update5 = null
    trigger                 gg_trg_Quest_SinkFleet_Completed = null
    trigger                 gg_trg_Quest_SinkFleet_Description1 = null
    trigger                 gg_trg_Quest_SinkFleet_Description2 = null
    trigger                 gg_trg_Quest_SinkFleet_Description3 = null
    trigger                 gg_trg_Quest_SinkFleet_Description4 = null
    trigger                 gg_trg_Quest_SinkFleet_Description5 = null
    trigger                 gg_trg_Quest_SinkFleet_Sync = null
    trigger                 gg_trg_Quest_SignalPyres_Create = null
    trigger                 gg_trg_Quest_SignalPyres_Discovered = null
    trigger                 gg_trg_Quest_SignalPyres_Update1 = null
    trigger                 gg_trg_Quest_SignalPyres_Update2 = null
    trigger                 gg_trg_Quest_SignalPyres_Update3 = null
    trigger                 gg_trg_Quest_SignalPyres_Update4 = null
    trigger                 gg_trg_Quest_SignalPyres_Update5 = null
    trigger                 gg_trg_Quest_SignalPyres_Completed = null
    trigger                 gg_trg_Quest_SignalPyres_Description1 = null
    trigger                 gg_trg_Quest_SignalPyres_Description2 = null
    trigger                 gg_trg_Quest_SignalPyres_Description3 = null
    trigger                 gg_trg_Quest_SignalPyres_Description4 = null
    trigger                 gg_trg_Quest_SignalPyres_Description5 = null
    trigger                 gg_trg_Quest_SignalPyres_Sync = null
    trigger                 gg_trg_Quest_Summit_Create = null
    trigger                 gg_trg_Quest_Summit_Create_Req23 = null
    trigger                 gg_trg_Quest_Summit_Discovered = null
    trigger                 gg_trg_Quest_Summit_Update1 = null
    trigger                 gg_trg_Quest_Summit_Update2 = null
    trigger                 gg_trg_Quest_Summit_Completed = null
    trigger                 gg_trg_Quest_Summit_Sync   = null
    trigger                 gg_trg_Quest_SecureWells_Create = null
    trigger                 gg_trg_Quest_SecureWells_Discovered = null
    trigger                 gg_trg_Quest_SecureWells_Update1 = null
    trigger                 gg_trg_Quest_SecureWells_Update2 = null
    trigger                 gg_trg_Quest_SecureWells_Update3 = null
    trigger                 gg_trg_Quest_SecureWells_Update4 = null
    trigger                 gg_trg_Quest_SecureWells_Update5 = null
    trigger                 gg_trg_Quest_SecureWells_Completed = null
    trigger                 gg_trg_Quest_SecureWells_Description1 = null
    trigger                 gg_trg_Quest_SecureWells_Description2 = null
    trigger                 gg_trg_Quest_SecureWells_Description3 = null
    trigger                 gg_trg_Quest_SecureWells_Description4 = null
    trigger                 gg_trg_Quest_SecureWells_Description5 = null
    trigger                 gg_trg_Quest_SecureWells_Sync = null
    trigger                 gg_trg_Quest_ThunderLizards_Create = null
    trigger                 gg_trg_Quest_ThunderLizards_Create_Req23 = null
    trigger                 gg_trg_Quest_ThunderLizards_Discovered = null
    trigger                 gg_trg_Quest_ThunderLizards_Update1 = null
    trigger                 gg_trg_Quest_ThunderLizards_Update2 = null
    trigger                 gg_trg_Quest_ThunderLizards_Completed = null
    trigger                 gg_trg_Quest_ThunderLizards_Sync = null
    trigger                 gg_trg_Quest_LizardEggs_Create = null
    trigger                 gg_trg_Quest_LizardEggs_Discovered = null
    trigger                 gg_trg_Quest_LizardEggs_Update1 = null
    trigger                 gg_trg_Quest_LizardEggs_Update2 = null
    trigger                 gg_trg_Quest_LizardEggs_Completed = null
    trigger                 gg_trg_Quest_LizardEggs_Description1 = null
    trigger                 gg_trg_Quest_LizardEggs_Description2 = null
    trigger                 gg_trg_Quest_LizardEggs_Description3 = null
    trigger                 gg_trg_Quest_LizardEggs_Sync = null
    trigger                 gg_trg_Quest_Quillboars_Create = null
    trigger                 gg_trg_Quest_Quillboars_Discovered = null
    trigger                 gg_trg_Quest_Quillboars_Update1 = null
    trigger                 gg_trg_Quest_Quillboars_Completed = null
    trigger                 gg_trg_Quest_Quillboars_Sync = null
    trigger                 gg_trg_Quest_WarlockCoven_Create = null
    trigger                 gg_trg_Quest_WarlockCoven_Discovered = null
    trigger                 gg_trg_Quest_WarlockCoven_Update1 = null
    trigger                 gg_trg_Quest_WarlockCoven_Update2 = null
    trigger                 gg_trg_Quest_WarlockCoven_Completed = null
    trigger                 gg_trg_Quest_WarlockCoven_Sync = null
    trigger                 gg_trg_Quest_StrangeBrew_Create = null
    trigger                 gg_trg_Quest_StrangeBrew_Discovered = null
    trigger                 gg_trg_Quest_StrangeBrew_Update1 = null
    trigger                 gg_trg_Quest_StrangeBrew_Update2 = null
    trigger                 gg_trg_Quest_StrangeBrew_Update3 = null
    trigger                 gg_trg_Quest_StrangeBrew_Update_Message = null
    trigger                 gg_trg_Quest_StrangeBrew_Completed = null
    trigger                 gg_trg_Quest_StrangeBrew_Sync = null
    trigger                 gg_trg_TriggerGoblinCinematic = null
    trigger                 gg_trg_RescueGoblins       = null
    trigger                 gg_trg_SupportColumn01A    = null
    trigger                 gg_trg_SupportColumn01B    = null
    trigger                 gg_trg_SupportColumn02A    = null
    trigger                 gg_trg_SupportColumn02B    = null
    trigger                 gg_trg_SupportColumn03A    = null
    trigger                 gg_trg_SupportColumn03B    = null
    trigger                 gg_trg_Create_Column_Leaderboard = null
    trigger                 gg_trg_Update_Column_Leaderboard = null
    trigger                 gg_trg_Tunnel01VoiceOver   = null
    trigger                 gg_trg_Tunnel01VoiceOver_Q = null
    trigger                 gg_trg_Tunnel02VoiceOver   = null
    trigger                 gg_trg_Tunnel02VoiceOver_Q = null
    trigger                 gg_trg_Tunnel03VoiceOver   = null
    trigger                 gg_trg_Tunnel03VoiceOver_Q = null
    trigger                 gg_trg_Initialize_Goblin_Respawn_Timer = null
    trigger                 gg_trg_Goblin_Respawn_Timer_Expires = null
    trigger                 gg_trg_Sapper_Enters_Dest  = null
    trigger                 gg_trg_HINT_First_Replacement = null
    trigger                 gg_trg_HINT_First_Replacement_Q = null
    trigger                 gg_trg_HINT_Use_Kaboom_Q   = null
    trigger                 gg_trg_Add_Preexisting_Units_to_Packs = null
    trigger                 gg_trg_Pack01              = null
    trigger                 gg_trg_Pack02              = null
    trigger                 gg_trg_Pack03A             = null
    trigger                 gg_trg_Pack03B             = null
    trigger                 gg_trg_Pack04XA            = null
    trigger                 gg_trg_Pack04XB            = null
    trigger                 gg_trg_Pack05X             = null
    trigger                 gg_trg_Pack06A             = null
    trigger                 gg_trg_Pack06B             = null
    trigger                 gg_trg_Pack07              = null
    trigger                 gg_trg_Pack08              = null
    trigger                 gg_trg_Pack09A             = null
    trigger                 gg_trg_Pack09B             = null
    trigger                 gg_trg_Pack10A             = null
    trigger                 gg_trg_Pack10B             = null
    trigger                 gg_trg_Pack11XA            = null
    trigger                 gg_trg_Pack11XB            = null
    trigger                 gg_trg_Pack12A             = null
    trigger                 gg_trg_Pack12B             = null
    trigger                 gg_trg_Pack13A             = null
    trigger                 gg_trg_Pack13B             = null
    trigger                 gg_trg_Pack14X             = null
    trigger                 gg_trg_Pack15A             = null
    trigger                 gg_trg_Pack15B             = null
    trigger                 gg_trg_Pack16XA            = null
    trigger                 gg_trg_Pack16XB            = null
    trigger                 gg_trg_Pack17A             = null
    trigger                 gg_trg_Pack17B             = null
    trigger                 gg_trg_Pack18              = null
    trigger                 gg_trg_Pack19              = null
    trigger                 gg_trg_Pack20              = null
    trigger                 gg_trg_Pack_Unit_Dies      = null
    trigger                 gg_trg_Placeholder_Decay   = null
    trigger                 gg_trg_Drop_Table_Common_KoboldA = null
    trigger                 gg_trg_Drop_Table_Common_KoboldB = null
    trigger                 gg_trg_Drop_Table_KT03A    = null
    trigger                 gg_trg_Drop_Table_KT04XA   = null
    trigger                 gg_trg_Drop_Table_KG06A    = null
    trigger                 gg_trg_Drop_Table_KT09A    = null
    trigger                 gg_trg_Drop_Table_KT10A    = null
    trigger                 gg_trg_Drop_Table_KG11XA   = null
    trigger                 gg_trg_Drop_Table_KT12A    = null
    trigger                 gg_trg_Drop_Table_KT13A    = null
    trigger                 gg_trg_Drop_Table_KTM15A   = null
    trigger                 gg_trg_Drop_Table_KG15B    = null
    trigger                 gg_trg_Drop_Table_KG16XA   = null
    trigger                 gg_trg_Drop_Table_KT17A    = null
    trigger                 gg_trg_Drop_Table_Wildkin  = null
    trigger                 gg_trg_Drop_Table_None     = null
    trigger                 gg_trg_Pack_Spawn          = null
    trigger                 gg_trg_Pack_Spawn_4X       = null
    trigger                 gg_trg_Pack_Spawn_11X      = null
    trigger                 gg_trg_Pack_Spawn_16X      = null
    trigger                 gg_trg_Pack_Roam           = null
    trigger                 gg_trg_Drop_Item           = null
    unit                    gg_unit_ngsp_0006          = null
    unit                    gg_unit_ngsp_0007          = null
    unit                    gg_unit_ngsp_0009          = null
    unit                    gg_unit_ngsp_0010          = null
    unit                    gg_unit_nbse_0091          = null
    destructable            gg_dest_BTsc_0463          = null
    destructable            gg_dest_BTsc_0462          = null
    destructable            gg_dest_BTsc_0453          = null
    destructable            gg_dest_BTsc_0073          = null
    destructable            gg_dest_BTsc_0460          = null
    destructable            gg_dest_BTsc_0461          = null
endglobals

function InitGlobals takes nothing returns nothing
    local integer i = 0
    set udg_GameOver = false
    set udg_AP1_Player = Player(0)
    set udg_APG1_Player = bj_FORCE_PLAYER[0]
    set udg_Rexxar = null
    set i = 0
    loop
        exitwhen (i > 20)
        set udg_ZoneMaps[i] = ""
        set i = i + 1
    endloop

    set udg_ZoneCount = 0
    set udg_Zone = 0
    set i = 0
    loop
        exitwhen (i > 20)
        set udg_ZoneSaves[i] = ""
        set i = i + 1
    endloop

    set udg_TransitionKey = "OrcX01Transitions"
    set udg_TransitionSource = 0
    set udg_TransitionTarget = 0
    set udg_TransitionTargetArea = 0
    set udg_ZoneMapPath = ""
    set udg_SaveExt = ""
    set udg_ZoneFolder = ""
    set udg_ZoneMapExt = ""
    set udg_SaveFolder = ""
    set udg_TempPathA = ""
    set udg_TempPathB = ""
    set udg_NULLString = ""
    set udg_QuestSealTunnelProgress = 0
    set udg_IntroSkipped = false
    set udg_HiddenUnits = CreateGroup()
    set udg_ExpDisabledForRexxar = false
    set udg_InCinematic = false
    set udg_LBColumnsDestroyed = 0
    set udg_ChenInParty = false
    set udg_RokhanInParty = false
    set udg_RexxarInParty = true
    set udg_TransitionHeroName = ""
    set udg_TransitionHeroInParty = false
    set udg_TransitionHeroLife = 0
    set udg_TransitionHeroMana = 0
    set udg_QuestDestroyHumansProgress = 0
    set udg_QuestDyingWishProgress = 0
    set udg_QuestEarnKeepProgress = 0
    set udg_QuestEarnKeepProgress1 = false
    set udg_QuestEarnKeepProgress2 = false
    set udg_QuestEarnKeepProgress3 = false
    set udg_QuestHarpyThreatProgress = 0
    set udg_QuestSignalPyresProgress = 0
    set udg_QuestSinkFleetProgress = 0
    set udg_QuestSummitProgress = 0
    set udg_QuestSurveyProgress = 0
    set udg_QuestThunderHerbProgress = 0
    set udg_QuestWarnTrollsProgress = 0
    set udg_QuestSecureWellsProgress = 0
    set udg_QuestThunderLizardsProgress = 0
    set udg_QuestLizardEggsProgress = 0
    set udg_QuestQuillboarsProgress = 0
    set udg_QuestWarlockCovenProgress = 0
    set udg_QuestStrangeBrewProgress = 0
    set udg_QuestStrangeBrewProgress1 = false
    set udg_QuestStrangeBrewProgress2 = false
    set udg_QuestStrangeBrewProgress3 = false
    set udg_RampVisionOn = false
    set udg_ExpDisabledForChen = false
    set udg_SelectedUnits = CreateGroup()
    set udg_QuakeTimer = CreateTimer()
    set udg_RexxarCinematic = null
    set udg_GoblinRespawnTimer = CreateTimer()
    set udg_SpawnPackSpawnChance = 0
    set udg_SpawnPackUnitMax = 0
    set udg_SpawnPackDropTable = CreateGroup()
    set udg_DropTableNone = CreateGroup()
    set udg_DropTableCommonKoboldA = CreateGroup()
    set udg_DropTableCommonKoboldB = CreateGroup()
    set udg_DropCommonChance = 0
    set udg_DropRareChance = 0
    set udg_DropRoll = 0
    set udg_SpawnPackRoamChance = 0
    set udg_DropTableKT03A = CreateGroup()
    set udg_DropTableKT04XA = CreateGroup()
    set udg_DropTableKG06A = CreateGroup()
    set udg_DropTableWildkin = CreateGroup()
    set udg_DropTableKT09A = CreateGroup()
    set udg_DropTableKT10A = CreateGroup()
    set udg_DropTableKG11XA = CreateGroup()
    set udg_ExpDisabledForRokhan = false
    set udg_DropTableKT12A = CreateGroup()
    set udg_DropTableKT13A = CreateGroup()
    set udg_DropTableKTM15A = CreateGroup()
    set udg_DropTableKG15B = CreateGroup()
    set udg_DropTableKG16XA = CreateGroup()
    set udg_DropTableKT17A = CreateGroup()
    set udg_Column01Dead = false
    set udg_Column02Dead = false
    set udg_Column03Dead = false
    set udg_BonusSkillPointsGiven = 0
    set udg_GoblinSkipped = false
    set udg_ResurrectionVMExists = false
    set udg_ResurrectionStonePicked = 0
    set udg_BlizzardFolder = ""
    set udg_SpawnTimerCommon01 = CreateTimer()
    set udg_CommonSpawnTimerLength = 0
    set udg_SpawnTimerRare01 = CreateTimer()
    set udg_RareSpawnTimerLength = 0
    set udg_SpawnTimerCommon02 = CreateTimer()
    set udg_SpawnTimerCommon03 = CreateTimer()
    set udg_SpawnTimerCommon04 = CreateTimer()
    set udg_SpawnTimerCommon05 = CreateTimer()
    set udg_SpawnTimerRare02 = CreateTimer()
    set udg_GraveyardTimer = CreateTimer()
    set udg_DebugSpawning = false
    set udg_GraveyardUnits = CreateGroup()
    set udg_SpawnPackTotal = 0
    set udg_UnitRespawnTime = 0
    set i = 0
    loop
        exitwhen (i > 50)
        set udg_PackRespawnTimeArray[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 50)
        set udg_PackGroupArray[i] = CreateGroup()
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 50)
        set udg_GraveyardArray[i] = CreateGroup()
        set i = i + 1
    endloop

    set udg_SpawnPackID = 0
    set udg_AllTunnelsClosed = false
    set udg_RokhanCinematic = null
    set udg_ChenCinematic = null
    set udg_CinematicSafety = false
    set udg_P4_Goblins = Player(3)
    set udg_P7_RezStone = Player(6)
endfunction

//***************************************************************************
//*
//*  Sounds
//*
//***************************************************************************

function InitSounds takes nothing returns nothing
    set gg_snd_D03Rexxar06 = CreateSound( "Sound\\Dialogue\\OrcExpCamp\\OrcQuest03x\\D03Rexxar06.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_D03Rexxar06, "D03Rexxar06" )
    call SetSoundDuration( gg_snd_D03Rexxar06, 1985 )
    set gg_snd_D03Rexxar08 = CreateSound( "Sound\\Dialogue\\OrcExpCamp\\OrcQuest03x\\D03Rexxar08.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_D03Rexxar08, "D03Rexxar08" )
    call SetSoundDuration( gg_snd_D03Rexxar08, 4598 )
    set gg_snd_D03Sapper05 = CreateSound( "Sound\\Dialogue\\OrcExpCamp\\OrcQuest03x\\D03Sapper05.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_D03Sapper05, "D03Sapper05" )
    call SetSoundDuration( gg_snd_D03Sapper05, 4624 )
    set gg_snd_D03Sapper07 = CreateSound( "Sound\\Dialogue\\OrcExpCamp\\OrcQuest03x\\D03Sapper07.mp3", false, false, false, 10, 10, "" )
    call SetSoundParamsFromLabel( gg_snd_D03Sapper07, "D03Sapper07" )
    call SetSoundDuration( gg_snd_D03Sapper07, 13401 )
    set gg_snd_WaterStreamLoop1 = CreateSound( "Sound\\Ambient\\DoodadEffects\\WaterStreamLoop1.wav", true, true, true, 10, 10, "DoodadsEAX" )
    call SetSoundParamsFromLabel( gg_snd_WaterStreamLoop1, "StreamLoop" )
    call SetSoundDuration( gg_snd_WaterStreamLoop1, 2009 )
    set gg_snd_Earthquake = CreateSound( "Sound\\Ambient\\DoodadEffects\\Earthquake.wav", true, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_Earthquake, "EarthquakeWithRocksLoop" )
    call SetSoundDuration( gg_snd_Earthquake, 6000 )
    set gg_snd_BridgeDeath = CreateSound( "Sound\\Ambient\\DoodadEffects\\BridgeDeath.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_BridgeDeath, "BridgeDeath" )
    call SetSoundDuration( gg_snd_BridgeDeath, 9081 )
    set gg_snd_ShimmeringPortalEntrance = CreateSound( "Sound\\Ambient\\DoodadEffects\\ShimmeringPortalEntrance.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_ShimmeringPortalEntrance, "EnterShimmeringPortal" )
    call SetSoundDuration( gg_snd_ShimmeringPortalEntrance, 1829 )
    set gg_snd_EarthquakeLoop1 = CreateSound( "Abilities\\Spells\\Orc\\Earthquake\\EarthquakeLoop1.wav", true, false, true, 10, 10, "SpellsEAX" )
    call SetSoundParamsFromLabel( gg_snd_EarthquakeLoop1, "EarthquakeLoop" )
    call SetSoundDuration( gg_snd_EarthquakeLoop1, 1962 )
    set gg_snd_KoboldDeath = CreateSound( "Units\\Creeps\\Kobold\\KoboldDeath.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_KoboldDeath, "KoboldDeath" )
    call SetSoundDuration( gg_snd_KoboldDeath, 2076 )
    set gg_snd_ArtilleryCorpseExplodeDeath1 = CreateSound( "Sound\\Units\\Death\\ArtilleryCorpseExplodeDeath1.wav", false, true, true, 10, 10, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_ArtilleryCorpseExplodeDeath1, "ArtilleryExplodeDeath" )
    call SetSoundDuration( gg_snd_ArtilleryCorpseExplodeDeath1, 1486 )
endfunction

//***************************************************************************
//*
//*  Destructable Objects
//*
//***************************************************************************

function CreateAllDestructables takes nothing returns nothing
    local destructable d
    local trigger t
    local real life
    set gg_dest_BTsc_0462 = CreateDestructableZ( 'BTsc', -2592.0, 2720.0, 549.7, 180.000, 1.000, 0 )
    set gg_dest_BTsc_0453 = CreateDestructableZ( 'BTsc', -2912.0, 2720.0, 553.5, 0.000, 1.000, 0 )
    set gg_dest_BTsc_0073 = CreateDestructableZ( 'BTsc', 2912.0, 2784.0, 275.7, 180.000, 1.000, 0 )
    set gg_dest_BTsc_0460 = CreateDestructableZ( 'BTsc', 2592.0, 2784.0, 278.6, 0.000, 1.000, 0 )
    set gg_dest_BTsc_0461 = CreateDestructableZ( 'BTsc', 3040.0, -2272.0, 272.2, 90.000, 1.000, 0 )
    set gg_dest_BTsc_0463 = CreateDestructableZ( 'BTsc', 3040.0, -1952.0, 268.9, 270.000, 1.000, 0 )
endfunction

//***************************************************************************
//*
//*  Items
//*
//***************************************************************************

function CreateAllItems takes nothing returns nothing
    local integer itemID

    call CreateItem( 'gold', 2739.0, 876.7 )
    call CreateItem( 'gold', 2876.4, -3068.6 )
    call CreateItem( 'rat6', 1265.1, -3297.6 )
    call CreateItem( 'rnsp', -1431.5, 2658.6 )
    call CreateItem( 'rump', -1046.5, -530.8 )
    call CreateItem( 'tdex', -2621.8, -1978.5 )
    call CreateItem( 'tstr', -2232.1, -2365.0 )
endfunction

//***************************************************************************
//*
//*  Unit Creation
//*
//***************************************************************************

//===========================================================================
function CreateBuildingsForPlayer3 takes nothing returns nothing
    local player p = Player(3)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'nzin', -3104.0, -1056.0, 270.000 )
endfunction

//===========================================================================
function CreateUnitsForPlayer3 takes nothing returns nothing
    local player p = Player(3)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_ngsp_0006 = CreateUnit( p, 'ngsp', -1284.5, -1177.1, 184.295 )
    set gg_unit_ngsp_0007 = CreateUnit( p, 'ngsp', -1398.4, -844.1, 235.792 )
    set gg_unit_ngsp_0009 = CreateUnit( p, 'ngsp', -1407.9, -1412.0, 123.546 )
    set gg_unit_ngsp_0010 = CreateUnit( p, 'ngsp', -1484.3, -1174.9, 184.393 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer6 takes nothing returns nothing
    local player p = Player(6)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_nbse_0091 = CreateUnit( p, 'nbse', -2464.0, -608.0, 270.000 )
endfunction

//===========================================================================
function CreateNeutralHostile takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_AGGRESSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'nkot', -540.7, 734.3, 221.695 )
    set u = CreateUnit( p, 'nkob', -682.4, 736.9, 335.324 )
    set u = CreateUnit( p, 'nkol', 2626.9, 2411.4, 247.890 )
    set u = CreateUnit( p, 'nkob', -512.6, 574.9, 169.150 )
    set u = CreateUnit( p, 'nkob', 2700.9, 725.5, 305.111 )
    set u = CreateUnit( p, 'nkob', 1825.9, -2914.1, 325.656 )
    set u = CreateUnit( p, 'nkob', 1617.1, -2706.6, 281.105 )
    set u = CreateUnit( p, 'nkob', 2030.5, -2707.2, 221.198 )
    set u = CreateUnit( p, 'nkob', -2750.5, -3003.5, 87.816 )
    set u = CreateUnit( p, 'nkob', 2097.2, -2992.8, 332.434 )
    set u = CreateUnit( p, 'nkob', 1957.9, -3207.1, 124.303 )
    set u = CreateUnit( p, 'nkob', 1703.1, -3200.7, 159.570 )
    set u = CreateUnit( p, 'nkob', 1612.4, -3017.0, 2.395 )
    set u = CreateUnit( p, 'nkol', 3030.3, -3073.4, 194.515 )
    set u = CreateUnit( p, 'nkog', 2628.0, -1940.5, 146.287 )
    call SetUnitState( u, UNIT_STATE_MANA, 0 )
    set u = CreateUnit( p, 'nkob', 2530.8, -361.5, 189.454 )
    set u = CreateUnit( p, 'nkob', 2638.7, -267.4, 88.673 )
    set u = CreateUnit( p, 'nkob', 2767.5, -375.6, 245.574 )
    set u = CreateUnit( p, 'nkob', 2704.2, -486.2, 59.383 )
    set u = CreateUnit( p, 'nkob', 2588.4, 775.3, 200.111 )
    set u = CreateUnit( p, 'nkob', 2650.7, 511.3, 311.450 )
    set u = CreateUnit( p, 'nkob', -2882.7, -3107.0, 168.656 )
    set u = CreateUnit( p, 'nkot', 2766.2, 617.5, 224.600 )
    set u = CreateUnit( p, 'nkob', 1385.3, 634.1, 338.444 )
    set u = CreateUnit( p, 'nkob', 1529.5, 596.0, 189.752 )
    set u = CreateUnit( p, 'nowb', 30.0, 2229.9, 261.030 )
    set u = CreateUnit( p, 'nkot', 608.3, 644.9, 204.929 )
    set u = CreateUnit( p, 'nkog', 1021.7, 1879.4, 270.645 )
    call SetUnitState( u, UNIT_STATE_MANA, 0 )
    set u = CreateUnit( p, 'nkob', 944.8, 1964.5, 354.902 )
    set u = CreateUnit( p, 'nkob', 1107.2, 1868.6, 323.239 )
    set u = CreateUnit( p, 'nkob', 523.9, 729.8, 242.970 )
    set u = CreateUnit( p, 'nkob', -1297.2, 1157.3, 325.337 )
    set u = CreateUnit( p, 'nkob', -1511.1, 1196.1, 80.356 )
    set u = CreateUnit( p, 'nkob', -1307.9, 907.7, 216.009 )
    set u = CreateUnit( p, 'nkot', -2735.1, 1244.5, 330.820 )
    set u = CreateUnit( p, 'nkob', -2838.9, 1336.1, 317.867 )
    set u = CreateUnit( p, 'nkob', -2858.7, 1185.1, 351.242 )
    set u = CreateUnit( p, 'nkob', -2624.4, 2491.0, 197.167 )
    set u = CreateUnit( p, 'nkob', -2423.4, 2373.4, 39.750 )
    set u = CreateUnit( p, 'nkob', -2748.4, 2199.9, 51.418 )
    set u = CreateUnit( p, 'nkog', -2888.9, 2393.0, 24.615 )
    call SetUnitState( u, UNIT_STATE_MANA, 0 )
    set u = CreateUnit( p, 'nkob', -384.8, -3255.6, 281.100 )
    set u = CreateUnit( p, 'nkob', 2563.6, -2191.0, 164.002 )
    set u = CreateUnit( p, 'nkob', 2491.8, -2031.3, 221.198 )
    set u = CreateUnit( p, 'nkob', 2618.8, -1753.0, 221.198 )
    set u = CreateUnit( p, 'nkob', 2765.2, -2140.4, 266.240 )
    set u = CreateUnit( p, 'nowb', 175.0, 2106.0, 224.690 )
    set u = CreateUnit( p, 'nkob', 1929.2, 2688.4, 323.239 )
    set u = CreateUnit( p, 'nkob', 2014.9, 2720.2, 248.105 )
    set u = CreateUnit( p, 'nkob', 2765.8, 2474.9, 51.029 )
    set u = CreateUnit( p, 'nkob', 2554.7, 2558.5, 323.239 )
    set u = CreateUnit( p, 'nkob', 2793.4, 2059.1, 266.240 )
    set u = CreateUnit( p, 'nkob', 2685.1, 2165.5, 111.901 )
    set u = CreateUnit( p, 'nkob', 2523.1, 2141.8, 323.239 )
    set u = CreateUnit( p, 'nkob', 2884.4, 2241.1, 201.568 )
    set u = CreateUnit( p, 'nkob', 497.0, -687.8, 169.150 )
    set u = CreateUnit( p, 'nkog', 2903.0, -2958.3, 152.154 )
    call SetUnitState( u, UNIT_STATE_MANA, 0 )
    set u = CreateUnit( p, 'nkog', 2922.1, -3177.4, 337.807 )
    call SetUnitState( u, UNIT_STATE_MANA, 0 )
    set u = CreateUnit( p, 'nkob', 326.5, -928.3, 169.150 )
    set u = CreateUnit( p, 'nkot', 515.1, -883.0, 42.079 )
    set u = CreateUnit( p, 'nkob', 751.5, -820.8, 169.150 )
    set u = CreateUnit( p, 'nkob', 649.8, -1031.6, 169.150 )
    set u = CreateUnit( p, 'nkob', -2745.6, -3237.1, 90.220 )
    set u = CreateUnit( p, 'nkog', -2620.6, 1392.7, 2.902 )
    call SetUnitState( u, UNIT_STATE_MANA, 0 )
    set u = CreateUnit( p, 'nkob', -382.6, -3004.1, 281.100 )
    set u = CreateUnit( p, 'nkot', -2758.2, -3115.9, 17.800 )
    set u = CreateUnit( p, 'nkob', -1409.3, -2950.7, 281.100 )
    set u = CreateUnit( p, 'nkob', -1682.8, -3045.7, 281.100 )
    set u = CreateUnit( p, 'nkob', -1391.5, -3202.0, 281.100 )
    set u = CreateUnit( p, 'nkob', -1221.3, -2952.8, 281.100 )
    set u = CreateUnit( p, 'nkog', -677.3, 530.7, 152.154 )
    call SetUnitState( u, UNIT_STATE_MANA, 0 )
    set u = CreateUnit( p, 'nkog', 2634.9, 2240.4, 152.154 )
    call SetUnitState( u, UNIT_STATE_MANA, 0 )
    set u = CreateUnit( p, 'nkog', 1970.0, 2620.9, 286.499 )
    call SetUnitState( u, UNIT_STATE_MANA, 0 )
    set u = CreateUnit( p, 'nkog', 2410.9, -2269.5, 89.728 )
    call SetUnitState( u, UNIT_STATE_MANA, 0 )
    set u = CreateUnit( p, 'nowb', 480.7, -3171.1, 63.621 )
    set u = CreateUnit( p, 'nowb', 702.0, -3089.9, 137.720 )
    set u = CreateUnit( p, 'nkol', -2771.6, 2525.9, 293.694 )
endfunction

//===========================================================================
function CreateNeutralPassiveBuildings takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'ngme', -832.0, -1152.0, 270.000 )
endfunction

//===========================================================================
function CreatePlayerBuildings takes nothing returns nothing
    call CreateBuildingsForPlayer3(  )
    call CreateBuildingsForPlayer6(  )
endfunction

//===========================================================================
function CreatePlayerUnits takes nothing returns nothing
    call CreateUnitsForPlayer3(  )
endfunction

//===========================================================================
function CreateAllUnits takes nothing returns nothing
    call CreateNeutralPassiveBuildings(  )
    call CreatePlayerBuildings(  )
    call CreateNeutralHostile(  )
    call CreatePlayerUnits(  )
endfunction

//***************************************************************************
//*
//*  Regions
//*
//***************************************************************************

function CreateRegions takes nothing returns nothing
    local weathereffect we

    set gg_rct_Gameplay_Rexxar_Start = Rect( -3008.0, -1216.0, -2880.0, -1088.0 )
    set gg_rct_GoblinRexxar01 = Rect( -2496.0, -1184.0, -2368.0, -1056.0 )
    set gg_rct_GoblinRexxar02 = Rect( -1920.0, -1184.0, -1792.0, -1056.0 )
    set gg_rct_GoblinTripwire = Rect( -2176.0, -1568.0, -2048.0, -736.0 )
    set gg_rct_NearTunnel01 = Rect( -3200.0, 2240.0, -2176.0, 3104.0 )
    set gg_rct_NearTunnel02 = Rect( 2112.0, 1952.0, 3136.0, 2816.0 )
    set gg_rct_NearTunnel03 = Rect( 2176.0, -2400.0, 3200.0, -1536.0 )
    set gg_rct_Pack01 = Rect( 2464.0, -576.0, 2848.0, -192.0 )
    set gg_rct_Pack02 = Rect( 1280.0, 256.0, 1600.0, 704.0 )
    set gg_rct_Pack03 = Rect( 2496.0, 384.0, 2816.0, 896.0 )
    set gg_rct_Pack04X = Rect( 2368.0, 1952.0, 3008.0, 2592.0 )
    set gg_rct_Pack05X = Rect( 1792.0, 2464.0, 2048.0, 2816.0 )
    set gg_rct_Pack06 = Rect( 896.0, 1728.0, 1152.0, 2048.0 )
    set gg_rct_Pack07 = Rect( -160.0, 1888.0, 256.0, 2304.0 )
    set gg_rct_Pack08 = Rect( -1600.0, 736.0, -1184.0, 1280.0 )
    set gg_rct_Pack09 = Rect( -864.0, 256.0, -384.0, 896.0 )
    set gg_rct_Pack10 = Rect( 256.0, 576.0, 896.0, 1024.0 )
    set gg_rct_Pack11X = Rect( -3008.0, 2144.0, -2304.0, 2656.0 )
    set gg_rct_Pack12 = Rect( -2944.0, 1024.0, -2560.0, 1504.0 )
    set gg_rct_Pack13 = Rect( 160.0, -1248.0, 896.0, -448.0 )
    set gg_rct_Pack14X = Rect( 1536.0, -3360.0, 2240.0, -2528.0 )
    set gg_rct_Pack15 = Rect( 2752.0, -3264.0, 3072.0, -2880.0 )
    set gg_rct_Pack16X = Rect( 2304.0, -2336.0, 2880.0, -1568.0 )
    set gg_rct_Pack17 = Rect( -2976.0, -3328.0, -2560.0, -2880.0 )
    set gg_rct_Pack18 = Rect( -640.0, -3328.0, -256.0, -2848.0 )
    set gg_rct_Pack19 = Rect( -1824.0, -3328.0, -1088.0, -2688.0 )
    set gg_rct_Pack20 = Rect( 352.0, -3264.0, 800.0, -2880.0 )
    set gg_rct_Ramp_Vision_Source = Rect( -2624.0, -1248.0, -2496.0, -1120.0 )
    set gg_rct_Ramp01VM = Rect( -3264.0, -1728.0, -2720.0, -608.0 )
    set gg_rct_Resurrection_Stone_01 = Rect( -2560.0, -704.0, -2368.0, -512.0 )
    set gg_rct_Resurrection_Stone_01_Spot = Rect( -2464.0, -800.0, -2336.0, -672.0 )
    set gg_rct_Resurrection_Stone_01_Tripwire = Rect( -2752.0, -1024.0, -2112.0, -480.0 )
    set gg_rct_Sapper_Respawn_Dest = Rect( -1568.0, -1504.0, -1216.0, -768.0 )
    set gg_rct_Sapper_Respawn_Enter = Rect( -3072.0, -1216.0, -2944.0, -1088.0 )
    set gg_rct_Spawn04X = Rect( 2656.0, 2816.0, 2816.0, 2976.0 )
    set gg_rct_Spawn11X = Rect( -2848.0, 2720.0, -2688.0, 2880.0 )
    set gg_rct_Spawn16X = Rect( 3072.0, -2208.0, 3232.0, -2048.0 )
    set gg_rct_SpawnPoint1A = Rect( -3008.0, -1216.0, -2880.0, -1088.0 )
    set gg_rct_SpawnPoint1B = Rect( -3072.0, -1344.0, -2944.0, -1216.0 )
    set gg_rct_SpawnPoint1C = Rect( -3072.0, -1088.0, -2944.0, -960.0 )
    set gg_rct_StreamSound1 = Rect( -3392.0, -160.0, -3008.0, 96.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, -3200.0, -32.0, 204.8 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 384.0, 256.0 )
    set gg_rct_StreamSound10 = Rect( 192.0, 960.0, 864.0, 1568.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 528.0, 1264.0, 270.5 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 672.0, 608.0 )
    set gg_rct_StreamSound12 = Rect( 672.0, 1152.0, 2112.0, 1856.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 1392.0, 1504.0, 286.3 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 1440.0, 704.0 )
    set gg_rct_StreamSound13 = Rect( 1280.0, 896.0, 1824.0, 1184.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 1552.0, 1040.0, 283.6 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 544.0, 288.0 )
    set gg_rct_StreamSound14 = Rect( 1856.0, 1824.0, 2112.0, 3040.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 1984.0, 2432.0, 255.9 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 256.0, 1216.0 )
    set gg_rct_StreamSound15 = Rect( 1664.0, 1824.0, 1888.0, 2400.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 1776.0, 2112.0, 303.2 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 224.0, 576.0 )
    set gg_rct_StreamSound16 = Rect( 2112.0, 1376.0, 3072.0, 2720.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 2592.0, 2048.0, 273.0 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 960.0, 1344.0 )
    set gg_rct_StreamSound17 = Rect( 640.0, -2080.0, 1120.0, 960.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 880.0, -560.0, 272.3 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 480.0, 3040.0 )
    set gg_rct_StreamSound18 = Rect( 1088.0, -2240.0, 1536.0, -1056.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 1312.0, -1648.0, 267.4 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 448.0, 1184.0 )
    set gg_rct_StreamSound19 = Rect( 1472.0, -3424.0, 2144.0, -1280.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 1808.0, -2352.0, 261.6 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 672.0, 2144.0 )
    set gg_rct_StreamSound2 = Rect( -3040.0, -128.0, -2400.0, 768.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, -2720.0, 320.0, 192.0 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 640.0, 896.0 )
    set gg_rct_StreamSound20 = Rect( 2080.0, -1696.0, 2976.0, -1056.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 2528.0, -1376.0, 264.7 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 896.0, 640.0 )
    set gg_rct_StreamSound21 = Rect( 1696.0, -608.0, 2368.0, 64.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 2032.0, -272.0, 256.0 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 672.0, 672.0 )
    set gg_rct_StreamSound22 = Rect( 2144.0, -1088.0, 3040.0, -384.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 2592.0, -736.0, 256.8 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 896.0, 704.0 )
    set gg_rct_StreamSound23 = Rect( 2112.0, 992.0, 2304.0, 1376.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 2208.0, 1184.0, 290.3 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 192.0, 384.0 )
    set gg_rct_StreamSound24 = Rect( 1824.0, 992.0, 2112.0, 1184.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 1968.0, 1088.0, 282.8 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 288.0, 192.0 )
    set gg_rct_StreamSound25 = Rect( 2112.0, -2464.0, 3104.0, -1632.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 2608.0, -2048.0, 255.5 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 992.0, 832.0 )
    set gg_rct_StreamSound26 = Rect( 2048.0, -3520.0, 3232.0, -2752.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 2640.0, -3136.0, 269.3 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 1184.0, 768.0 )
    set gg_rct_StreamSound27 = Rect( -2048.0, 1824.0, -928.0, 2464.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, -1488.0, 2144.0, 256.0 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 1120.0, 640.0 )
    set gg_rct_StreamSound28 = Rect( -1600.0, 2464.0, -1248.0, 2848.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, -1424.0, 2656.0, 256.7 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 352.0, 384.0 )
    set gg_rct_StreamSound29 = Rect( -2400.0, 1696.0, -2048.0, 2080.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, -2224.0, 1888.0, 282.8 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 352.0, 384.0 )
    set gg_rct_StreamSound3 = Rect( -2432.0, 96.0, -1856.0, 1088.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, -2144.0, 592.0, 258.5 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 576.0, 992.0 )
    set gg_rct_StreamSound30 = Rect( 1056.0, -32.0, 1408.0, 352.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 1232.0, 160.0, 270.4 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 352.0, 384.0 )
    set gg_rct_StreamSound4 = Rect( -2176.0, 1056.0, -736.0, 1856.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, -1456.0, 1456.0, 267.2 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 1440.0, 800.0 )
    set gg_rct_StreamSound5 = Rect( -1888.0, 864.0, -800.0, 1088.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, -1344.0, 976.0, 266.1 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 1088.0, 224.0 )
    set gg_rct_StreamSound6 = Rect( -1856.0, 576.0, -352.0, 928.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, -1104.0, 752.0, 256.3 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 1504.0, 352.0 )
    set gg_rct_StreamSound7 = Rect( -928.0, 128.0, 0.0, 640.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, -464.0, 384.0, 256.3 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 928.0, 512.0 )
    set gg_rct_StreamSound8 = Rect( -32.0, -672.0, 192.0, 672.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 80.0, 0.0, 264.0 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 224.0, 1344.0 )
    set gg_rct_StreamSound9 = Rect( 128.0, -1984.0, 672.0, 992.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 400.0, -496.0, 269.4 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 544.0, 2976.0 )
    set gg_rct_Tunnel01 = Rect( -2848.0, 2560.0, -2656.0, 2784.0 )
    set gg_rct_Tunnel01Area = Rect( -3136.0, 2432.0, -2368.0, 3008.0 )
    set gg_rct_Tunnel01Dust01 = Rect( -2592.0, 2432.0, -2304.0, 2688.0 )
    set gg_rct_Tunnel01Dust02 = Rect( -2880.0, 2656.0, -2624.0, 2912.0 )
    set gg_rct_Tunnel01Dust03 = Rect( -2912.0, 2208.0, -2592.0, 2656.0 )
    set gg_rct_Tunnel01Dust04 = Rect( -3136.0, 2144.0, -2880.0, 2784.0 )
    set gg_rct_Tunnel01MoveTo = Rect( -2880.0, 1984.0, -2240.0, 2432.0 )
    set gg_rct_Tunnel01Rock01 = Rect( -3072.0, 2464.0, -2944.0, 2592.0 )
    set gg_rct_Tunnel01Rock02 = Rect( -2944.0, 2496.0, -2816.0, 2624.0 )
    set gg_rct_Tunnel01Rock03 = Rect( -2816.0, 2464.0, -2688.0, 2592.0 )
    set gg_rct_Tunnel01Rock04 = Rect( -2784.0, 2592.0, -2656.0, 2720.0 )
    set gg_rct_Tunnel01Rock05 = Rect( -2912.0, 2624.0, -2784.0, 2752.0 )
    set gg_rct_Tunnel01Rock06 = Rect( -2848.0, 2752.0, -2720.0, 2880.0 )
    set gg_rct_Tunnel01Rock07 = Rect( -2816.0, 2912.0, -2688.0, 3040.0 )
    set gg_rct_Tunnel01Rock08 = Rect( -2656.0, 2656.0, -2528.0, 2784.0 )
    set gg_rct_Tunnel01Rock09 = Rect( -2656.0, 2528.0, -2528.0, 2656.0 )
    set gg_rct_Tunnel01Rock10 = Rect( -2688.0, 2400.0, -2560.0, 2528.0 )
    set gg_rct_Tunnel01Rock11 = Rect( -2528.0, 2464.0, -2400.0, 2592.0 )
    set gg_rct_Tunnel01Rock12 = Rect( -2528.0, 2592.0, -2400.0, 2720.0 )
    set gg_rct_Tunnel01Rock13 = Rect( -3136.0, 2592.0, -3008.0, 2720.0 )
    set gg_rct_Tunnel02 = Rect( 2656.0, 2624.0, 2848.0, 2848.0 )
    set gg_rct_Tunnel02Area = Rect( 2336.0, 2208.0, 3104.0, 3104.0 )
    set gg_rct_Tunnel02Dust01 = Rect( 2880.0, 2208.0, 3104.0, 2816.0 )
    set gg_rct_Tunnel02Dust02 = Rect( 2592.0, 2080.0, 2880.0, 2720.0 )
    set gg_rct_Tunnel02Dust03 = Rect( 2592.0, 2720.0, 2880.0, 3040.0 )
    set gg_rct_Tunnel02Dust04 = Rect( 2304.0, 2240.0, 2592.0, 2752.0 )
    set gg_rct_Tunnel02MoveTo = Rect( 2144.0, 1760.0, 2752.0, 2208.0 )
    set gg_rct_Tunnel02Rock01 = Rect( 2464.0, 2592.0, 2592.0, 2720.0 )
    set gg_rct_Tunnel02Rock02 = Rect( 2592.0, 2528.0, 2720.0, 2656.0 )
    set gg_rct_Tunnel02Rock03 = Rect( 2432.0, 2464.0, 2560.0, 2592.0 )
    set gg_rct_Tunnel02Rock04 = Rect( 2720.0, 2592.0, 2848.0, 2720.0 )
    set gg_rct_Tunnel02Rock05 = Rect( 2592.0, 2656.0, 2720.0, 2784.0 )
    set gg_rct_Tunnel02Rock06 = Rect( 2624.0, 2784.0, 2752.0, 2912.0 )
    set gg_rct_Tunnel02Rock07 = Rect( 2656.0, 2912.0, 2784.0, 3040.0 )
    set gg_rct_Tunnel02Rock08 = Rect( 2752.0, 2720.0, 2880.0, 2848.0 )
    set gg_rct_Tunnel02Rock09 = Rect( 2848.0, 2592.0, 2976.0, 2720.0 )
    set gg_rct_Tunnel02Rock10 = Rect( 2848.0, 2464.0, 2976.0, 2592.0 )
    set gg_rct_Tunnel02Rock11 = Rect( 2720.0, 2400.0, 2848.0, 2528.0 )
    set gg_rct_Tunnel02Rock12 = Rect( 2976.0, 2560.0, 3104.0, 2688.0 )
    set gg_rct_Tunnel02Rock13 = Rect( 2432.0, 2720.0, 2560.0, 2848.0 )
    set gg_rct_Tunnel03 = Rect( 2912.0, -2176.0, 3104.0, -1952.0 )
    set gg_rct_Tunnel03Area = Rect( 2560.0, -2464.0, 3296.0, -1728.0 )
    set gg_rct_Tunnel03Dust01 = Rect( 3104.0, -2240.0, 3296.0, -1984.0 )
    set gg_rct_Tunnel03Dust02 = Rect( 2656.0, -2464.0, 3104.0, -2112.0 )
    set gg_rct_Tunnel03Dust03 = Rect( 2592.0, -2112.0, 2912.0, -1536.0 )
    set gg_rct_Tunnel03Dust04 = Rect( 2912.0, -1984.0, 3168.0, -1536.0 )
    set gg_rct_Tunnel03MoveTo = Rect( 2112.0, -2208.0, 2560.0, -1632.0 )
    set gg_rct_Tunnel03Rock01 = Rect( 2944.0, -2304.0, 3072.0, -2176.0 )
    set gg_rct_Tunnel03Rock02 = Rect( 2848.0, -2176.0, 2976.0, -2048.0 )
    set gg_rct_Tunnel03Rock03 = Rect( 2912.0, -1984.0, 3040.0, -1856.0 )
    set gg_rct_Tunnel03Rock04 = Rect( 2816.0, -2368.0, 2944.0, -2240.0 )
    set gg_rct_Tunnel03Rock05 = Rect( 3008.0, -2240.0, 3136.0, -2112.0 )
    set gg_rct_Tunnel03Rock06 = Rect( 2976.0, -2112.0, 3104.0, -1984.0 )
    set gg_rct_Tunnel03Rock07 = Rect( 3136.0, -2176.0, 3264.0, -2048.0 )
    set gg_rct_Tunnel03Rock08 = Rect( 2688.0, -2432.0, 2816.0, -2304.0 )
    set gg_rct_Tunnel03Rock09 = Rect( 2784.0, -2048.0, 2912.0, -1920.0 )
    set gg_rct_Tunnel03Rock10 = Rect( 2752.0, -1920.0, 2880.0, -1792.0 )
    set gg_rct_Tunnel03Rock11 = Rect( 2656.0, -2112.0, 2784.0, -1984.0 )
    set gg_rct_Tunnel03Rock12 = Rect( 2720.0, -2240.0, 2848.0, -2112.0 )
    set gg_rct_Tunnel03Rock13 = Rect( 3200.0, -2400.0, 3328.0, -2272.0 )
    set gg_rct_Zone_Orgrimmar_Tripwire = Rect( -3424.0, -1312.0, -3136.0, -896.0 )
    set gg_rct_KoboldExplodeSound = Rect( 2816.0, -2112.0, 2944.0, -1952.0 )
    set gg_rct_GoblinRokhan01 = Rect( -2688.0, -1376.0, -2560.0, -1248.0 )
    set gg_rct_GoblinRokhan02 = Rect( -2016.0, -1376.0, -1888.0, -1248.0 )
    set gg_rct_SapperTarget = Rect( -1504.0, -1440.0, -1280.0, -832.0 )
    set gg_rct_GoblinChen02 = Rect( -2080.0, -1024.0, -1952.0, -896.0 )
    set gg_rct_GoblinChen01 = Rect( -2624.0, -1024.0, -2496.0, -896.0 )
endfunction

//***************************************************************************
//*
//*  Cameras
//*
//***************************************************************************

function CreateCameras takes nothing returns nothing

    set gg_cam_Dwarf_01 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Dwarf_01, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Dwarf_01, CAMERA_FIELD_ROTATION, 27.7, 0.0 )
    call CameraSetupSetField( gg_cam_Dwarf_01, CAMERA_FIELD_ANGLE_OF_ATTACK, 331.4, 0.0 )
    call CameraSetupSetField( gg_cam_Dwarf_01, CAMERA_FIELD_TARGET_DISTANCE, 544.5, 0.0 )
    call CameraSetupSetField( gg_cam_Dwarf_01, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Dwarf_01, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Dwarf_01, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Dwarf_01, -1546.6, 1315.8, 0.0 )

    set gg_cam_Dwarf_02 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Dwarf_02, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Dwarf_02, CAMERA_FIELD_ROTATION, 71.6, 0.0 )
    call CameraSetupSetField( gg_cam_Dwarf_02, CAMERA_FIELD_ANGLE_OF_ATTACK, 328.5, 0.0 )
    call CameraSetupSetField( gg_cam_Dwarf_02, CAMERA_FIELD_TARGET_DISTANCE, 833.5, 0.0 )
    call CameraSetupSetField( gg_cam_Dwarf_02, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Dwarf_02, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Dwarf_02, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Dwarf_02, -1758.4, 1073.8, 0.0 )

    set gg_cam_Goblin01 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Goblin01, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin01, CAMERA_FIELD_ROTATION, 158.8, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin01, CAMERA_FIELD_ANGLE_OF_ATTACK, 349.6, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin01, CAMERA_FIELD_TARGET_DISTANCE, 1127.0, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin01, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin01, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin01, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Goblin01, -2004.9, -1097.8, 0.0 )

    set gg_cam_Goblin02A = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Goblin02A, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin02A, CAMERA_FIELD_ROTATION, 138.2, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin02A, CAMERA_FIELD_ANGLE_OF_ATTACK, 326.1, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin02A, CAMERA_FIELD_TARGET_DISTANCE, 931.4, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin02A, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin02A, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin02A, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Goblin02A, -2648.9, 2704.6, 0.0 )

    set gg_cam_Intro_Skipped = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro_Skipped, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Skipped, CAMERA_FIELD_ROTATION, 90.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Skipped, CAMERA_FIELD_ANGLE_OF_ATTACK, 304.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Skipped, CAMERA_FIELD_TARGET_DISTANCE, 1650.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Skipped, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Skipped, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro_Skipped, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro_Skipped, -1536.0, -1792.0, 0.0 )

    set gg_cam_Tunnel01A = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Tunnel01A, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel01A, CAMERA_FIELD_ROTATION, 120.8, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel01A, CAMERA_FIELD_ANGLE_OF_ATTACK, 325.4, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel01A, CAMERA_FIELD_TARGET_DISTANCE, 769.7, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel01A, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel01A, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel01A, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Tunnel01A, -2677.3, 2674.7, 0.0 )

    set gg_cam_Tunnel01B = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Tunnel01B, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel01B, CAMERA_FIELD_ROTATION, 101.4, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel01B, CAMERA_FIELD_ANGLE_OF_ATTACK, 341.3, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel01B, CAMERA_FIELD_TARGET_DISTANCE, 769.7, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel01B, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel01B, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel01B, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Tunnel01B, -2752.2, 2647.3, 0.0 )

    set gg_cam_Tunnel02 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Tunnel02, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel02, CAMERA_FIELD_ROTATION, 32.0, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel02, CAMERA_FIELD_ANGLE_OF_ATTACK, 351.1, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel02, CAMERA_FIELD_TARGET_DISTANCE, 846.7, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel02, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel02, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel02, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Tunnel02, 2423.3, 2368.2, 0.0 )

    set gg_cam_Tunnel03 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Tunnel03, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel03, CAMERA_FIELD_ROTATION, 34.7, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel03, CAMERA_FIELD_ANGLE_OF_ATTACK, 312.8, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel03, CAMERA_FIELD_TARGET_DISTANCE, 931.4, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel03, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel03, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel03, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Tunnel03, 2867.0, -2195.8, 0.0 )

    set gg_cam_Victory_01 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Victory_01, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Victory_01, CAMERA_FIELD_ROTATION, 85.6, 0.0 )
    call CameraSetupSetField( gg_cam_Victory_01, CAMERA_FIELD_ANGLE_OF_ATTACK, 333.2, 0.0 )
    call CameraSetupSetField( gg_cam_Victory_01, CAMERA_FIELD_TARGET_DISTANCE, 666.0, 0.0 )
    call CameraSetupSetField( gg_cam_Victory_01, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Victory_01, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Victory_01, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Victory_01, -1530.9, 1434.0, 0.0 )

    set gg_cam_Goblin02B = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Goblin02B, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin02B, CAMERA_FIELD_ROTATION, 123.3, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin02B, CAMERA_FIELD_ANGLE_OF_ATTACK, 333.3, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin02B, CAMERA_FIELD_TARGET_DISTANCE, 931.4, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin02B, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin02B, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin02B, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Goblin02B, -2648.9, 2704.6, 0.0 )

    set gg_cam_Goblin01A = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Goblin01A, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin01A, CAMERA_FIELD_ROTATION, 193.7, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin01A, CAMERA_FIELD_ANGLE_OF_ATTACK, 347.6, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin01A, CAMERA_FIELD_TARGET_DISTANCE, 1127.0, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin01A, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin01A, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Goblin01A, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Goblin01A, -2011.3, -1095.3, 0.0 )

    set gg_cam_Tunnel02B = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Tunnel02B, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel02B, CAMERA_FIELD_ROTATION, 32.0, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel02B, CAMERA_FIELD_ANGLE_OF_ATTACK, 351.1, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel02B, CAMERA_FIELD_TARGET_DISTANCE, 525.7, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel02B, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel02B, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Tunnel02B, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Tunnel02B, 2487.4, 2417.7, 0.0 )

    set gg_cam_GoblinStart = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_GoblinStart, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_GoblinStart, CAMERA_FIELD_ROTATION, 34.8, 0.0 )
    call CameraSetupSetField( gg_cam_GoblinStart, CAMERA_FIELD_ANGLE_OF_ATTACK, 312.8, 0.0 )
    call CameraSetupSetField( gg_cam_GoblinStart, CAMERA_FIELD_TARGET_DISTANCE, 1127.0, 0.0 )
    call CameraSetupSetField( gg_cam_GoblinStart, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_GoblinStart, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_GoblinStart, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_GoblinStart, -2431.0, -1167.7, 0.0 )

    set gg_cam_GoblinStartB = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_GoblinStartB, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_GoblinStartB, CAMERA_FIELD_ROTATION, 34.8, 0.0 )
    call CameraSetupSetField( gg_cam_GoblinStartB, CAMERA_FIELD_ANGLE_OF_ATTACK, 312.8, 0.0 )
    call CameraSetupSetField( gg_cam_GoblinStartB, CAMERA_FIELD_TARGET_DISTANCE, 1024.5, 0.0 )
    call CameraSetupSetField( gg_cam_GoblinStartB, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_GoblinStartB, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_GoblinStartB, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_GoblinStartB, -1648.0, -1134.1, 0.0 )

endfunction

//***************************************************************************
//*
//*  Triggers
//*
//***************************************************************************

//===========================================================================
// Trigger: Initialization
//===========================================================================
function Trig_Initialization_Actions takes nothing returns nothing
    call SetCampaignMenuRaceBJ( bj_CAMPAIGN_INDEX_XO )
    call SetAllyColorFilterState( 0 )
    call ConditionalTriggerExecute( gg_trg_Init_01_Players )
    call ConditionalTriggerExecute( gg_trg_Init_02_Units )
    call ConditionalTriggerExecute( gg_trg_Init_03_Music )
    call ConditionalTriggerExecute( gg_trg_Init_04_Environment )
    call ConditionalTriggerExecute( gg_trg_Init_05_Quests )
    call ConditionalTriggerExecute( gg_trg_Init_06a_Hard )
    call ConditionalTriggerExecute( gg_trg_Init_06b_Normal )
    call ConditionalTriggerExecute( gg_trg_Init_06c_Easy )
    call ConditionalTriggerExecute( gg_trg_Init_07_Sync_Data )
    call ConditionalTriggerExecute( gg_trg_Init_08_Spawn_Timers )
    // Play
    call QueuedTriggerAddBJ( gg_trg_FirstTime_MiniCinematic_Q, true )
    call ConditionalTriggerExecute( gg_trg_Disable_Restart_Mission )
endfunction

//===========================================================================
function InitTrig_Initialization takes nothing returns nothing
    set gg_trg_Initialization = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Initialization, function Trig_Initialization_Actions )
endfunction

//===========================================================================
// Trigger: Init 01 Players
//===========================================================================
function Trig_Init_01_Players_Actions takes nothing returns nothing
    // Alliance Settings
    // Player Colors
    call SetPlayerColorBJ( udg_AP1_Player, PLAYER_COLOR_BLUE, true )
    call SetPlayerColorBJ( udg_P4_Goblins, PLAYER_COLOR_RED, true )
    // Hide Excess Players
    call SetPlayerOnScoreScreenBJ( false, udg_P4_Goblins )
    call SetPlayerOnScoreScreenBJ( false, udg_P7_RezStone )
    // Disable Sleeping
    call EnableCreepSleepBJ( false )
endfunction

//===========================================================================
function InitTrig_Init_01_Players takes nothing returns nothing
    set gg_trg_Init_01_Players = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_01_Players, function Trig_Init_01_Players_Actions )
endfunction

//===========================================================================
// Trigger: Init 02 Units
//===========================================================================
function Trig_Init_02_Units_Actions takes nothing returns nothing
    // Heroes
    call SetPlayerHandicapXPBJ( udg_AP1_Player, 20.00 )
    // NPCs
    set udg_GoblinSapper01 = gg_unit_ngsp_0010
    set udg_GoblinSapper02 = gg_unit_ngsp_0007
    set udg_GoblinSapper03 = gg_unit_ngsp_0006
    set udg_GoblinSapper04 = gg_unit_ngsp_0009
    // Creeps
    call SetPlayerHandicapBJ( Player(PLAYER_NEUTRAL_AGGRESSIVE), 50.00 )
    call ConditionalTriggerExecute( gg_trg_Add_Preexisting_Units_to_Packs )
endfunction

//===========================================================================
function InitTrig_Init_02_Units takes nothing returns nothing
    set gg_trg_Init_02_Units = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_02_Units, function Trig_Init_02_Units_Actions )
endfunction

//===========================================================================
// Trigger: Init 03 Music
//===========================================================================
function Trig_Init_03_Music_Actions takes nothing returns nothing
    call SetMapMusicIndexedBJ( "music", 1 )
    set udg_SoundCollapse = gg_snd_BridgeDeath
    set udg_SoundEarthquake = gg_snd_Earthquake
endfunction

//===========================================================================
function InitTrig_Init_03_Music takes nothing returns nothing
    set gg_trg_Init_03_Music = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_03_Music, function Trig_Init_03_Music_Actions )
endfunction

//===========================================================================
// Trigger: Init 04 Environment
//===========================================================================
function Trig_Init_04_Environment_Func022A takes nothing returns nothing
    call UnitSetUsesAltIconBJ( true, GetEnumUnit() )
endfunction

function Trig_Init_04_Environment_Actions takes nothing returns nothing
    // Initial Time Of Day
    call SetTimeOfDay( 24.00 )
    call UseTimeOfDayBJ( false )
    // Turn Off Dust Clouds
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel01Dust01 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel01Dust02 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel01Dust03 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel01Dust04 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel02Dust01 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel02Dust02 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel02Dust03 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel02Dust04 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel03Dust01 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel03Dust02 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel03Dust03 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel03Dust04 )
    // Weather Effects
    // Fog
    // Initial Visibility
    // Special Minimap Icons
    call SetAltMinimapIcon( "UI\\Minimap\\Minimap-Entrance" )
    call ForGroupBJ( GetUnitsOfTypeIdAll('nzin'), function Trig_Init_04_Environment_Func022A )
    // Set Sky
    call SetSkyModel( null )
    // Visibility
    set udg_zVSourceRamp = GetRectCenter(gg_rct_Ramp_Vision_Source)
endfunction

//===========================================================================
function InitTrig_Init_04_Environment takes nothing returns nothing
    set gg_trg_Init_04_Environment = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_04_Environment, function Trig_Init_04_Environment_Actions )
endfunction

//===========================================================================
// Trigger: Init 05 Quests
//===========================================================================
function Trig_Init_05_Quests_Actions takes nothing returns nothing
    // Create Quests
endfunction

//===========================================================================
function InitTrig_Init_05_Quests takes nothing returns nothing
    set gg_trg_Init_05_Quests = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_05_Quests, function Trig_Init_05_Quests_Actions )
endfunction

//===========================================================================
// Trigger: Init 06a Hard
//===========================================================================
function Trig_Init_06a_Hard_Conditions takes nothing returns boolean
    if ( not ( GetGameDifficulty() == MAP_DIFFICULTY_HARD ) ) then
        return false
    endif
    return true
endfunction

function Trig_Init_06a_Hard_Actions takes nothing returns nothing
    // Handicap All Opponents
    call SetPlayerHandicapBJ( Player(PLAYER_NEUTRAL_AGGRESSIVE), 70.00 )
    // Heroes
    call SetPlayerHandicapXPBJ( udg_AP1_Player, 15.00 )
endfunction

//===========================================================================
function InitTrig_Init_06a_Hard takes nothing returns nothing
    set gg_trg_Init_06a_Hard = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Init_06a_Hard, Condition( function Trig_Init_06a_Hard_Conditions ) )
    call TriggerAddAction( gg_trg_Init_06a_Hard, function Trig_Init_06a_Hard_Actions )
endfunction

//===========================================================================
// Trigger: Init 06b Normal
//===========================================================================
function Trig_Init_06b_Normal_Conditions takes nothing returns boolean
    if ( not ( GetGameDifficulty() == MAP_DIFFICULTY_NORMAL ) ) then
        return false
    endif
    return true
endfunction

function Trig_Init_06b_Normal_Actions takes nothing returns nothing
    // Handicap All Opponents
    call SetPlayerHandicapBJ( Player(PLAYER_NEUTRAL_AGGRESSIVE), 50.00 )
endfunction

//===========================================================================
function InitTrig_Init_06b_Normal takes nothing returns nothing
    set gg_trg_Init_06b_Normal = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Init_06b_Normal, Condition( function Trig_Init_06b_Normal_Conditions ) )
    call TriggerAddAction( gg_trg_Init_06b_Normal, function Trig_Init_06b_Normal_Actions )
endfunction

//===========================================================================
// Trigger: Init 06c Easy
//===========================================================================
function Trig_Init_06c_Easy_Conditions takes nothing returns boolean
    if ( not ( GetGameDifficulty() == MAP_DIFFICULTY_EASY ) ) then
        return false
    endif
    return true
endfunction

function Trig_Init_06c_Easy_Actions takes nothing returns nothing
    // Handicap All Opponents
    call SetPlayerHandicapBJ( Player(PLAYER_NEUTRAL_AGGRESSIVE), 35.00 )
endfunction

//===========================================================================
function InitTrig_Init_06c_Easy takes nothing returns nothing
    set gg_trg_Init_06c_Easy = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Init_06c_Easy, Condition( function Trig_Init_06c_Easy_Conditions ) )
    call TriggerAddAction( gg_trg_Init_06c_Easy, function Trig_Init_06c_Easy_Actions )
endfunction

//===========================================================================
// Trigger: Init 07 Sync Data
//===========================================================================
function Trig_Init_07_Sync_Data_Actions takes nothing returns nothing
    // Load Submap Transition Data
    call ConditionalTriggerExecute( gg_trg_Init_Zones )
    call ConditionalTriggerExecute( gg_trg_Import_All )
    // Sync Quests
    call ConditionalTriggerExecute( gg_trg_Sync_Quests )
endfunction

//===========================================================================
function InitTrig_Init_07_Sync_Data takes nothing returns nothing
    set gg_trg_Init_07_Sync_Data = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_07_Sync_Data, function Trig_Init_07_Sync_Data_Actions )
endfunction

//===========================================================================
// Trigger: Init 08 Spawn Timers
//===========================================================================
function Trig_Init_08_Spawn_Timers_Actions takes nothing returns nothing
    // Set Timer Length Variables
    set udg_CommonSpawnTimerLength = 15.00
    set udg_RareSpawnTimerLength = 60.00
    set udg_SpawnPackTotal = 31
    set udg_UnitRespawnTime = 300
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = udg_SpawnPackTotal
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        set udg_PackRespawnTimeArray[GetForLoopIndexA()] = udg_UnitRespawnTime
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
    // Initialize Timers
    call StartTimerBJ( udg_SpawnTimerCommon01, true, udg_CommonSpawnTimerLength )
    call StartTimerBJ( udg_SpawnTimerRare01, true, udg_RareSpawnTimerLength )
    call PolledWait( 2.00 )
    call StartTimerBJ( udg_SpawnTimerCommon02, true, udg_CommonSpawnTimerLength )
    call PolledWait( 2.00 )
    call StartTimerBJ( udg_SpawnTimerCommon03, true, udg_CommonSpawnTimerLength )
    call PolledWait( 2.00 )
    call StartTimerBJ( udg_SpawnTimerCommon04, true, udg_CommonSpawnTimerLength )
    call PolledWait( 2.00 )
    call StartTimerBJ( udg_SpawnTimerCommon05, true, udg_CommonSpawnTimerLength )
    call PolledWait( 22.00 )
    call StartTimerBJ( udg_SpawnTimerRare02, true, udg_RareSpawnTimerLength )
endfunction

//===========================================================================
function InitTrig_Init_08_Spawn_Timers takes nothing returns nothing
    set gg_trg_Init_08_Spawn_Timers = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_08_Spawn_Timers, function Trig_Init_08_Spawn_Timers_Actions )
endfunction

//===========================================================================
// Trigger: FirstTime MiniCinematic Q
//===========================================================================
function Trig_FirstTime_MiniCinematic_Q_Actions takes nothing returns nothing
    set udg_InCinematic = true
    call CinematicModeBJ( true, GetPlayersAll() )
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 0.00, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.50 )
    // Center camera on the hero
    call PanCameraToTimedLocForPlayer( udg_AP1_Player, GetUnitLoc(udg_Rexxar), 0 )
    call SelectUnitForPlayerSingle( udg_Rexxar, udg_AP1_Player )
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // Cleanup
    call CinematicModeExBJ( false, GetPlayersAll(), 0.30 )
    call TriggerSleepAction( 0.20 )
    // Fade In
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 0.50, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.50 )
    set udg_InCinematic = false
    call ConditionalTriggerExecute( gg_trg_FirstTime_Gameplay )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_FirstTime_MiniCinematic_Q takes nothing returns nothing
    set gg_trg_FirstTime_MiniCinematic_Q = CreateTrigger(  )
    call TriggerAddAction( gg_trg_FirstTime_MiniCinematic_Q, function Trig_FirstTime_MiniCinematic_Q_Actions )
endfunction

//===========================================================================
// Trigger: FirstTime Gameplay
//===========================================================================
function Trig_FirstTime_Gameplay_Actions takes nothing returns nothing
    // Do initial gameplay stuff, like quest messages and hints
endfunction

//===========================================================================
function InitTrig_FirstTime_Gameplay takes nothing returns nothing
    set gg_trg_FirstTime_Gameplay = CreateTrigger(  )
    call TriggerAddAction( gg_trg_FirstTime_Gameplay, function Trig_FirstTime_Gameplay_Actions )
endfunction

//===========================================================================
// Trigger: Cinematic Revival
//
// Before running this in a cinematic, do the following:
//   - Set "RevivalHero" to the hero you wish to revive.
//   - Set "RevivalSpot" to the place at which you wish the hero to be revived.
// After running this, set the unit facing for the revived hero.
// After the cinematic, move the hero instantly to RevivalReturnSpot.
//===========================================================================
function Trig_Cinematic_Revival_Func003001 takes nothing returns boolean
    return ( IsUnitAliveBJ(udg_RevivalHero) == true )
endfunction

function Trig_Cinematic_Revival_Func006002001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Cinematic_Revival_Func006002001002002001001 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'halt' )
endfunction

function Trig_Cinematic_Revival_Func006002001002002001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'oalt' )
endfunction

function Trig_Cinematic_Revival_Func006002001002002001 takes nothing returns boolean
    return GetBooleanOr( Trig_Cinematic_Revival_Func006002001002002001001(), Trig_Cinematic_Revival_Func006002001002002001002() )
endfunction

function Trig_Cinematic_Revival_Func006002001002002002001 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'uaod' )
endfunction

function Trig_Cinematic_Revival_Func006002001002002002002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'eate' )
endfunction

function Trig_Cinematic_Revival_Func006002001002002002 takes nothing returns boolean
    return GetBooleanOr( Trig_Cinematic_Revival_Func006002001002002002001(), Trig_Cinematic_Revival_Func006002001002002002002() )
endfunction

function Trig_Cinematic_Revival_Func006002001002002 takes nothing returns boolean
    return GetBooleanOr( Trig_Cinematic_Revival_Func006002001002002001(), Trig_Cinematic_Revival_Func006002001002002002() )
endfunction

function Trig_Cinematic_Revival_Func006002001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Cinematic_Revival_Func006002001002001(), Trig_Cinematic_Revival_Func006002001002002() )
endfunction

function Trig_Cinematic_Revival_Func007001 takes nothing returns boolean
    return ( udg_RevivalAltar != null )
endfunction

function Trig_Cinematic_Revival_Actions takes nothing returns nothing
    set udg_RevivalReturnSpot = GetUnitLoc(udg_RevivalHero)
    call SetUnitPositionLoc( udg_RevivalHero, udg_RevivalSpot )
    if ( Trig_Cinematic_Revival_Func003001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ReviveHeroLoc( udg_RevivalHero, udg_RevivalSpot, false )
    set udg_RevivalReturnSpot = udg_RevivalSpot
    set udg_RevivalAltar = GroupPickRandomUnit(GetUnitsOfPlayerMatching(GetOwningPlayer(udg_RevivalHero), Condition(function Trig_Cinematic_Revival_Func006002001002)))
    if ( Trig_Cinematic_Revival_Func007001() ) then
        set udg_RevivalReturnSpot = OffsetLocation(GetUnitLoc(udg_RevivalAltar), 0, -128.00)
    else
        call DoNothing(  )
    endif
endfunction

//===========================================================================
function InitTrig_Cinematic_Revival takes nothing returns nothing
    set gg_trg_Cinematic_Revival = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Cinematic_Revival, function Trig_Cinematic_Revival_Actions )
endfunction

//===========================================================================
// Trigger: Resurrection Effect
//===========================================================================
function Trig_Resurrection_Effect_Conditions takes nothing returns boolean
    if ( not ( IsUnitType(GetDyingUnit(), UNIT_TYPE_HERO) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Resurrection_Effect_Actions takes nothing returns nothing
    // Local variables used - don't add waits without consulting Mik
    local location revSpot
    set udg_ResurrectionSpotLocal = udg_ResurrectionSpot
    set revSpot = udg_ResurrectionSpotLocal
    call PolledWait( 6.00 )
    set udg_ResurrectionSpotLocal = revSpot
    call PingMinimapLocForForce( GetPlayersAll(), udg_ResurrectionSpotLocal, 5.00 )
    call SetCameraQuickPositionLocForPlayer( udg_AP1_Player, udg_ResurrectionSpotLocal )
    call ReviveHeroLoc( GetDyingUnit(), udg_ResurrectionSpotLocal, true )
endfunction

//===========================================================================
function InitTrig_Resurrection_Effect takes nothing returns nothing
    set gg_trg_Resurrection_Effect = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Resurrection_Effect, Player(0), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Resurrection_Effect, Condition( function Trig_Resurrection_Effect_Conditions ) )
    call TriggerAddAction( gg_trg_Resurrection_Effect, function Trig_Resurrection_Effect_Actions )
endfunction

//===========================================================================
// Trigger: Resurrection Stone Update Visibility
//===========================================================================
function Trig_Resurrection_Stone_Update_Visibility_Func001C takes nothing returns boolean
    if ( not ( udg_ResurrectionVMExists == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Resurrection_Stone_Update_Visibility_Actions takes nothing returns nothing
    if ( Trig_Resurrection_Stone_Update_Visibility_Func001C() ) then
        call DestroyFogModifier( udg_ResurrectionVM )
    else
    endif
    call CreateFogModifierRadiusLocBJ( true, udg_AP1_Player, FOG_OF_WAR_VISIBLE, udg_ResurrectionStoneSpot, 400.00 )
    set udg_ResurrectionVM = GetLastCreatedFogModifier()
    set udg_ResurrectionVMExists = true
endfunction

//===========================================================================
function InitTrig_Resurrection_Stone_Update_Visibility takes nothing returns nothing
    set gg_trg_Resurrection_Stone_Update_Visibility = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Resurrection_Stone_Update_Visibility, function Trig_Resurrection_Stone_Update_Visibility_Actions )
endfunction

//===========================================================================
// Trigger: Resurrection Stone Picked Effect
//===========================================================================
function Trig_Resurrection_Stone_Picked_Effect_Actions takes nothing returns nothing
    // Local variables used - don't add waits without consulting Mik
    local effect changeEffect
    call PingMinimapLocForForceEx( GetPlayersAll(), udg_ResurrectionStoneSpot, 3.00, bj_MINIMAPPINGSTYLE_SIMPLE, 100, 80.00, 20.00 )
    call SetCameraQuickPositionLocForPlayer( udg_AP1_Player, udg_ResurrectionStoneSpot )
    call AddSpecialEffectLocBJ( udg_ResurrectionStoneSpot, "Abilities\\Spells\\Items\\TomeOfRetraining\\TomeOfRetrainingCaster.mdl" )
    set udg_ResurrectionChangeEffectLocal = GetLastCreatedEffectBJ()
    call PlaySoundAtPointBJ( gg_snd_ShimmeringPortalEntrance, 100, udg_ResurrectionStoneSpot, 0 )
    set changeEffect = udg_ResurrectionChangeEffectLocal
    call PolledWait( 4.00 )
    set udg_ResurrectionChangeEffectLocal = changeEffect
    call DestroyEffectBJ( udg_ResurrectionChangeEffectLocal )
endfunction

//===========================================================================
function InitTrig_Resurrection_Stone_Picked_Effect takes nothing returns nothing
    set gg_trg_Resurrection_Stone_Picked_Effect = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Resurrection_Stone_Picked_Effect, function Trig_Resurrection_Stone_Picked_Effect_Actions )
endfunction

//===========================================================================
// Trigger: Approach Resurrection Stone 01
//===========================================================================
function Trig_Approach_Resurrection_Stone_01_Func005Func001001 takes nothing returns boolean
    return ( udg_ChenInParty == true )
endfunction

function Trig_Approach_Resurrection_Stone_01_Func005Func001002 takes nothing returns boolean
    return ( GetEnteringUnit() == udg_Chen )
endfunction

function Trig_Approach_Resurrection_Stone_01_Func005Func002001 takes nothing returns boolean
    return ( udg_RexxarInParty == true )
endfunction

function Trig_Approach_Resurrection_Stone_01_Func005Func002002 takes nothing returns boolean
    return ( GetEnteringUnit() == udg_Rexxar )
endfunction

function Trig_Approach_Resurrection_Stone_01_Func005Func003001 takes nothing returns boolean
    return ( udg_RokhanInParty == true )
endfunction

function Trig_Approach_Resurrection_Stone_01_Func005Func003002 takes nothing returns boolean
    return ( GetEnteringUnit() == udg_Rokhan )
endfunction

function Trig_Approach_Resurrection_Stone_01_Func005C takes nothing returns boolean
    if ( GetBooleanAnd( Trig_Approach_Resurrection_Stone_01_Func005Func001001(), Trig_Approach_Resurrection_Stone_01_Func005Func001002() ) ) then
        return true
    endif
    if ( GetBooleanAnd( Trig_Approach_Resurrection_Stone_01_Func005Func002001(), Trig_Approach_Resurrection_Stone_01_Func005Func002002() ) ) then
        return true
    endif
    if ( GetBooleanAnd( Trig_Approach_Resurrection_Stone_01_Func005Func003001(), Trig_Approach_Resurrection_Stone_01_Func005Func003002() ) ) then
        return true
    endif
    return false
endfunction

function Trig_Approach_Resurrection_Stone_01_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_ResurrectionStonePicked != 1 ) ) then
        return false
    endif
    if ( not Trig_Approach_Resurrection_Stone_01_Func005C() ) then
        return false
    endif
    return true
endfunction

function Trig_Approach_Resurrection_Stone_01_Actions takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_Pick_Resurrection_Stone_01 )
    call ConditionalTriggerExecute( gg_trg_Resurrection_Stone_Picked_Effect )
endfunction

//===========================================================================
function InitTrig_Approach_Resurrection_Stone_01 takes nothing returns nothing
    set gg_trg_Approach_Resurrection_Stone_01 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Approach_Resurrection_Stone_01, gg_rct_Resurrection_Stone_01_Tripwire )
    call TriggerAddCondition( gg_trg_Approach_Resurrection_Stone_01, Condition( function Trig_Approach_Resurrection_Stone_01_Conditions ) )
    call TriggerAddAction( gg_trg_Approach_Resurrection_Stone_01, function Trig_Approach_Resurrection_Stone_01_Actions )
endfunction

//===========================================================================
// Trigger: Pick Resurrection Stone 01
//===========================================================================
function Trig_Pick_Resurrection_Stone_01_Conditions takes nothing returns boolean
    if ( not ( udg_ResurrectionStonePicked != 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pick_Resurrection_Stone_01_Actions takes nothing returns nothing
    set udg_ResurrectionStonePicked = 1
    // Update
    set udg_ResurrectionStoneSpot = GetRectCenter(gg_rct_Resurrection_Stone_01)
    set udg_ResurrectionSpot = GetRectCenter(gg_rct_Resurrection_Stone_01_Spot)
    // Animation
    call SetUnitAnimation( udg_ResurrectionStone, "stand" )
    set udg_ResurrectionStone = gg_unit_nbse_0091
    call SetUnitAnimation( udg_ResurrectionStone, "stand alternate" )
    // Effects
    call ConditionalTriggerExecute( gg_trg_Resurrection_Stone_Update_Visibility )
endfunction

//===========================================================================
function InitTrig_Pick_Resurrection_Stone_01 takes nothing returns nothing
    set gg_trg_Pick_Resurrection_Stone_01 = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Pick_Resurrection_Stone_01, Condition( function Trig_Pick_Resurrection_Stone_01_Conditions ) )
    call TriggerAddAction( gg_trg_Pick_Resurrection_Stone_01, function Trig_Pick_Resurrection_Stone_01_Actions )
endfunction

//===========================================================================
// Trigger: Create Default Rexxar
//
// Before running this trigger, set "CreateDefaultSpot" to the location where you want the hero to be created.
//===========================================================================
function Trig_Create_Default_Rexxar_Actions takes nothing returns nothing
    // Create Default Hero
    call CreateNUnitsAtLoc( 1, 'Orex', udg_AP1_Player, udg_CreateDefaultSpot, 0.00 )
    call ModifyHeroSkillPoints( GetLastCreatedUnit(), bj_MODIFYMETHOD_ADD, 1 )
    call SelectHeroSkill( GetLastCreatedUnit(), 'Arsg' )
    call SelectHeroSkill( GetLastCreatedUnit(), 'Arsq' )
    set udg_Rexxar = GetLastCreatedUnit()
endfunction

//===========================================================================
function InitTrig_Create_Default_Rexxar takes nothing returns nothing
    set gg_trg_Create_Default_Rexxar = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Create_Default_Rexxar, function Trig_Create_Default_Rexxar_Actions )
endfunction

//===========================================================================
// Trigger: Create Default Rokhan
//
// Before running this trigger, set "CreateDefaultSpot" to the location where you want the hero to be created.
//===========================================================================
function Trig_Create_Default_Rokhan_Actions takes nothing returns nothing
    // Create Default Hero
    call CreateNUnitsAtLoc( 1, 'Orkn', udg_AP1_Player, udg_CreateDefaultSpot, 0.00 )
    call ModifyHeroSkillPoints( GetLastCreatedUnit(), bj_MODIFYMETHOD_ADD, 1 )
    call SelectHeroSkill( GetLastCreatedUnit(), 'ANhw' )
    set udg_Rokhan = GetLastCreatedUnit()
endfunction

//===========================================================================
function InitTrig_Create_Default_Rokhan takes nothing returns nothing
    set gg_trg_Create_Default_Rokhan = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Create_Default_Rokhan, function Trig_Create_Default_Rokhan_Actions )
endfunction

//===========================================================================
// Trigger: Create Default Chen
//
// Before running this trigger, set "CreateDefaultSpot" to the location where you want the hero to be created.
//===========================================================================
function Trig_Create_Default_Chen_Actions takes nothing returns nothing
    // Create Default Hero
    call CreateNUnitsAtLoc( 1, 'Nsjs', udg_AP1_Player, udg_CreateDefaultSpot, 0.00 )
    call ModifyHeroSkillPoints( GetLastCreatedUnit(), bj_MODIFYMETHOD_ADD, 1 )
    call SelectHeroSkill( GetLastCreatedUnit(), 'ANcf' )
    set udg_Chen = GetLastCreatedUnit()
endfunction

//===========================================================================
function InitTrig_Create_Default_Chen takes nothing returns nothing
    set gg_trg_Create_Default_Chen = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Create_Default_Chen, function Trig_Create_Default_Chen_Actions )
endfunction

//===========================================================================
// Trigger: Experience Cap Rexxar
//===========================================================================
function Trig_Experience_Cap_Rexxar_Conditions takes nothing returns boolean
    if ( not ( GetLevelingUnit() == udg_Rexxar ) ) then
        return false
    endif
    if ( not ( GetHeroLevel(GetLevelingUnit()) >= 8 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Experience_Cap_Rexxar_Actions takes nothing returns nothing
    call SuspendHeroXPBJ( false, udg_Rexxar )
    set udg_ExpDisabledForRexxar = true
endfunction

//===========================================================================
function InitTrig_Experience_Cap_Rexxar takes nothing returns nothing
    set gg_trg_Experience_Cap_Rexxar = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Experience_Cap_Rexxar, Player(0), EVENT_PLAYER_HERO_LEVEL )
    call TriggerAddCondition( gg_trg_Experience_Cap_Rexxar, Condition( function Trig_Experience_Cap_Rexxar_Conditions ) )
    call TriggerAddAction( gg_trg_Experience_Cap_Rexxar, function Trig_Experience_Cap_Rexxar_Actions )
endfunction

//===========================================================================
// Trigger: Experience Cap Rokhan
//===========================================================================
function Trig_Experience_Cap_Rokhan_Conditions takes nothing returns boolean
    if ( not ( GetLevelingUnit() == udg_Rokhan ) ) then
        return false
    endif
    if ( not ( GetHeroLevel(GetLevelingUnit()) >= 8 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Experience_Cap_Rokhan_Actions takes nothing returns nothing
    call SuspendHeroXPBJ( false, udg_Rokhan )
    set udg_ExpDisabledForRokhan = true
endfunction

//===========================================================================
function InitTrig_Experience_Cap_Rokhan takes nothing returns nothing
    set gg_trg_Experience_Cap_Rokhan = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Experience_Cap_Rokhan, Player(0), EVENT_PLAYER_HERO_LEVEL )
    call TriggerAddCondition( gg_trg_Experience_Cap_Rokhan, Condition( function Trig_Experience_Cap_Rokhan_Conditions ) )
    call TriggerAddAction( gg_trg_Experience_Cap_Rokhan, function Trig_Experience_Cap_Rokhan_Actions )
endfunction

//===========================================================================
// Trigger: Experience Cap Chen
//===========================================================================
function Trig_Experience_Cap_Chen_Conditions takes nothing returns boolean
    if ( not ( GetLevelingUnit() == udg_Chen ) ) then
        return false
    endif
    if ( not ( GetHeroLevel(GetLevelingUnit()) >= 8 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Experience_Cap_Chen_Actions takes nothing returns nothing
    call SuspendHeroXPBJ( false, udg_Chen )
    set udg_ExpDisabledForChen = true
endfunction

//===========================================================================
function InitTrig_Experience_Cap_Chen takes nothing returns nothing
    set gg_trg_Experience_Cap_Chen = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Experience_Cap_Chen, Player(0), EVENT_PLAYER_HERO_LEVEL )
    call TriggerAddCondition( gg_trg_Experience_Cap_Chen, Condition( function Trig_Experience_Cap_Chen_Conditions ) )
    call TriggerAddAction( gg_trg_Experience_Cap_Chen, function Trig_Experience_Cap_Chen_Actions )
endfunction

//===========================================================================
// Trigger: Next Level Prep
//===========================================================================
function Trig_Next_Level_Prep_Func005C takes nothing returns boolean
    if ( not ( udg_RexxarInParty == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Next_Level_Prep_Func007C takes nothing returns boolean
    if ( not ( udg_RokhanInParty == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Next_Level_Prep_Func009C takes nothing returns boolean
    if ( not ( udg_ChenInParty == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Next_Level_Prep_Actions takes nothing returns nothing
    // Remove Quest Items
    // Save Heroes
    call InitGameCacheBJ( "Campaigns.w3v" )
    call StoreBooleanBJ( udg_RexxarInParty, "RexxarInParty", "OrcX02", GetLastCreatedGameCacheBJ() )
    if ( Trig_Next_Level_Prep_Func005C() ) then
        call StoreUnitBJ( udg_Rexxar, "Rexxar", "OrcX02", GetLastCreatedGameCacheBJ() )
    else
    endif
    call StoreBooleanBJ( udg_RokhanInParty, "RokhanInParty", "OrcX02", GetLastCreatedGameCacheBJ() )
    if ( Trig_Next_Level_Prep_Func007C() ) then
        call StoreUnitBJ( udg_Rokhan, "Rokhan", "OrcX02", GetLastCreatedGameCacheBJ() )
    else
    endif
    call StoreBooleanBJ( udg_ChenInParty, "ChenInParty", "OrcX02", GetLastCreatedGameCacheBJ() )
    if ( Trig_Next_Level_Prep_Func009C() ) then
        call StoreUnitBJ( udg_Chen, "Chen", "OrcX02", GetLastCreatedGameCacheBJ() )
    else
    endif
    call SaveGameCacheBJ( GetLastCreatedGameCacheBJ() )
    // Enable Missions, Campaigns, Cinematics
endfunction

//===========================================================================
function InitTrig_Next_Level_Prep takes nothing returns nothing
    set gg_trg_Next_Level_Prep = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Next_Level_Prep, function Trig_Next_Level_Prep_Actions )
endfunction

//===========================================================================
// Trigger: Next Level Run
//===========================================================================
function Trig_Next_Level_Run_Actions takes nothing returns nothing
    // Set Next Level and Victory
    call CustomVictoryBJ( udg_AP1_Player, true, true )
endfunction

//===========================================================================
function InitTrig_Next_Level_Run takes nothing returns nothing
    set gg_trg_Next_Level_Run = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Next_Level_Run, function Trig_Next_Level_Run_Actions )
endfunction

//===========================================================================
// Trigger: Victory Cheat
//===========================================================================
function Trig_Victory_Cheat_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Victory_Cheat_Actions takes nothing returns nothing
    set udg_GameOver = true
    call ConditionalTriggerExecute( gg_trg_Next_Level_Prep )
    call ConditionalTriggerExecute( gg_trg_Next_Level_Run )
endfunction

//===========================================================================
function InitTrig_Victory_Cheat takes nothing returns nothing
    set gg_trg_Victory_Cheat = CreateTrigger(  )
    call TriggerRegisterPlayerEventVictory( gg_trg_Victory_Cheat, Player(0) )
    call TriggerAddCondition( gg_trg_Victory_Cheat, Condition( function Trig_Victory_Cheat_Conditions ) )
    call TriggerAddAction( gg_trg_Victory_Cheat, function Trig_Victory_Cheat_Actions )
endfunction

//===========================================================================
// Trigger: Defeat Cheat
//===========================================================================
function Trig_Defeat_Cheat_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Defeat_Cheat_Actions takes nothing returns nothing
    set udg_GameOver = true
    call CustomDefeatBJ( udg_AP1_Player, "TRIGSTR_001" )
endfunction

//===========================================================================
function InitTrig_Defeat_Cheat takes nothing returns nothing
    set gg_trg_Defeat_Cheat = CreateTrigger(  )
    call TriggerRegisterPlayerEventDefeat( gg_trg_Defeat_Cheat, Player(0) )
    call TriggerAddCondition( gg_trg_Defeat_Cheat, Condition( function Trig_Defeat_Cheat_Conditions ) )
    call TriggerAddAction( gg_trg_Defeat_Cheat, function Trig_Defeat_Cheat_Actions )
endfunction

//===========================================================================
// Trigger: User Save
//===========================================================================
function Trig_User_Save_Func003Func001C takes nothing returns boolean
    if ( not ( udg_ZoneSaves[GetForLoopIndexA()] != "" ) ) then
        return false
    endif
    return true
endfunction

function Trig_User_Save_Actions takes nothing returns nothing
    // Back up the zone-saves
    set udg_SaveFolder = ( udg_BlizzardFolder + GetSaveBasicFilename() )
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = udg_ZoneCount
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        if ( Trig_User_Save_Func003Func001C() ) then
            set udg_TempPathA = ( ( udg_ZoneFolder + "\\" ) + udg_ZoneSaves[GetForLoopIndexA()] )
            set udg_TempPathB = ( ( udg_SaveFolder + "\\" ) + udg_ZoneSaves[GetForLoopIndexA()] )
            call CopySaveGameBJ( udg_TempPathA, udg_TempPathB )
        else
        endif
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
endfunction

//===========================================================================
function InitTrig_User_Save takes nothing returns nothing
    set gg_trg_User_Save = CreateTrigger(  )
    call TriggerRegisterGameSavedEventBJ( gg_trg_User_Save )
    call TriggerAddAction( gg_trg_User_Save, function Trig_User_Save_Actions )
endfunction

//===========================================================================
// Trigger: User Load
//===========================================================================
function Trig_User_Load_Conditions takes nothing returns boolean
    if ( not ( IsMapFlagSet(MAP_RELOADED) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_User_Load_Func004Func001C takes nothing returns boolean
    if ( not ( udg_ZoneSaves[GetForLoopIndexA()] == udg_NULLString ) ) then
        return false
    endif
    return true
endfunction

function Trig_User_Load_Func004Func002C takes nothing returns boolean
    if ( not ( udg_ZoneSaves[GetForLoopIndexA()] != "" ) ) then
        return false
    endif
    return true
endfunction

function Trig_User_Load_Actions takes nothing returns nothing
    // Clear out the zone-saves
    call RemoveSaveDirectoryBJ( udg_ZoneFolder )
    // Restore the zone-saves
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = udg_ZoneCount
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        if ( Trig_User_Load_Func004Func001C() ) then
            set udg_ZoneSaves[GetForLoopIndexA()] = ""
        else
        endif
        if ( Trig_User_Load_Func004Func002C() ) then
            set udg_TempPathA = ( ( udg_SaveFolder + "\\" ) + udg_ZoneSaves[GetForLoopIndexA()] )
            set udg_TempPathB = ( ( udg_ZoneFolder + "\\" ) + udg_ZoneSaves[GetForLoopIndexA()] )
            call CopySaveGameBJ( udg_TempPathA, udg_TempPathB )
        else
        endif
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
    call ConditionalTriggerExecute( gg_trg_Disable_Restart_Mission )
endfunction

//===========================================================================
function InitTrig_User_Load takes nothing returns nothing
    set gg_trg_User_Load = CreateTrigger(  )
    call TriggerRegisterGameLoadedEventBJ( gg_trg_User_Load )
    call TriggerAddCondition( gg_trg_User_Load, Condition( function Trig_User_Load_Conditions ) )
    call TriggerAddAction( gg_trg_User_Load, function Trig_User_Load_Actions )
endfunction

//===========================================================================
// Trigger: Init Zones
//
// Call this at map initialization, before attempting to import transition data.
//===========================================================================
function Trig_Init_Zones_Actions takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_Identify_Zone )
    // Construct a list of zone map names
    set udg_ZoneCount = 5
    set udg_ZoneMapPath = "Maps\\FrozenThrone\\Campaign\\"
    set udg_ZoneMapExt = ".w3x"
    set udg_ZoneMaps[1] = "OrcX01"
    set udg_ZoneMaps[2] = "OrcX01_02"
    set udg_ZoneMaps[3] = "OrcX01_03"
    set udg_ZoneMaps[4] = "OrcX01_04"
    set udg_ZoneMaps[5] = "OrcX01_05"
    set udg_BlizzardFolder = "Blizzard\\"
    set udg_ZoneFolder = ( udg_BlizzardFolder + "Zones" )
    set udg_SaveExt = ".w3z"
endfunction

//===========================================================================
function InitTrig_Init_Zones takes nothing returns nothing
    set gg_trg_Init_Zones = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Init_Zones, function Trig_Init_Zones_Actions )
endfunction

//===========================================================================
// Trigger: Transition
//
// Set the following before running this trigger:  TransitionTarget, TransitionTargetArea
//===========================================================================
function Trig_Transition_Actions takes nothing returns nothing
    set udg_TransitionSource = udg_Zone
    set udg_ZoneSaves[udg_TransitionSource] = ( udg_ZoneMaps[udg_TransitionSource] + udg_SaveExt )
    call ConditionalTriggerExecute( gg_trg_Prep_For_Save )
    call ConditionalTriggerExecute( gg_trg_Export_All )
    call ConditionalTriggerExecute( gg_trg_Perform_Map_Transition )
endfunction

//===========================================================================
function InitTrig_Transition takes nothing returns nothing
    set gg_trg_Transition = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Transition, function Trig_Transition_Actions )
endfunction

//===========================================================================
// Trigger: Export All
//===========================================================================
function Trig_Export_All_Actions takes nothing returns nothing
    // Create The Game Cache
    call InitGameCacheBJ( "Campaigns.w3v" )
    call FlushStoredMissionBJ( udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    // Export ZoneSaves (saved-game filenames)
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = udg_ZoneCount
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        call StoreStringBJ( udg_ZoneSaves[GetForLoopIndexA()], ( "ZoneSave" + I2S(GetForLoopIndexA()) ), udg_TransitionKey, GetLastCreatedGameCacheBJ() )
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
    // Export Transition Data
    call StoreIntegerBJ( udg_TransitionSource, "TransitionSource", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreIntegerBJ( udg_TransitionTargetArea, "TransitionTargetArea", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    // Export Hero and Mission Data
    call ConditionalTriggerExecute( gg_trg_Export_Mission_Data )
    call ConditionalTriggerExecute( gg_trg_Export_Heroes )
    // Save The Game Cache
    call SaveGameCacheBJ( GetLastCreatedGameCacheBJ() )
endfunction

//===========================================================================
function InitTrig_Export_All takes nothing returns nothing
    set gg_trg_Export_All = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Export_All, function Trig_Export_All_Actions )
endfunction

//===========================================================================
// Trigger: Export Mission Data
//===========================================================================
function Trig_Export_Mission_Data_Actions takes nothing returns nothing
    // Hero Flags
    call StoreBooleanBJ( udg_RexxarInParty, "TransitionRexxarInParty", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreBooleanBJ( udg_RokhanInParty, "TransitionRokhanInParty", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreBooleanBJ( udg_ChenInParty, "TransitionChenInParty", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    // Hero Experience Caps
    call StoreBooleanBJ( udg_ExpDisabledForRexxar, "ExpDisabledForRexxar", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreBooleanBJ( udg_ExpDisabledForRokhan, "ExpDisabledForRokhan", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreBooleanBJ( udg_ExpDisabledForChen, "ExpDisabledForChen", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    // Required Quests
    call StoreIntegerBJ( udg_QuestDestroyHumansProgress, "QuestDestroyHumansProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreIntegerBJ( udg_QuestDyingWishProgress, "QuestDyingWishProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreIntegerBJ( udg_QuestEarnKeepProgress, "QuestEarnKeepProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreBooleanBJ( udg_QuestEarnKeepProgress1, "QuestEarnKeepProgress1", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreBooleanBJ( udg_QuestEarnKeepProgress2, "QuestEarnKeepProgress2", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreBooleanBJ( udg_QuestEarnKeepProgress3, "QuestEarnKeepProgress3", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreIntegerBJ( udg_QuestHarpyThreatProgress, "QuestHarpyThreatProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreIntegerBJ( udg_QuestSealTunnelProgress, "QuestSealTunnelProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreIntegerBJ( udg_QuestSignalPyresProgress, "QuestSignalPyresProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreIntegerBJ( udg_QuestSinkFleetProgress, "QuestSinkFleetProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreIntegerBJ( udg_QuestSummitProgress, "QuestSummitProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreIntegerBJ( udg_QuestSurveyProgress, "QuestSurveyProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreIntegerBJ( udg_QuestThunderHerbProgress, "QuestThunderHerbProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreIntegerBJ( udg_QuestWarnTrollsProgress, "QuestWarnTrollsProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    // Optional Quests
    call StoreIntegerBJ( udg_QuestSecureWellsProgress, "QuestSecureWellsProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreIntegerBJ( udg_QuestThunderLizardsProgress, "QuestThunderLizardsProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreIntegerBJ( udg_QuestLizardEggsProgress, "QuestLizardEggsProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreIntegerBJ( udg_QuestQuillboarsProgress, "QuestQuillboarsProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreIntegerBJ( udg_QuestWarlockCovenProgress, "QuestWarlockCovenProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreIntegerBJ( udg_QuestStrangeBrewProgress, "QuestStrangeBrewProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreBooleanBJ( udg_QuestStrangeBrewProgress1, "QuestStrangeBrewProgress1", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreBooleanBJ( udg_QuestStrangeBrewProgress2, "QuestStrangeBrewProgress2", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreBooleanBJ( udg_QuestStrangeBrewProgress3, "QuestStrangeBrewProgress3", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    // Resources
    call StoreIntegerBJ( GetPlayerState(udg_AP1_Player, PLAYER_STATE_RESOURCE_GOLD), "CurrentGold", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreIntegerBJ( GetPlayerState(udg_AP1_Player, PLAYER_STATE_RESOURCE_LUMBER), "CurrentLumber", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    // Misc
    call StoreIntegerBJ( udg_BonusSkillPointsGiven, "BonusSkillPointsGiven", udg_TransitionKey, GetLastCreatedGameCacheBJ() )
endfunction

//===========================================================================
function InitTrig_Export_Mission_Data takes nothing returns nothing
    set gg_trg_Export_Mission_Data = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Export_Mission_Data, function Trig_Export_Mission_Data_Actions )
endfunction

//===========================================================================
// Trigger: Export Heroes
//===========================================================================
function Trig_Export_Heroes_Actions takes nothing returns nothing
    // Export Hero
    set udg_TransitionHero = udg_Rexxar
    set udg_TransitionHeroName = "Rexxar"
    set udg_TransitionHeroInParty = udg_RexxarInParty
    call ConditionalTriggerExecute( gg_trg_Export_One_Hero )
    // Export Hero
    set udg_TransitionHero = udg_Rokhan
    set udg_TransitionHeroName = "Rokhan"
    set udg_TransitionHeroInParty = udg_RokhanInParty
    call ConditionalTriggerExecute( gg_trg_Export_One_Hero )
    // Export Hero
    set udg_TransitionHero = udg_Chen
    set udg_TransitionHeroName = "Chen"
    set udg_TransitionHeroInParty = udg_ChenInParty
    call ConditionalTriggerExecute( gg_trg_Export_One_Hero )
endfunction

//===========================================================================
function InitTrig_Export_Heroes takes nothing returns nothing
    set gg_trg_Export_Heroes = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Export_Heroes, function Trig_Export_Heroes_Actions )
endfunction

//===========================================================================
// Trigger: Export One Hero
//===========================================================================
function Trig_Export_One_Hero_Conditions takes nothing returns boolean
    if ( not ( udg_TransitionHeroInParty == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Export_One_Hero_Actions takes nothing returns nothing
    // Export Hero
    call StoreUnitBJ( udg_TransitionHero, ( "Transition" + udg_TransitionHeroName ), udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreRealBJ( GetUnitStateSwap(UNIT_STATE_LIFE, udg_TransitionHero), ( ( "Transition" + udg_TransitionHeroName ) + "Life" ), udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    call StoreRealBJ( GetUnitStateSwap(UNIT_STATE_MANA, udg_TransitionHero), ( ( "Transition" + udg_TransitionHeroName ) + "Mana" ), udg_TransitionKey, GetLastCreatedGameCacheBJ() )
    // Remove Hero (prevents duplicates upon returning to this map)
    call RemoveUnit( udg_TransitionHero )
endfunction

//===========================================================================
function InitTrig_Export_One_Hero takes nothing returns nothing
    set gg_trg_Export_One_Hero = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Export_One_Hero, Condition( function Trig_Export_One_Hero_Conditions ) )
    call TriggerAddAction( gg_trg_Export_One_Hero, function Trig_Export_One_Hero_Actions )
endfunction

//===========================================================================
// Trigger: Perform Map Transition
//===========================================================================
function Trig_Perform_Map_Transition_Func001C takes nothing returns boolean
    if ( not ( udg_ZoneSaves[udg_TransitionTarget] != "" ) ) then
        return false
    endif
    if ( not ( SaveGameExists(( ( udg_ZoneFolder + "\\" ) + udg_ZoneSaves[udg_TransitionTarget] )) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Perform_Map_Transition_Actions takes nothing returns nothing
    if ( Trig_Perform_Map_Transition_Func001C() ) then
        // We've visited this map before, so load the last saved-game
        call SaveAndLoadGameBJ( ( ( udg_ZoneFolder + "\\" ) + udg_ZoneSaves[udg_TransitionSource] ), ( ( udg_ZoneFolder + "\\" ) + udg_ZoneSaves[udg_TransitionTarget] ), false )
    else
        // We haven't visited this map yet, so load the map from scratch
        call SaveAndChangeLevelBJ( ( ( udg_ZoneFolder + "\\" ) + udg_ZoneSaves[udg_TransitionSource] ), ( udg_ZoneMapPath + ( udg_ZoneMaps[udg_TransitionTarget] + udg_ZoneMapExt ) ), false )
    endif
endfunction

//===========================================================================
function InitTrig_Perform_Map_Transition takes nothing returns nothing
    set gg_trg_Perform_Map_Transition = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Perform_Map_Transition, function Trig_Perform_Map_Transition_Actions )
endfunction

//===========================================================================
// Trigger: Prep For Save
//===========================================================================
function Trig_Prep_For_Save_Func003Func001C takes nothing returns boolean
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_SUMMONED) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Prep_For_Save_Func003A takes nothing returns nothing
    if ( Trig_Prep_For_Save_Func003Func001C() ) then
        call RemoveUnit( GetEnumUnit() )
    else
        call UnitRemoveBuffsBJ( bj_REMOVEBUFFS_ALL, GetEnumUnit() )
    endif
endfunction

function Trig_Prep_For_Save_Actions takes nothing returns nothing
    // Remove Summonables and Buffs
    set bj_wantDestroyGroup = true
    call ForGroupBJ( GetUnitsInRectAll(GetPlayableMapRect()), function Trig_Prep_For_Save_Func003A )
endfunction

//===========================================================================
function InitTrig_Prep_For_Save takes nothing returns nothing
    set gg_trg_Prep_For_Save = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Prep_For_Save, function Trig_Prep_For_Save_Actions )
endfunction

//===========================================================================
// Trigger: Game Load
//===========================================================================
function Trig_Game_Load_Conditions takes nothing returns boolean
    if ( not ( IsMapFlagSet(MAP_RELOADED) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Game_Load_Actions takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_Import_All )
    call ConditionalTriggerExecute( gg_trg_Resume_Game )
    call ConditionalTriggerExecute( gg_trg_Disable_Restart_Mission )
endfunction

//===========================================================================
function InitTrig_Game_Load takes nothing returns nothing
    set gg_trg_Game_Load = CreateTrigger(  )
    call TriggerRegisterGameLoadedEventBJ( gg_trg_Game_Load )
    call TriggerAddCondition( gg_trg_Game_Load, Condition( function Trig_Game_Load_Conditions ) )
    call TriggerAddAction( gg_trg_Game_Load, function Trig_Game_Load_Actions )
endfunction

//===========================================================================
// Trigger: Import All
//===========================================================================
function Trig_Import_All_Actions takes nothing returns nothing
    // Create The Game Cache
    call ReloadGameCachesFromDisk(  )
    call InitGameCacheBJ( "Campaigns.w3v" )
    // Import ZoneSaves (saved-game filenames)
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = udg_ZoneCount
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        set udg_ZoneSaves[GetForLoopIndexA()] = GetStoredStringBJ(( "ZoneSave" + I2S(GetForLoopIndexA()) ), udg_TransitionKey, GetLastCreatedGameCacheBJ())
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
    // Import Transition Data
    set udg_TransitionSource = GetStoredIntegerBJ("TransitionSource", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_TransitionTargetArea = GetStoredIntegerBJ("TransitionTargetArea", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    // Import Hero and Mission Data
    call ConditionalTriggerExecute( gg_trg_Import_Mission_Data )
    call ConditionalTriggerExecute( gg_trg_Import_Heroes )
endfunction

//===========================================================================
function InitTrig_Import_All takes nothing returns nothing
    set gg_trg_Import_All = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Import_All, function Trig_Import_All_Actions )
endfunction

//===========================================================================
// Trigger: Import Mission Data
//===========================================================================
function Trig_Import_Mission_Data_Actions takes nothing returns nothing
    // Hero Flags
    set udg_RexxarInParty = GetStoredBooleanBJ("TransitionRexxarInParty", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_RokhanInParty = GetStoredBooleanBJ("TransitionRokhanInParty", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_ChenInParty = GetStoredBooleanBJ("TransitionChenInParty", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    // Hero Experience Caps
    set udg_ExpDisabledForRexxar = GetStoredBooleanBJ("ExpDisabledForRexxar", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_ExpDisabledForRokhan = GetStoredBooleanBJ("ExpDisabledForRokhan", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_ExpDisabledForChen = GetStoredBooleanBJ("ExpDisabledForChen", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    // Required Quests
    set udg_QuestDestroyHumansProgress = GetStoredIntegerBJ("QuestDestroyHumansProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestDyingWishProgress = GetStoredIntegerBJ("QuestDyingWishProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestEarnKeepProgress = GetStoredIntegerBJ("QuestEarnKeepProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestEarnKeepProgress1 = GetStoredBooleanBJ("QuestEarnKeepProgress1", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestEarnKeepProgress2 = GetStoredBooleanBJ("QuestEarnKeepProgress2", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestEarnKeepProgress3 = GetStoredBooleanBJ("QuestEarnKeepProgress3", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestHarpyThreatProgress = GetStoredIntegerBJ("QuestHarpyThreatProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestSealTunnelProgress = GetStoredIntegerBJ("QuestSealTunnelProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestSignalPyresProgress = GetStoredIntegerBJ("QuestSignalPyresProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestSinkFleetProgress = GetStoredIntegerBJ("QuestSinkFleetProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestSummitProgress = GetStoredIntegerBJ("QuestSummitProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestSurveyProgress = GetStoredIntegerBJ("QuestSurveyProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestThunderHerbProgress = GetStoredIntegerBJ("QuestThunderHerbProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestWarnTrollsProgress = GetStoredIntegerBJ("QuestWarnTrollsProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    // Optional Quests
    set udg_QuestSecureWellsProgress = GetStoredIntegerBJ("QuestSecureWellsProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestThunderLizardsProgress = GetStoredIntegerBJ("QuestThunderLizardsProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestLizardEggsProgress = GetStoredIntegerBJ("QuestLizardEggsProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestQuillboarsProgress = GetStoredIntegerBJ("QuestQuillboarsProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestWarlockCovenProgress = GetStoredIntegerBJ("QuestWarlockCovenProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestStrangeBrewProgress = GetStoredIntegerBJ("QuestStrangeBrewProgress", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestStrangeBrewProgress1 = GetStoredBooleanBJ("QuestStrangeBrewProgress1", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestStrangeBrewProgress2 = GetStoredBooleanBJ("QuestStrangeBrewProgress2", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    set udg_QuestStrangeBrewProgress3 = GetStoredBooleanBJ("QuestStrangeBrewProgress3", udg_TransitionKey, GetLastCreatedGameCacheBJ())
    // Resources
    call SetPlayerStateBJ( udg_AP1_Player, PLAYER_STATE_RESOURCE_GOLD, GetStoredIntegerBJ("CurrentGold", udg_TransitionKey, GetLastCreatedGameCacheBJ()) )
    call SetPlayerStateBJ( udg_AP1_Player, PLAYER_STATE_RESOURCE_LUMBER, GetStoredIntegerBJ("CurrentLumber", udg_TransitionKey, GetLastCreatedGameCacheBJ()) )
    // Misc
    set udg_BonusSkillPointsGiven = GetStoredIntegerBJ("BonusSkillPointsGiven", udg_TransitionKey, GetLastCreatedGameCacheBJ())
endfunction

//===========================================================================
function InitTrig_Import_Mission_Data takes nothing returns nothing
    set gg_trg_Import_Mission_Data = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Import_Mission_Data, function Trig_Import_Mission_Data_Actions )
endfunction

//===========================================================================
// Trigger: Import Heroes
//===========================================================================
function Trig_Import_Heroes_Actions takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_Set_Hero_Locations )
    call ConditionalTriggerExecute( gg_trg_Import_Hero_Rexxar )
    call ConditionalTriggerExecute( gg_trg_Import_Hero_Rokhan )
    call ConditionalTriggerExecute( gg_trg_Import_Hero_Chen )
    call ConditionalTriggerExecute( gg_trg_Enforce_Experience_Caps )
endfunction

//===========================================================================
function InitTrig_Import_Heroes takes nothing returns nothing
    set gg_trg_Import_Heroes = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Import_Heroes, function Trig_Import_Heroes_Actions )
endfunction

//===========================================================================
// Trigger: Import Hero Rexxar
//===========================================================================
function Trig_Import_Hero_Rexxar_Conditions takes nothing returns boolean
    if ( not ( udg_RexxarInParty == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Import_Hero_Rexxar_Func006Func007C takes nothing returns boolean
    if ( not ( udg_TransitionHeroLife > 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Import_Hero_Rexxar_Func006Func009C takes nothing returns boolean
    if ( not ( udg_TransitionHeroMana > 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Import_Hero_Rexxar_Func006C takes nothing returns boolean
    if ( not ( GetLastRestoredUnitBJ() == null ) ) then
        return false
    endif
    return true
endfunction

function Trig_Import_Hero_Rexxar_Actions takes nothing returns nothing
    set udg_TransitionHeroName = "Rexxar"
    set udg_TransitionSpot = udg_TransitionSpawnA
    // Import Hero From Cache
    call RestoreUnitLocFacingAngleBJ( ( "Transition" + udg_TransitionHeroName ), udg_TransitionKey, GetLastCreatedGameCacheBJ(), udg_AP1_Player, udg_TransitionSpot, 0.00 )
    if ( Trig_Import_Hero_Rexxar_Func006C() ) then
        // Create Default Hero
        set udg_CreateDefaultSpot = udg_TransitionSpot
        call ConditionalTriggerExecute( gg_trg_Create_Default_Rexxar )
    else
        // Finish Loading Hero
        set udg_Rexxar = GetLastRestoredUnitBJ()
        set udg_TransitionHeroLife = GetStoredRealBJ(( ( "Transition" + udg_TransitionHeroName ) + "Life" ), udg_TransitionKey, GetLastCreatedGameCacheBJ())
        if ( Trig_Import_Hero_Rexxar_Func006Func007C() ) then
            call SetUnitLifeBJ( GetLastRestoredUnitBJ(), udg_TransitionHeroLife )
        else
        endif
        set udg_TransitionHeroMana = GetStoredRealBJ(( ( "Transition" + udg_TransitionHeroName ) + "Mana" ), udg_TransitionKey, GetLastCreatedGameCacheBJ())
        if ( Trig_Import_Hero_Rexxar_Func006Func009C() ) then
            call SetUnitManaBJ( GetLastRestoredUnitBJ(), udg_TransitionHeroMana )
        else
        endif
    endif
endfunction

//===========================================================================
function InitTrig_Import_Hero_Rexxar takes nothing returns nothing
    set gg_trg_Import_Hero_Rexxar = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Import_Hero_Rexxar, Condition( function Trig_Import_Hero_Rexxar_Conditions ) )
    call TriggerAddAction( gg_trg_Import_Hero_Rexxar, function Trig_Import_Hero_Rexxar_Actions )
endfunction

//===========================================================================
// Trigger: Import Hero Rokhan
//===========================================================================
function Trig_Import_Hero_Rokhan_Conditions takes nothing returns boolean
    if ( not ( udg_RokhanInParty == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Import_Hero_Rokhan_Func006Func007C takes nothing returns boolean
    if ( not ( udg_TransitionHeroLife > 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Import_Hero_Rokhan_Func006Func009C takes nothing returns boolean
    if ( not ( udg_TransitionHeroMana > 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Import_Hero_Rokhan_Func006C takes nothing returns boolean
    if ( not ( GetLastRestoredUnitBJ() == null ) ) then
        return false
    endif
    return true
endfunction

function Trig_Import_Hero_Rokhan_Actions takes nothing returns nothing
    set udg_TransitionHeroName = "Rokhan"
    set udg_TransitionSpot = udg_TransitionSpawnB
    // Import Hero From Cache
    call RestoreUnitLocFacingAngleBJ( ( "Transition" + udg_TransitionHeroName ), udg_TransitionKey, GetLastCreatedGameCacheBJ(), udg_AP1_Player, udg_TransitionSpot, 0.00 )
    if ( Trig_Import_Hero_Rokhan_Func006C() ) then
        // Create Default Hero
        set udg_CreateDefaultSpot = udg_TransitionSpot
        call ConditionalTriggerExecute( gg_trg_Create_Default_Rokhan )
    else
        // Finish Loading Hero
        set udg_Rokhan = GetLastRestoredUnitBJ()
        set udg_TransitionHeroLife = GetStoredRealBJ(( ( "Transition" + udg_TransitionHeroName ) + "Life" ), udg_TransitionKey, GetLastCreatedGameCacheBJ())
        if ( Trig_Import_Hero_Rokhan_Func006Func007C() ) then
            call SetUnitLifeBJ( GetLastRestoredUnitBJ(), udg_TransitionHeroLife )
        else
        endif
        set udg_TransitionHeroMana = GetStoredRealBJ(( ( "Transition" + udg_TransitionHeroName ) + "Mana" ), udg_TransitionKey, GetLastCreatedGameCacheBJ())
        if ( Trig_Import_Hero_Rokhan_Func006Func009C() ) then
            call SetUnitManaBJ( GetLastRestoredUnitBJ(), udg_TransitionHeroMana )
        else
        endif
    endif
endfunction

//===========================================================================
function InitTrig_Import_Hero_Rokhan takes nothing returns nothing
    set gg_trg_Import_Hero_Rokhan = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Import_Hero_Rokhan, Condition( function Trig_Import_Hero_Rokhan_Conditions ) )
    call TriggerAddAction( gg_trg_Import_Hero_Rokhan, function Trig_Import_Hero_Rokhan_Actions )
endfunction

//===========================================================================
// Trigger: Import Hero Chen
//===========================================================================
function Trig_Import_Hero_Chen_Conditions takes nothing returns boolean
    if ( not ( udg_ChenInParty == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Import_Hero_Chen_Func006Func007C takes nothing returns boolean
    if ( not ( udg_TransitionHeroLife > 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Import_Hero_Chen_Func006Func009C takes nothing returns boolean
    if ( not ( udg_TransitionHeroMana > 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Import_Hero_Chen_Func006C takes nothing returns boolean
    if ( not ( GetLastRestoredUnitBJ() == null ) ) then
        return false
    endif
    return true
endfunction

function Trig_Import_Hero_Chen_Actions takes nothing returns nothing
    set udg_TransitionHeroName = "Chen"
    set udg_TransitionSpot = udg_TransitionSpawnC
    // Import Hero From Cache
    call RestoreUnitLocFacingAngleBJ( ( "Transition" + udg_TransitionHeroName ), udg_TransitionKey, GetLastCreatedGameCacheBJ(), udg_AP1_Player, udg_TransitionSpot, 0.00 )
    if ( Trig_Import_Hero_Chen_Func006C() ) then
        // Create Default Hero
        set udg_CreateDefaultSpot = udg_TransitionSpot
        call ConditionalTriggerExecute( gg_trg_Create_Default_Chen )
    else
        // Finish Loading Hero
        set udg_Chen = GetLastRestoredUnitBJ()
        set udg_TransitionHeroLife = GetStoredRealBJ(( ( "Transition" + udg_TransitionHeroName ) + "Life" ), udg_TransitionKey, GetLastCreatedGameCacheBJ())
        if ( Trig_Import_Hero_Chen_Func006Func007C() ) then
            call SetUnitLifeBJ( GetLastRestoredUnitBJ(), udg_TransitionHeroLife )
        else
        endif
        set udg_TransitionHeroMana = GetStoredRealBJ(( ( "Transition" + udg_TransitionHeroName ) + "Mana" ), udg_TransitionKey, GetLastCreatedGameCacheBJ())
        if ( Trig_Import_Hero_Chen_Func006Func009C() ) then
            call SetUnitManaBJ( GetLastRestoredUnitBJ(), udg_TransitionHeroMana )
        else
        endif
    endif
endfunction

//===========================================================================
function InitTrig_Import_Hero_Chen takes nothing returns nothing
    set gg_trg_Import_Hero_Chen = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Import_Hero_Chen, Condition( function Trig_Import_Hero_Chen_Conditions ) )
    call TriggerAddAction( gg_trg_Import_Hero_Chen, function Trig_Import_Hero_Chen_Actions )
endfunction

//===========================================================================
// Trigger: Enforce Experience Caps
//===========================================================================
function Trig_Enforce_Experience_Caps_Func001001 takes nothing returns boolean
    return ( udg_ExpDisabledForRexxar == true )
endfunction

function Trig_Enforce_Experience_Caps_Func002001 takes nothing returns boolean
    return ( udg_ExpDisabledForRokhan == true )
endfunction

function Trig_Enforce_Experience_Caps_Func003001 takes nothing returns boolean
    return ( udg_ExpDisabledForChen == true )
endfunction

function Trig_Enforce_Experience_Caps_Actions takes nothing returns nothing
    if ( Trig_Enforce_Experience_Caps_Func001001() ) then
        call SuspendHeroXPBJ( false, udg_Rexxar )
    else
        call DoNothing(  )
    endif
    if ( Trig_Enforce_Experience_Caps_Func002001() ) then
        call SuspendHeroXPBJ( false, udg_Rokhan )
    else
        call DoNothing(  )
    endif
    if ( Trig_Enforce_Experience_Caps_Func003001() ) then
        call SuspendHeroXPBJ( false, udg_Chen )
    else
        call DoNothing(  )
    endif
endfunction

//===========================================================================
function InitTrig_Enforce_Experience_Caps takes nothing returns nothing
    set gg_trg_Enforce_Experience_Caps = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Enforce_Experience_Caps, function Trig_Enforce_Experience_Caps_Actions )
endfunction

//===========================================================================
// Trigger: Identify Zone
//===========================================================================
function Trig_Identify_Zone_Actions takes nothing returns nothing
    // Identify this zone
    set udg_Zone = 2
endfunction

//===========================================================================
function InitTrig_Identify_Zone takes nothing returns nothing
    set gg_trg_Identify_Zone = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Identify_Zone, function Trig_Identify_Zone_Actions )
endfunction

//===========================================================================
// Trigger: Disable Restart Mission
//===========================================================================
function Trig_Disable_Restart_Mission_Actions takes nothing returns nothing
    call TriggerSleepAction( 0.05 )
    call DisableRestartMission( true )
endfunction

//===========================================================================
function InitTrig_Disable_Restart_Mission takes nothing returns nothing
    set gg_trg_Disable_Restart_Mission = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Disable_Restart_Mission, function Trig_Disable_Restart_Mission_Actions )
endfunction

//===========================================================================
// Trigger: Set Hero Locations
//===========================================================================
function Trig_Set_Hero_Locations_Actions takes nothing returns nothing
    // Default Transition Spawn Points
    set udg_TransitionSpawnA = GetRectCenter(gg_rct_SpawnPoint1A)
    set udg_TransitionSpawnB = GetRectCenter(gg_rct_SpawnPoint1B)
    set udg_TransitionSpawnC = GetRectCenter(gg_rct_SpawnPoint1C)
    call ConditionalTriggerExecute( gg_trg_Pick_Resurrection_Stone_01 )
endfunction

//===========================================================================
function InitTrig_Set_Hero_Locations takes nothing returns nothing
    set gg_trg_Set_Hero_Locations = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Set_Hero_Locations, function Trig_Set_Hero_Locations_Actions )
endfunction

//===========================================================================
// Trigger: Resume Game
//
// This trigger is run whenever a player returns to this map (after visiting it the first time).
// If any global settings should change the map's workings, the changes should be applied here.
//===========================================================================
function Trig_Resume_Game_Actions takes nothing returns nothing
    // Sync Quests
    call ConditionalTriggerExecute( gg_trg_Sync_Quests )
    // Center camera on the hero
    call PanCameraToTimedLocForPlayer( udg_AP1_Player, GetUnitLoc(udg_Rexxar), 0 )
    call SelectUnitForPlayerSingle( udg_Rexxar, udg_AP1_Player )
    // Finish the zoning -- don't use any waits before this.
    call QueuedTriggerAddBJ( gg_trg_Zone_Finish_MiniCinematic_Q, true )
    call QueuedTriggerRemoveBJ( gg_trg_Zone_Begin_MiniCinematic_Q )
endfunction

//===========================================================================
function InitTrig_Resume_Game takes nothing returns nothing
    set gg_trg_Resume_Game = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Resume_Game, function Trig_Resume_Game_Actions )
endfunction

//===========================================================================
// Trigger: Zone to Orgrimmar
//===========================================================================
function Trig_Zone_to_Orgrimmar_Func008Func001001001 takes nothing returns boolean
    return ( udg_ChenInParty == true )
endfunction

function Trig_Zone_to_Orgrimmar_Func008Func001001002 takes nothing returns boolean
    return ( IsUnitAliveBJ(udg_Chen) == true )
endfunction

function Trig_Zone_to_Orgrimmar_Func008Func001001 takes nothing returns boolean
    return GetBooleanAnd( Trig_Zone_to_Orgrimmar_Func008Func001001001(), Trig_Zone_to_Orgrimmar_Func008Func001001002() )
endfunction

function Trig_Zone_to_Orgrimmar_Func008Func001002 takes nothing returns boolean
    return ( RectContainsUnit(gg_rct_Zone_Orgrimmar_Tripwire, udg_Chen) == true )
endfunction

function Trig_Zone_to_Orgrimmar_Func008Func002001001 takes nothing returns boolean
    return ( udg_RexxarInParty == true )
endfunction

function Trig_Zone_to_Orgrimmar_Func008Func002001002 takes nothing returns boolean
    return ( IsUnitAliveBJ(udg_Rexxar) == true )
endfunction

function Trig_Zone_to_Orgrimmar_Func008Func002001 takes nothing returns boolean
    return GetBooleanAnd( Trig_Zone_to_Orgrimmar_Func008Func002001001(), Trig_Zone_to_Orgrimmar_Func008Func002001002() )
endfunction

function Trig_Zone_to_Orgrimmar_Func008Func002002 takes nothing returns boolean
    return ( RectContainsUnit(gg_rct_Zone_Orgrimmar_Tripwire, udg_Rexxar) == true )
endfunction

function Trig_Zone_to_Orgrimmar_Func008Func003001001 takes nothing returns boolean
    return ( udg_RokhanInParty == true )
endfunction

function Trig_Zone_to_Orgrimmar_Func008Func003001002 takes nothing returns boolean
    return ( IsUnitAliveBJ(udg_Rokhan) == true )
endfunction

function Trig_Zone_to_Orgrimmar_Func008Func003001 takes nothing returns boolean
    return GetBooleanAnd( Trig_Zone_to_Orgrimmar_Func008Func003001001(), Trig_Zone_to_Orgrimmar_Func008Func003001002() )
endfunction

function Trig_Zone_to_Orgrimmar_Func008Func003002 takes nothing returns boolean
    return ( RectContainsUnit(gg_rct_Zone_Orgrimmar_Tripwire, udg_Rokhan) == true )
endfunction

function Trig_Zone_to_Orgrimmar_Func008C takes nothing returns boolean
    if ( GetBooleanAnd( Trig_Zone_to_Orgrimmar_Func008Func001001(), Trig_Zone_to_Orgrimmar_Func008Func001002() ) ) then
        return true
    endif
    if ( GetBooleanAnd( Trig_Zone_to_Orgrimmar_Func008Func002001(), Trig_Zone_to_Orgrimmar_Func008Func002002() ) ) then
        return true
    endif
    if ( GetBooleanAnd( Trig_Zone_to_Orgrimmar_Func008Func003001(), Trig_Zone_to_Orgrimmar_Func008Func003002() ) ) then
        return true
    endif
    return false
endfunction

function Trig_Zone_to_Orgrimmar_Conditions takes nothing returns boolean
    if ( not ( IsTriggerQueueEmptyBJ() == true ) ) then
        return false
    endif
    if ( not Trig_Zone_to_Orgrimmar_Func008C() ) then
        return false
    endif
    return true
endfunction

function Trig_Zone_to_Orgrimmar_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_TransitionTarget = 1
    set udg_TransitionTargetArea = 1
    call QueuedTriggerAddBJ( gg_trg_Zone_Begin_MiniCinematic_Q, true )
    call TriggerSleepAction( 4.00 )
    call EnableTrigger( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Zone_to_Orgrimmar takes nothing returns nothing
    set gg_trg_Zone_to_Orgrimmar = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Zone_to_Orgrimmar, 0.50 )
    call TriggerAddCondition( gg_trg_Zone_to_Orgrimmar, Condition( function Trig_Zone_to_Orgrimmar_Conditions ) )
    call TriggerAddAction( gg_trg_Zone_to_Orgrimmar, function Trig_Zone_to_Orgrimmar_Actions )
endfunction

//===========================================================================
// Trigger: Zone Begin MiniCinematic Q
//===========================================================================
function Trig_Zone_Begin_MiniCinematic_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Zone_Begin_MiniCinematic_Q_Func007001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_Zone_Begin_MiniCinematic_Q_Actions takes nothing returns nothing
    set udg_InCinematic = true
    // Fade Out
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.25 )
    // Set Up Scene
    if ( Trig_Zone_Begin_MiniCinematic_Q_Func007001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CinematicModeExBJ( true, GetPlayersAll(), 0.2 )
    call TriggerSleepAction( 0.20 )
    // Transition
    call ConditionalTriggerExecute( gg_trg_Transition )
endfunction

//===========================================================================
function InitTrig_Zone_Begin_MiniCinematic_Q takes nothing returns nothing
    set gg_trg_Zone_Begin_MiniCinematic_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Zone_Begin_MiniCinematic_Q, Condition( function Trig_Zone_Begin_MiniCinematic_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Zone_Begin_MiniCinematic_Q, function Trig_Zone_Begin_MiniCinematic_Q_Actions )
endfunction

//===========================================================================
// Trigger: Zone Finish MiniCinematic Q
//===========================================================================
function Trig_Zone_Finish_MiniCinematic_Q_Actions takes nothing returns nothing
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 0.00, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.50 )
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // Cleanup
    call CinematicModeExBJ( false, GetPlayersAll(), 0.30 )
    call TriggerSleepAction( 0.20 )
    // Fade In
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 0.50, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.50 )
    set udg_InCinematic = false
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Zone_Finish_MiniCinematic_Q takes nothing returns nothing
    set gg_trg_Zone_Finish_MiniCinematic_Q = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Zone_Finish_MiniCinematic_Q, function Trig_Zone_Finish_MiniCinematic_Q_Actions )
endfunction

//===========================================================================
// Trigger: RampOn
//===========================================================================
function Trig_RampOn_Func006C takes nothing returns boolean
    if ( ( IsLocationVisibleToPlayer(udg_zVSourceRamp, udg_AP1_Player) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_RampOn_Conditions takes nothing returns boolean
    if ( not ( udg_RampVisionOn == false ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not Trig_RampOn_Func006C() ) then
        return false
    endif
    return true
endfunction

function Trig_RampOn_Actions takes nothing returns nothing
    set udg_RampVisionOn = true
    call CreateFogModifierRectBJ( true, udg_AP1_Player, FOG_OF_WAR_VISIBLE, gg_rct_Ramp01VM )
    set udg_RampVM = GetLastCreatedFogModifier()
endfunction

//===========================================================================
function InitTrig_RampOn takes nothing returns nothing
    set gg_trg_RampOn = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_RampOn, 0.50 )
    call TriggerAddCondition( gg_trg_RampOn, Condition( function Trig_RampOn_Conditions ) )
    call TriggerAddAction( gg_trg_RampOn, function Trig_RampOn_Actions )
endfunction

//===========================================================================
// Trigger: RampOff
//===========================================================================
function Trig_RampOff_Conditions takes nothing returns boolean
    if ( not ( udg_RampVisionOn == true ) ) then
        return false
    endif
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( IsLocationVisibleToPlayer(udg_zVSourceRamp, udg_AP1_Player) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_RampOff_Actions takes nothing returns nothing
    set udg_RampVisionOn = false
    call DestroyFogModifier( udg_RampVM )
endfunction

//===========================================================================
function InitTrig_RampOff takes nothing returns nothing
    set gg_trg_RampOff = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_RampOff, 0.50 )
    call TriggerAddCondition( gg_trg_RampOff, Condition( function Trig_RampOff_Conditions ) )
    call TriggerAddAction( gg_trg_RampOff, function Trig_RampOff_Actions )
endfunction

//===========================================================================
// Trigger: Goblin Midgame Cinematic Q
//===========================================================================
function Trig_Goblin_Midgame_Cinematic_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( udg_CinematicSafety == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Goblin_Midgame_Cinematic_Q_Func010001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_Goblin_Midgame_Cinematic_Q_Func026001 takes nothing returns boolean
    return ( udg_GoblinSkipped == true )
endfunction

function Trig_Goblin_Midgame_Cinematic_Q_Func030001 takes nothing returns boolean
    return ( udg_GoblinSkipped == true )
endfunction

function Trig_Goblin_Midgame_Cinematic_Q_Func033001 takes nothing returns boolean
    return ( udg_GoblinSkipped == true )
endfunction

function Trig_Goblin_Midgame_Cinematic_Q_Func036001 takes nothing returns boolean
    return ( udg_GoblinSkipped == true )
endfunction

function Trig_Goblin_Midgame_Cinematic_Q_Func041001 takes nothing returns boolean
    return ( udg_GoblinSkipped == true )
endfunction

function Trig_Goblin_Midgame_Cinematic_Q_Actions takes nothing returns nothing
    set udg_CinematicSafety = true
    set udg_InCinematic = true
    // Fade Out
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.25 )
    // Set Up Scene
    call CinematicModeExBJ( true, GetPlayersAll(), 0.2 )
    if ( Trig_Goblin_Midgame_Cinematic_Q_Func010001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Goblin_Setup )
    call TriggerSleepAction( 0.10 )
    call CameraSetupApplyForPlayer( true, gg_cam_GoblinStart, udg_AP1_Player, 0 )
    call CameraSetupApplyForPlayer( true, gg_cam_GoblinStartB, udg_AP1_Player, 4.00 )
    call IssuePointOrderLocBJ( udg_RexxarCinematic, "move", GetRectCenter(gg_rct_GoblinRexxar02) )
    call IssuePointOrderLocBJ( udg_RokhanCinematic, "move", GetRectCenter(gg_rct_GoblinRokhan02) )
    call IssuePointOrderLocBJ( udg_ChenCinematic, "move", GetRectCenter(gg_rct_GoblinChen02) )
    // Fade In
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 1.00 )
    call EnableTrigger( gg_trg_Goblin_Skipped )
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // MINI-CINEMATIC BEGINS - Mini-Cinematics Cannot Be Skipped
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    call TriggerSleepAction( 1.40 )
    if ( Trig_Goblin_Midgame_Cinematic_Q_Func026001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetupApplyForPlayer( true, gg_cam_Goblin01, udg_AP1_Player, 0 )
    call CameraSetupApplyForPlayer( true, gg_cam_Goblin01A, udg_AP1_Player, 10.00 )
    call TriggerSleepAction( 0.30 )
    if ( Trig_Goblin_Midgame_Cinematic_Q_Func030001() ) then
        return
    else
        call DoNothing(  )
    endif
    call TransmissionFromUnitWithNameBJ( udg_APG1_Player, udg_GoblinSapper01, "TRIGSTR_386", gg_snd_D03Sapper05, "TRIGSTR_387", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_D03Sapper05, 0 )
    if ( Trig_Goblin_Midgame_Cinematic_Q_Func033001() ) then
        return
    else
        call DoNothing(  )
    endif
    call TransmissionFromUnitWithNameBJ( udg_APG1_Player, udg_RexxarCinematic, "TRIGSTR_388", gg_snd_D03Rexxar06, "TRIGSTR_389", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_D03Rexxar06, 0 )
    if ( Trig_Goblin_Midgame_Cinematic_Q_Func036001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetupApplyForPlayer( true, gg_cam_Goblin02A, udg_AP1_Player, 0 )
    call CameraSetupApplyForPlayer( true, gg_cam_Goblin02B, udg_AP1_Player, ( GetSoundDurationBJ(gg_snd_D03Sapper07) + 0.25 ) )
    call TransmissionFromUnitWithNameBJ( udg_APG1_Player, udg_GoblinSapper01, "TRIGSTR_390", gg_snd_D03Sapper07, "TRIGSTR_391", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_D03Sapper07, 0 )
    if ( Trig_Goblin_Midgame_Cinematic_Q_Func041001() ) then
        return
    else
        call DoNothing(  )
    endif
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // MINI-CINEMATIC ENDS - Mini-Cinematics Cannot Be Skipped
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    call DisableTrigger( gg_trg_Goblin_Skipped )
    // Fade Out
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.25 )
    // Cleanup
    call ConditionalTriggerExecute( gg_trg_Goblin_Cleanup )
    call CinematicModeExBJ( false, GetPlayersAll(), 0.2 )
    call TriggerSleepAction( 0.10 )
    // Fade In
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.25 )
    set udg_InCinematic = false
    call ConditionalTriggerExecute( gg_trg_Quest_SealTunnel_Update1 )
    call ConditionalTriggerExecute( gg_trg_Create_Column_Leaderboard )
    call ConditionalTriggerExecute( gg_trg_RescueGoblins )
    call ConditionalTriggerExecute( gg_trg_Initialize_Goblin_Respawn_Timer )
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Goblin_Midgame_Cinematic_Q takes nothing returns nothing
    set gg_trg_Goblin_Midgame_Cinematic_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Goblin_Midgame_Cinematic_Q, Condition( function Trig_Goblin_Midgame_Cinematic_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Goblin_Midgame_Cinematic_Q, function Trig_Goblin_Midgame_Cinematic_Q_Actions )
endfunction

//===========================================================================
// Trigger: Goblin Skipped
//===========================================================================
function Trig_Goblin_Skipped_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_GoblinSkipped = true
    // Fade Out
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 0.50, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.50 )
    // Cleanup
    call ConditionalTriggerExecute( gg_trg_Goblin_Cleanup )
    call CinematicModeBJ( false, udg_APG1_Player )
    // Fade In
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 0.50, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.50 )
    set udg_InCinematic = false
    call ConditionalTriggerExecute( gg_trg_Quest_SealTunnel_Update1 )
    call ConditionalTriggerExecute( gg_trg_Create_Column_Leaderboard )
    call ConditionalTriggerExecute( gg_trg_RescueGoblins )
    call ConditionalTriggerExecute( gg_trg_Initialize_Goblin_Respawn_Timer )
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call QueuedTriggerRemoveBJ( gg_trg_Goblin_Midgame_Cinematic_Q )
endfunction

//===========================================================================
function InitTrig_Goblin_Skipped takes nothing returns nothing
    set gg_trg_Goblin_Skipped = CreateTrigger(  )
    call DisableTrigger( gg_trg_Goblin_Skipped )
    call TriggerRegisterPlayerEventEndCinematic( gg_trg_Goblin_Skipped, Player(0) )
    call TriggerAddAction( gg_trg_Goblin_Skipped, function Trig_Goblin_Skipped_Actions )
endfunction

//===========================================================================
// Trigger: Goblin Setup
//===========================================================================
function Trig_Goblin_Setup_Func029C takes nothing returns boolean
    if ( not ( udg_ChenInParty == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Goblin_Setup_Func041002002 takes nothing returns boolean
    return ( IsUnitHiddenBJ(GetFilterUnit()) == false )
endfunction

function Trig_Goblin_Setup_Func046002 takes nothing returns nothing
    call ShowUnitHide( GetEnumUnit() )
endfunction

function Trig_Goblin_Setup_Func048002 takes nothing returns nothing
    call UnitRemoveBuffsBJ( bj_REMOVEBUFFS_NONTLIFE, GetEnumUnit() )
endfunction

function Trig_Goblin_Setup_Func050002 takes nothing returns nothing
    call SetItemVisibleBJ( false, GetEnumItem() )
endfunction

function Trig_Goblin_Setup_Func062C takes nothing returns boolean
    if ( not ( udg_ChenInParty == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Goblin_Setup_Actions takes nothing returns nothing
    // Disable Abilities
    call SetPlayerAbilityAvailableBJ( false, 'AIba', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIcd', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIad', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIae', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIcf', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIgx', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'Ashm', udg_AP1_Player )
    // Disable Camera Bounds
    call SetCameraBoundsToRectForPlayerBJ( udg_AP1_Player, GetEntireMapRect() )
    // Save Camera Position
    set udg_CameraReturnPoint = GetCameraTargetPositionLoc()
    // Save Selection
    set udg_SelectedUnits = GetUnitsSelectedAll(udg_AP1_Player)
    call ClearSelection(  )
    // Revive Rexxar
    set udg_RevivalHero = udg_Rexxar
    set udg_RevivalSpot = GetRectCenter(gg_rct_GoblinRexxar01)
    call ConditionalTriggerExecute( gg_trg_Cinematic_Revival )
    set udg_RexxarReturnSpot = udg_RevivalReturnSpot
    call SetUnitFacingTimed( udg_Rexxar, 0.00, 0 )
    // Revive Rokhan
    set udg_RevivalHero = udg_Rokhan
    set udg_RevivalSpot = GetRectCenter(gg_rct_GoblinRokhan01)
    call ConditionalTriggerExecute( gg_trg_Cinematic_Revival )
    set udg_RokhanReturnSpot = udg_RevivalReturnSpot
    call SetUnitFacingTimed( udg_Rokhan, 0.00, 0 )
    // Revive Chen
    if ( Trig_Goblin_Setup_Func029C() ) then
        set udg_RevivalHero = udg_Chen
        set udg_RevivalSpot = GetRectCenter(gg_rct_GoblinChen01)
        call ConditionalTriggerExecute( gg_trg_Cinematic_Revival )
        set udg_ChenReturnSpot = udg_RevivalReturnSpot
        call SetUnitFacingTimed( udg_Chen, 0.00, 0 )
    else
        call DoNothing(  )
    endif
    // Disable XP Gain
    call SuspendHeroXPBJ( false, udg_Rexxar )
    call SuspendHeroXPBJ( false, udg_Rokhan )
    call SuspendHeroXPBJ( false, udg_Chen )
    // Pause Units
    call PauseAllUnitsBJ( true )
    call PauseUnitBJ( false, udg_GoblinSapper01 )
    call PauseUnitBJ( false, udg_GoblinSapper02 )
    call PauseUnitBJ( false, udg_GoblinSapper03 )
    call PauseUnitBJ( false, udg_GoblinSapper04 )
    // Hide Units
    set udg_HiddenUnits = GetUnitsOfPlayerMatching(udg_AP1_Player, Condition(function Trig_Goblin_Setup_Func041002002))
    call GroupRemoveUnitSimple( udg_GoblinSapper01, udg_HiddenUnits )
    call GroupRemoveUnitSimple( udg_GoblinSapper02, udg_HiddenUnits )
    call GroupRemoveUnitSimple( udg_GoblinSapper03, udg_HiddenUnits )
    call GroupRemoveUnitSimple( udg_GoblinSapper04, udg_HiddenUnits )
    call ForGroupBJ( udg_HiddenUnits, function Trig_Goblin_Setup_Func046002 )
    // Remove Buffs
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_AP1_Player), function Trig_Goblin_Setup_Func048002 )
    // Hide Items
    call EnumItemsInRectBJ( GetPlayableMapRect(), function Trig_Goblin_Setup_Func050002 )
    // Create Cinematic Rexxar
    call CreateNUnitsAtLoc( 1, 'Orex', udg_AP1_Player, GetRectCenter(gg_rct_GoblinRexxar01), 0.00 )
    set udg_RexxarCinematic = GetLastCreatedUnit()
    call SetUnitInvulnerable( udg_RexxarCinematic, true )
    call SuspendHeroXPBJ( false, udg_RexxarCinematic )
    // Create Cinematic Rokhan
    call CreateNUnitsAtLoc( 1, 'Orkn', udg_AP1_Player, GetRectCenter(gg_rct_GoblinRokhan01), 0.00 )
    set udg_RokhanCinematic = GetLastCreatedUnit()
    call SetUnitInvulnerable( udg_RokhanCinematic, true )
    call SuspendHeroXPBJ( false, udg_RokhanCinematic )
    // Create Cinematic Chen
    if ( Trig_Goblin_Setup_Func062C() ) then
        call CreateNUnitsAtLoc( 1, 'Nsjs', udg_AP1_Player, GetRectCenter(gg_rct_GoblinChen01), 0.00 )
        set udg_ChenCinematic = GetLastCreatedUnit()
        call SetUnitInvulnerable( udg_ChenCinematic, true )
        call SuspendHeroXPBJ( false, udg_ChenCinematic )
    else
        call DoNothing(  )
    endif
    // Musik
    call PlayThematicMusicExBJ( "Sound\\Music\\mp3Music\\OrcTheme.mp3", 23.50 )
endfunction

//===========================================================================
function InitTrig_Goblin_Setup takes nothing returns nothing
    set gg_trg_Goblin_Setup = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Goblin_Setup, function Trig_Goblin_Setup_Actions )
endfunction

//===========================================================================
// Trigger: Goblin Cleanup
//===========================================================================
function Trig_Goblin_Cleanup_Func006002 takes nothing returns nothing
    call SetItemVisibleBJ( true, GetEnumItem() )
endfunction

function Trig_Goblin_Cleanup_Func008002 takes nothing returns nothing
    call ShowUnitShow( GetEnumUnit() )
endfunction

function Trig_Goblin_Cleanup_Func016001 takes nothing returns boolean
    return ( udg_ExpDisabledForRexxar == false )
endfunction

function Trig_Goblin_Cleanup_Func017001 takes nothing returns boolean
    return ( udg_ExpDisabledForRokhan == false )
endfunction

function Trig_Goblin_Cleanup_Func018001 takes nothing returns boolean
    return ( udg_ExpDisabledForChen == false )
endfunction

function Trig_Goblin_Cleanup_Actions takes nothing returns nothing
    // Remove Cinematic Rexxar
    call RemoveUnit( udg_RexxarCinematic )
    call RemoveUnit( udg_RokhanCinematic )
    call RemoveUnit( udg_ChenCinematic )
    // Unhide Items
    call EnumItemsInRectBJ( GetPlayableMapRect(), function Trig_Goblin_Cleanup_Func006002 )
    // Unhide Units
    call ForGroupBJ( udg_HiddenUnits, function Trig_Goblin_Cleanup_Func008002 )
    // Unpause Units
    call PauseAllUnitsBJ( false )
    // Move Rexxar
    call SetUnitPositionLocFacingBJ( udg_Rexxar, GetRectCenter(gg_rct_GoblinRexxar02), 0.00 )
    call SetUnitPositionLocFacingBJ( udg_Rokhan, GetRectCenter(gg_rct_GoblinRokhan02), 0.00 )
    call SetUnitPositionLocFacingBJ( udg_Chen, GetRectCenter(gg_rct_GoblinChen02), 0.00 )
    // Re-enable XP Gain
    if ( Trig_Goblin_Cleanup_Func016001() ) then
        call SuspendHeroXPBJ( true, udg_Rexxar )
    else
        call DoNothing(  )
    endif
    if ( Trig_Goblin_Cleanup_Func017001() ) then
        call SuspendHeroXPBJ( true, udg_Rokhan )
    else
        call DoNothing(  )
    endif
    if ( Trig_Goblin_Cleanup_Func018001() ) then
        call SuspendHeroXPBJ( true, udg_Chen )
    else
        call DoNothing(  )
    endif
    // Restore Selection
    call SelectGroupBJ( udg_SelectedUnits )
    // Reset Camera
    call CameraResetSmoothingFactorBJ(  )
    call ResetToGameCameraForPlayer( udg_AP1_Player, 0 )
    call PanCameraToTimedLocForPlayer( udg_AP1_Player, udg_CameraReturnPoint, 0 )
    // Restore Abilities
    call SetPlayerAbilityAvailableBJ( true, 'AIba', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIcd', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIad', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIae', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIcf', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIgx', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'Ashm', udg_AP1_Player )
    // Disable Camera Bounds
    call SetCameraBoundsToRectForPlayerBJ( udg_AP1_Player, GetCameraBoundsMapRect() )
endfunction

//===========================================================================
function InitTrig_Goblin_Cleanup takes nothing returns nothing
    set gg_trg_Goblin_Cleanup = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Goblin_Cleanup, function Trig_Goblin_Cleanup_Actions )
endfunction

//===========================================================================
// Trigger: Tunnel01 Setup
//===========================================================================
function Trig_Tunnel01_Setup_Func023002 takes nothing returns nothing
    call SetItemPositionLoc( GetEnumItem(), GetRandomLocInRect(gg_rct_Tunnel01MoveTo) )
endfunction

function Trig_Tunnel01_Setup_Func024002 takes nothing returns nothing
    call SetUnitPositionLoc( GetEnumUnit(), GetRandomLocInRect(gg_rct_Tunnel01MoveTo) )
endfunction

function Trig_Tunnel01_Setup_Func025002 takes nothing returns nothing
    call SetUnitPositionLoc( GetEnumUnit(), GetRandomLocInRect(gg_rct_Tunnel01MoveTo) )
endfunction

function Trig_Tunnel01_Setup_Func027002002 takes nothing returns boolean
    return ( IsUnitHiddenBJ(GetFilterUnit()) == false )
endfunction

function Trig_Tunnel01_Setup_Func028001002 takes nothing returns boolean
    return ( IsUnitHiddenBJ(GetFilterUnit()) == false )
endfunction

function Trig_Tunnel01_Setup_Func028002 takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_HiddenUnits )
endfunction

function Trig_Tunnel01_Setup_Func029002 takes nothing returns nothing
    call ShowUnitHide( GetEnumUnit() )
endfunction

function Trig_Tunnel01_Setup_Func031002 takes nothing returns nothing
    call SetItemVisibleBJ( false, GetEnumItem() )
endfunction

function Trig_Tunnel01_Setup_Func033002 takes nothing returns nothing
    call UnitRemoveBuffsBJ( bj_REMOVEBUFFS_NONTLIFE, GetEnumUnit() )
endfunction

function Trig_Tunnel01_Setup_Actions takes nothing returns nothing
    // Disable Abilities
    call SetPlayerAbilityAvailableBJ( false, 'AIba', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIcd', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIad', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIae', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIcf', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIgx', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'Ashm', udg_AP1_Player )
    // Disable Camera Bounds
    call SetCameraBoundsToRectForPlayerBJ( udg_AP1_Player, GetEntireMapRect() )
    // Save Camera Position
    set udg_CameraReturnPoint = GetCameraTargetPositionLoc()
    // Save Selection
    set udg_SelectedUnits = GetUnitsSelectedAll(udg_AP1_Player)
    call ClearSelection(  )
    // Disable XP Gain
    call SuspendHeroXPBJ( false, udg_Rexxar )
    call SuspendHeroXPBJ( false, udg_Rokhan )
    call SuspendHeroXPBJ( false, udg_Chen )
    // Pause Units
    call PauseAllUnitsBJ( true )
    // Move Units That Are In The Way Of Spawned Rocks
    call EnumItemsInRectBJ( gg_rct_Tunnel01Area, function Trig_Tunnel01_Setup_Func023002 )
    call ForGroupBJ( GetUnitsInRectOfPlayer(gg_rct_Tunnel01Area, udg_AP1_Player), function Trig_Tunnel01_Setup_Func024002 )
    call ForGroupBJ( GetUnitsInRectOfPlayer(gg_rct_Tunnel01Area, Player(PLAYER_NEUTRAL_AGGRESSIVE)), function Trig_Tunnel01_Setup_Func025002 )
    // Hide Units
    set udg_HiddenUnits = GetUnitsOfPlayerMatching(udg_AP1_Player, Condition(function Trig_Tunnel01_Setup_Func027002002))
    call ForGroupBJ( GetUnitsOfPlayerMatching(Player(PLAYER_NEUTRAL_AGGRESSIVE), Condition(function Trig_Tunnel01_Setup_Func028001002)), function Trig_Tunnel01_Setup_Func028002 )
    call ForGroupBJ( udg_HiddenUnits, function Trig_Tunnel01_Setup_Func029002 )
    // Hide Items
    call EnumItemsInRectBJ( GetPlayableMapRect(), function Trig_Tunnel01_Setup_Func031002 )
    // Remove Buffs
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_AP1_Player), function Trig_Tunnel01_Setup_Func033002 )
    // Set Sound Position
    call SetSoundPositionLocBJ( udg_SoundCollapse, GetRectCenter(gg_rct_Tunnel01), 0 )
    call SetSoundPositionLocBJ( udg_SoundEarthquake, GetRectCenter(gg_rct_Tunnel01), 256.00 )
    // Pause Goblin Respawn Timer
    call PauseTimerBJ( true, udg_GoblinRespawnTimer )
endfunction

//===========================================================================
function InitTrig_Tunnel01_Setup takes nothing returns nothing
    set gg_trg_Tunnel01_Setup = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Tunnel01_Setup, function Trig_Tunnel01_Setup_Actions )
endfunction

//===========================================================================
// Trigger: Tunnel01 MiniCinematic Q
//===========================================================================
function Trig_Tunnel01_MiniCinematic_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Tunnel01_MiniCinematic_Q_Func012001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_Tunnel01_MiniCinematic_Q_Actions takes nothing returns nothing
    set udg_InCinematic = true
    call SetDoodadAnimationRectBJ( "stand 2", 'ZZcd', gg_rct_Tunnel01Dust01 )
    call SetDoodadAnimationRectBJ( "stand", 'ZZcd', gg_rct_Tunnel01Dust02 )
    call SetDoodadAnimationRectBJ( "stand 2", 'ZZcd', gg_rct_Tunnel01Dust03 )
    call SetDoodadAnimationRectBJ( "stand", 'ZZcd', gg_rct_Tunnel01Dust04 )
    // Fade Out
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.25 )
    // Set Up Scene
    call CinematicModeExBJ( true, GetPlayersAll(), 0.2 )
    if ( Trig_Tunnel01_MiniCinematic_Q_Func012001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Tunnel01_Setup )
    // start dust falling
    call TriggerSleepAction( 0.10 )
    call CameraSetupApplyForPlayer( true, gg_cam_Tunnel01A, udg_AP1_Player, 0 )
    call CameraSetSourceNoiseForPlayer( udg_AP1_Player, ( 20.00 * GetRandomReal(0.60, 1.40) ), ( 1000.00 * GetRandomReal(0.60, 1.40) ) )
    call PlaySoundBJ( udg_SoundEarthquake )
    // Fade In
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.25 )
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // MINI-CINEMATIC BEGINS - Mini-Cinematics Cannot Be Skipped
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    call TriggerSleepAction( 2.00 )
    call SetDoodadAnimationRectBJ( "stand", 'ZZcd', gg_rct_Tunnel01Dust01 )
    call SetDoodadAnimationRectBJ( "stand 2", 'ZZcd', gg_rct_Tunnel01Dust02 )
    call SetDoodadAnimationRectBJ( "stand", 'ZZcd', gg_rct_Tunnel01Dust03 )
    call SetDoodadAnimationRectBJ( "stand 2", 'ZZcd', gg_rct_Tunnel01Dust04 )
    call TriggerSleepAction( 2.00 )
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // MINI-CINEMATIC ENDS - Mini-Cinematics Cannot Be Skipped
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // Fade Out
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call StopSoundBJ( gg_snd_Earthquake, true )
    call TriggerSleepAction( 0.25 )
    // Cleanup
    call ConditionalTriggerExecute( gg_trg_Tunnel01_Cleanup )
    call CinematicModeExBJ( false, GetPlayersAll(), 0.2 )
    call TriggerSleepAction( 0.10 )
    // Fade In
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.25 )
    set udg_InCinematic = false
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
    set udg_LBColumnsDestroyed = ( udg_LBColumnsDestroyed + 1 )
    call ConditionalTriggerExecute( gg_trg_Update_Column_Leaderboard )
endfunction

//===========================================================================
function InitTrig_Tunnel01_MiniCinematic_Q takes nothing returns nothing
    set gg_trg_Tunnel01_MiniCinematic_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Tunnel01_MiniCinematic_Q, Condition( function Trig_Tunnel01_MiniCinematic_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Tunnel01_MiniCinematic_Q, function Trig_Tunnel01_MiniCinematic_Q_Actions )
endfunction

//===========================================================================
// Trigger: Tunnel01 Cleanup
//===========================================================================
function Trig_Tunnel01_Cleanup_Func036002 takes nothing returns nothing
    call SetItemVisibleBJ( true, GetEnumItem() )
endfunction

function Trig_Tunnel01_Cleanup_Func038002 takes nothing returns nothing
    call ShowUnitShow( GetEnumUnit() )
endfunction

function Trig_Tunnel01_Cleanup_Func042001 takes nothing returns boolean
    return ( udg_ExpDisabledForRexxar == false )
endfunction

function Trig_Tunnel01_Cleanup_Func043001 takes nothing returns boolean
    return ( udg_ExpDisabledForRokhan == false )
endfunction

function Trig_Tunnel01_Cleanup_Func044001 takes nothing returns boolean
    return ( udg_ExpDisabledForChen == false )
endfunction

function Trig_Tunnel01_Cleanup_Actions takes nothing returns nothing
    // Stop Earthquake
    call CameraClearNoiseForPlayer( udg_AP1_Player )
    // Spawn Rocks
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel01Rock01), GetRandomDirectionDeg(), 1, 0 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel01Rock02), GetRandomDirectionDeg(), 1, 1 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel01Rock03), GetRandomDirectionDeg(), 1, 2 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel01Rock04), GetRandomDirectionDeg(), 1, 3 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel01Rock05), GetRandomDirectionDeg(), 1, 4 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel01Rock06), GetRandomDirectionDeg(), 1, 5 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel01Rock07), GetRandomDirectionDeg(), 1, 4 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel01Rock08), GetRandomDirectionDeg(), 1, 3 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel01Rock09), GetRandomDirectionDeg(), 1, 2 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel01Rock10), GetRandomDirectionDeg(), 1, 1 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel01Rock11), GetRandomDirectionDeg(), 1, 0 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel01Rock12), GetRandomDirectionDeg(), 1, 5 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel01Rock13), GetRandomDirectionDeg(), 1, 4 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    // Turn Off Dust
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel01Dust01 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel01Dust02 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel01Dust03 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel01Dust04 )
    // Unhide Items
    call EnumItemsInRectBJ( GetPlayableMapRect(), function Trig_Tunnel01_Cleanup_Func036002 )
    // Unhide Units
    call ForGroupBJ( udg_HiddenUnits, function Trig_Tunnel01_Cleanup_Func038002 )
    // Unpause Units
    call PauseAllUnitsBJ( false )
    // Re-enable XP Gain
    if ( Trig_Tunnel01_Cleanup_Func042001() ) then
        call SuspendHeroXPBJ( true, udg_Rexxar )
    else
        call DoNothing(  )
    endif
    if ( Trig_Tunnel01_Cleanup_Func043001() ) then
        call SuspendHeroXPBJ( true, udg_Rokhan )
    else
        call DoNothing(  )
    endif
    if ( Trig_Tunnel01_Cleanup_Func044001() ) then
        call SuspendHeroXPBJ( true, udg_Chen )
    else
        call DoNothing(  )
    endif
    // Restore Selection
    call SelectGroupBJ( udg_SelectedUnits )
    // Reset Camera
    call CameraResetSmoothingFactorBJ(  )
    call ResetToGameCameraForPlayer( udg_AP1_Player, 0 )
    call PanCameraToTimedLocForPlayer( udg_AP1_Player, udg_CameraReturnPoint, 0 )
    // Disable Camera Bounds
    call SetCameraBoundsToRectForPlayerBJ( udg_AP1_Player, GetCameraBoundsMapRect() )
    // Restore Abilities
    call SetPlayerAbilityAvailableBJ( true, 'AIba', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIcd', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIad', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIae', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIcf', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIgx', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'Ashm', udg_AP1_Player )
    // Resume Goblin Sapper Respawn Timer
    call StartTimerBJ( udg_GoblinRespawnTimer, true, 10.00 )
endfunction

//===========================================================================
function InitTrig_Tunnel01_Cleanup takes nothing returns nothing
    set gg_trg_Tunnel01_Cleanup = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Tunnel01_Cleanup, function Trig_Tunnel01_Cleanup_Actions )
endfunction

//===========================================================================
// Trigger: Tunnel02 Setup
//===========================================================================
function Trig_Tunnel02_Setup_Func023002 takes nothing returns nothing
    call SetItemPositionLoc( GetEnumItem(), GetRandomLocInRect(gg_rct_Tunnel02MoveTo) )
endfunction

function Trig_Tunnel02_Setup_Func024002 takes nothing returns nothing
    call SetUnitPositionLoc( GetEnumUnit(), GetRandomLocInRect(gg_rct_Tunnel02MoveTo) )
endfunction

function Trig_Tunnel02_Setup_Func025002 takes nothing returns nothing
    call SetUnitPositionLoc( GetEnumUnit(), GetRandomLocInRect(gg_rct_Tunnel02MoveTo) )
endfunction

function Trig_Tunnel02_Setup_Func027002002 takes nothing returns boolean
    return ( IsUnitHiddenBJ(GetFilterUnit()) == false )
endfunction

function Trig_Tunnel02_Setup_Func028001002 takes nothing returns boolean
    return ( IsUnitHiddenBJ(GetFilterUnit()) == false )
endfunction

function Trig_Tunnel02_Setup_Func028002 takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_HiddenUnits )
endfunction

function Trig_Tunnel02_Setup_Func029002 takes nothing returns nothing
    call ShowUnitHide( GetEnumUnit() )
endfunction

function Trig_Tunnel02_Setup_Func031002 takes nothing returns nothing
    call SetItemVisibleBJ( false, GetEnumItem() )
endfunction

function Trig_Tunnel02_Setup_Func033002 takes nothing returns nothing
    call UnitRemoveBuffsBJ( bj_REMOVEBUFFS_NONTLIFE, GetEnumUnit() )
endfunction

function Trig_Tunnel02_Setup_Actions takes nothing returns nothing
    // Disable Abilities
    call SetPlayerAbilityAvailableBJ( false, 'AIba', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIcd', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIad', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIae', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIcf', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIgx', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'Ashm', udg_AP1_Player )
    // Disable Camera Bounds
    call SetCameraBoundsToRectForPlayerBJ( udg_AP1_Player, GetEntireMapRect() )
    // Save Camera Position
    set udg_CameraReturnPoint = GetCameraTargetPositionLoc()
    // Save Selection
    set udg_SelectedUnits = GetUnitsSelectedAll(udg_AP1_Player)
    call ClearSelection(  )
    // Disable XP Gain
    call SuspendHeroXPBJ( false, udg_Rexxar )
    call SuspendHeroXPBJ( false, udg_Rokhan )
    call SuspendHeroXPBJ( false, udg_Chen )
    // Pause Units
    call PauseAllUnitsBJ( true )
    // Move Units That Are In The Way Of Spawned Rocks
    call EnumItemsInRectBJ( gg_rct_Tunnel02Area, function Trig_Tunnel02_Setup_Func023002 )
    call ForGroupBJ( GetUnitsInRectOfPlayer(gg_rct_Tunnel02Area, udg_AP1_Player), function Trig_Tunnel02_Setup_Func024002 )
    call ForGroupBJ( GetUnitsInRectOfPlayer(gg_rct_Tunnel02Area, Player(PLAYER_NEUTRAL_AGGRESSIVE)), function Trig_Tunnel02_Setup_Func025002 )
    // Hide Units
    set udg_HiddenUnits = GetUnitsOfPlayerMatching(udg_AP1_Player, Condition(function Trig_Tunnel02_Setup_Func027002002))
    call ForGroupBJ( GetUnitsOfPlayerMatching(Player(PLAYER_NEUTRAL_AGGRESSIVE), Condition(function Trig_Tunnel02_Setup_Func028001002)), function Trig_Tunnel02_Setup_Func028002 )
    call ForGroupBJ( udg_HiddenUnits, function Trig_Tunnel02_Setup_Func029002 )
    // Hide Items
    call EnumItemsInRectBJ( GetPlayableMapRect(), function Trig_Tunnel02_Setup_Func031002 )
    // Remove Buffs
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_AP1_Player), function Trig_Tunnel02_Setup_Func033002 )
    // Set Sound Position
    call SetSoundPositionLocBJ( udg_SoundCollapse, GetRectCenter(gg_rct_Tunnel02), 0 )
    call SetSoundPositionLocBJ( udg_SoundEarthquake, GetRectCenter(gg_rct_Tunnel02), 256.00 )
    // Pause Goblin Respawn Timer
    call PauseTimerBJ( true, udg_GoblinRespawnTimer )
endfunction

//===========================================================================
function InitTrig_Tunnel02_Setup takes nothing returns nothing
    set gg_trg_Tunnel02_Setup = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Tunnel02_Setup, function Trig_Tunnel02_Setup_Actions )
endfunction

//===========================================================================
// Trigger: Tunnel02 MiniCinematic Q
//===========================================================================
function Trig_Tunnel02_MiniCinematic_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Tunnel02_MiniCinematic_Q_Func011001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_Tunnel02_MiniCinematic_Q_Actions takes nothing returns nothing
    set udg_InCinematic = true
    call SetDoodadAnimationRectBJ( "stand", 'ZZcd', gg_rct_Tunnel02Dust01 )
    call SetDoodadAnimationRectBJ( "stand 2", 'ZZcd', gg_rct_Tunnel02Dust02 )
    call SetDoodadAnimationRectBJ( "stand", 'ZZcd', gg_rct_Tunnel02Dust03 )
    call SetDoodadAnimationRectBJ( "stand 2", 'ZZcd', gg_rct_Tunnel02Dust04 )
    // Fade Out
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.25 )
    // Set Up Scene
    call CinematicModeExBJ( true, GetPlayersAll(), 0.2 )
    if ( Trig_Tunnel02_MiniCinematic_Q_Func011001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Tunnel02_Setup )
    // start dust falling
    call TriggerSleepAction( 0.10 )
    call CameraSetupApplyForPlayer( true, gg_cam_Tunnel02, udg_AP1_Player, 0 )
    call CameraSetupApplyForPlayer( true, gg_cam_Tunnel02B, udg_AP1_Player, 5.00 )
    call CameraSetSourceNoiseForPlayer( udg_AP1_Player, ( 20.00 * GetRandomReal(0.60, 1.40) ), ( 1000.00 * GetRandomReal(0.60, 1.40) ) )
    call PlaySoundBJ( udg_SoundEarthquake )
    // Fade In
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.25 )
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // MINI-CINEMATIC BEGINS - Mini-Cinematics Cannot Be Skipped
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    call TriggerSleepAction( 2.00 )
    call SetDoodadAnimationRectBJ( "stand 2", 'ZZcd', gg_rct_Tunnel02Dust01 )
    call SetDoodadAnimationRectBJ( "stand", 'ZZcd', gg_rct_Tunnel02Dust02 )
    call SetDoodadAnimationRectBJ( "stand 2", 'ZZcd', gg_rct_Tunnel02Dust03 )
    call SetDoodadAnimationRectBJ( "stand", 'ZZcd', gg_rct_Tunnel02Dust04 )
    call TriggerSleepAction( 3.00 )
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // MINI-CINEMATIC ENDS - Mini-Cinematics Cannot Be Skipped
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // Fade Out
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call StopSoundBJ( gg_snd_Earthquake, true )
    call TriggerSleepAction( 0.25 )
    // Cleanup
    call ConditionalTriggerExecute( gg_trg_Tunnel02_Cleanup )
    call CinematicModeExBJ( false, GetPlayersAll(), 0.2 )
    call TriggerSleepAction( 0.10 )
    // Fade In
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.25 )
    set udg_InCinematic = false
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
    set udg_LBColumnsDestroyed = ( udg_LBColumnsDestroyed + 1 )
    call ConditionalTriggerExecute( gg_trg_Update_Column_Leaderboard )
endfunction

//===========================================================================
function InitTrig_Tunnel02_MiniCinematic_Q takes nothing returns nothing
    set gg_trg_Tunnel02_MiniCinematic_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Tunnel02_MiniCinematic_Q, Condition( function Trig_Tunnel02_MiniCinematic_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Tunnel02_MiniCinematic_Q, function Trig_Tunnel02_MiniCinematic_Q_Actions )
endfunction

//===========================================================================
// Trigger: Tunnel02 Cleanup
//===========================================================================
function Trig_Tunnel02_Cleanup_Func036002 takes nothing returns nothing
    call SetItemVisibleBJ( true, GetEnumItem() )
endfunction

function Trig_Tunnel02_Cleanup_Func038002 takes nothing returns nothing
    call ShowUnitShow( GetEnumUnit() )
endfunction

function Trig_Tunnel02_Cleanup_Func042001 takes nothing returns boolean
    return ( udg_ExpDisabledForRexxar == false )
endfunction

function Trig_Tunnel02_Cleanup_Func043001 takes nothing returns boolean
    return ( udg_ExpDisabledForRokhan == false )
endfunction

function Trig_Tunnel02_Cleanup_Func044001 takes nothing returns boolean
    return ( udg_ExpDisabledForChen == false )
endfunction

function Trig_Tunnel02_Cleanup_Actions takes nothing returns nothing
    // Stop Earthquake
    call CameraClearNoiseForPlayer( udg_AP1_Player )
    // Spawn Rocks
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel02Rock01), GetRandomDirectionDeg(), 1, 0 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel02Rock02), GetRandomDirectionDeg(), 1, 1 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel02Rock03), GetRandomDirectionDeg(), 1, 2 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel02Rock04), GetRandomDirectionDeg(), 1, 3 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel02Rock05), GetRandomDirectionDeg(), 1, 4 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel02Rock06), GetRandomDirectionDeg(), 1, 5 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel02Rock07), GetRandomDirectionDeg(), 1, 4 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel02Rock08), GetRandomDirectionDeg(), 1, 3 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel02Rock09), GetRandomDirectionDeg(), 1, 2 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel02Rock10), GetRandomDirectionDeg(), 1, 1 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel02Rock11), GetRandomDirectionDeg(), 1, 0 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel02Rock12), GetRandomDirectionDeg(), 1, 5 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel02Rock13), GetRandomDirectionDeg(), 1, 4 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    // Turn Off Dust
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel02Dust01 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel02Dust02 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel02Dust03 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel02Dust04 )
    // Unhide Items
    call EnumItemsInRectBJ( GetPlayableMapRect(), function Trig_Tunnel02_Cleanup_Func036002 )
    // Unhide Units
    call ForGroupBJ( udg_HiddenUnits, function Trig_Tunnel02_Cleanup_Func038002 )
    // Unpause Units
    call PauseAllUnitsBJ( false )
    // Re-enable XP Gain
    if ( Trig_Tunnel02_Cleanup_Func042001() ) then
        call SuspendHeroXPBJ( true, udg_Rexxar )
    else
        call DoNothing(  )
    endif
    if ( Trig_Tunnel02_Cleanup_Func043001() ) then
        call SuspendHeroXPBJ( true, udg_Rokhan )
    else
        call DoNothing(  )
    endif
    if ( Trig_Tunnel02_Cleanup_Func044001() ) then
        call SuspendHeroXPBJ( true, udg_Chen )
    else
        call DoNothing(  )
    endif
    // Restore Selection
    call SelectGroupBJ( udg_SelectedUnits )
    // Reset Camera
    call CameraResetSmoothingFactorBJ(  )
    call ResetToGameCameraForPlayer( udg_AP1_Player, 0 )
    call PanCameraToTimedLocForPlayer( udg_AP1_Player, udg_CameraReturnPoint, 0 )
    // Disable Camera Bounds
    call SetCameraBoundsToRectForPlayerBJ( udg_AP1_Player, GetCameraBoundsMapRect() )
    // Restore Abilities
    call SetPlayerAbilityAvailableBJ( true, 'AIba', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIcd', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIad', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIae', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIcf', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIgx', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'Ashm', udg_AP1_Player )
    // Resume Goblin Sapper Respawn Timer
    call StartTimerBJ( udg_GoblinRespawnTimer, true, 10.00 )
endfunction

//===========================================================================
function InitTrig_Tunnel02_Cleanup takes nothing returns nothing
    set gg_trg_Tunnel02_Cleanup = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Tunnel02_Cleanup, function Trig_Tunnel02_Cleanup_Actions )
endfunction

//===========================================================================
// Trigger: Tunnel03 Setup
//===========================================================================
function Trig_Tunnel03_Setup_Func023002 takes nothing returns nothing
    call SetItemPositionLoc( GetEnumItem(), GetRandomLocInRect(gg_rct_Tunnel03MoveTo) )
endfunction

function Trig_Tunnel03_Setup_Func024002 takes nothing returns nothing
    call SetUnitPositionLoc( GetEnumUnit(), GetRandomLocInRect(gg_rct_Tunnel03MoveTo) )
endfunction

function Trig_Tunnel03_Setup_Func025002 takes nothing returns nothing
    call SetUnitPositionLoc( GetEnumUnit(), GetRandomLocInRect(gg_rct_Tunnel03MoveTo) )
endfunction

function Trig_Tunnel03_Setup_Func027002002 takes nothing returns boolean
    return ( IsUnitHiddenBJ(GetFilterUnit()) == false )
endfunction

function Trig_Tunnel03_Setup_Func028001002 takes nothing returns boolean
    return ( IsUnitHiddenBJ(GetFilterUnit()) == false )
endfunction

function Trig_Tunnel03_Setup_Func028002 takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_HiddenUnits )
endfunction

function Trig_Tunnel03_Setup_Func029002 takes nothing returns nothing
    call ShowUnitHide( GetEnumUnit() )
endfunction

function Trig_Tunnel03_Setup_Func037002 takes nothing returns nothing
    call SetItemVisibleBJ( false, GetEnumItem() )
endfunction

function Trig_Tunnel03_Setup_Func039002 takes nothing returns nothing
    call UnitRemoveBuffsBJ( bj_REMOVEBUFFS_NONTLIFE, GetEnumUnit() )
endfunction

function Trig_Tunnel03_Setup_Actions takes nothing returns nothing
    // Disable Abilities
    call SetPlayerAbilityAvailableBJ( false, 'AIba', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIcd', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIad', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIae', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIcf', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'AIgx', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( false, 'Ashm', udg_AP1_Player )
    // Disable Camera Bounds
    call SetCameraBoundsToRectForPlayerBJ( udg_AP1_Player, GetEntireMapRect() )
    // Save Camera Position
    set udg_CameraReturnPoint = GetCameraTargetPositionLoc()
    // Save Selection
    set udg_SelectedUnits = GetUnitsSelectedAll(udg_AP1_Player)
    call ClearSelection(  )
    // Disable XP Gain
    call SuspendHeroXPBJ( false, udg_Rexxar )
    call SuspendHeroXPBJ( false, udg_Rokhan )
    call SuspendHeroXPBJ( false, udg_Chen )
    // Pause Units
    call PauseAllUnitsBJ( true )
    // Move Units That Are In The Way Of Spawned Rocks
    call EnumItemsInRectBJ( gg_rct_Tunnel03Area, function Trig_Tunnel03_Setup_Func023002 )
    call ForGroupBJ( GetUnitsInRectOfPlayer(gg_rct_Tunnel03Area, udg_AP1_Player), function Trig_Tunnel03_Setup_Func024002 )
    call ForGroupBJ( GetUnitsInRectOfPlayer(gg_rct_Tunnel03Area, Player(PLAYER_NEUTRAL_AGGRESSIVE)), function Trig_Tunnel03_Setup_Func025002 )
    // Hide Units
    set udg_HiddenUnits = GetUnitsOfPlayerMatching(udg_AP1_Player, Condition(function Trig_Tunnel03_Setup_Func027002002))
    call ForGroupBJ( GetUnitsOfPlayerMatching(Player(PLAYER_NEUTRAL_AGGRESSIVE), Condition(function Trig_Tunnel03_Setup_Func028001002)), function Trig_Tunnel03_Setup_Func028002 )
    call ForGroupBJ( udg_HiddenUnits, function Trig_Tunnel03_Setup_Func029002 )
    // Create Cinematic Kobold
    call CreateNUnitsAtLoc( 1, 'nkot', Player(PLAYER_NEUTRAL_AGGRESSIVE), GetRectCenter(gg_rct_Spawn16X), 225.00 )
    set udg_CinematicKobold = GetLastCreatedUnit()
    call ShowUnitHide( udg_CinematicKobold )
    // Unhide/Unpause Units
    call PauseUnitBJ( false, udg_CinematicKobold )
    // Hide Items
    call EnumItemsInRectBJ( GetPlayableMapRect(), function Trig_Tunnel03_Setup_Func037002 )
    // Remove Buffs
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_AP1_Player), function Trig_Tunnel03_Setup_Func039002 )
    // Set Sound Position
    call SetSoundPositionLocBJ( udg_SoundCollapse, GetRectCenter(gg_rct_Tunnel03), 0 )
    call SetSoundPositionLocBJ( udg_SoundEarthquake, GetRectCenter(gg_rct_Tunnel03), 256.00 )
    // Pause Goblin Respawn Timer
    call PauseTimerBJ( true, udg_GoblinRespawnTimer )
endfunction

//===========================================================================
function InitTrig_Tunnel03_Setup takes nothing returns nothing
    set gg_trg_Tunnel03_Setup = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Tunnel03_Setup, function Trig_Tunnel03_Setup_Actions )
endfunction

//===========================================================================
// Trigger: Tunnel03 MiniCinematic Q
//===========================================================================
function Trig_Tunnel03_MiniCinematic_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Tunnel03_MiniCinematic_Q_Func011001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_Tunnel03_MiniCinematic_Q_Actions takes nothing returns nothing
    set udg_InCinematic = true
    call SetDoodadAnimationRectBJ( "stand 2", 'ZZcd', gg_rct_Tunnel03Dust01 )
    call SetDoodadAnimationRectBJ( "stand", 'ZZcd', gg_rct_Tunnel03Dust02 )
    call SetDoodadAnimationRectBJ( "stand 2", 'ZZcd', gg_rct_Tunnel03Dust03 )
    call SetDoodadAnimationRectBJ( "stand", 'ZZcd', gg_rct_Tunnel03Dust04 )
    // Fade Out
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.25 )
    // Set Up Scene
    call CinematicModeExBJ( true, GetPlayersAll(), 0.2 )
    if ( Trig_Tunnel03_MiniCinematic_Q_Func011001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Tunnel03_Setup )
    // start dust falling
    call TriggerSleepAction( 0.10 )
    call CameraSetupApplyForPlayer( true, gg_cam_Tunnel03, udg_AP1_Player, 0 )
    call CameraSetSourceNoiseForPlayer( udg_AP1_Player, ( 20.00 * GetRandomReal(0.60, 1.40) ), ( 1000.00 * GetRandomReal(0.60, 1.40) ) )
    call PlaySoundBJ( udg_SoundEarthquake )
    // Fade In
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.25 )
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // MINI-CINEMATIC BEGINS - Mini-Cinematics Cannot Be Skipped
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    call TriggerSleepAction( 1.20 )
    call ShowUnitShow( udg_CinematicKobold )
    call IssuePointOrderLocBJ( udg_CinematicKobold, "move", GetRectCenter(gg_rct_Tunnel03Rock12) )
    call TriggerSleepAction( 0.40 )
    call SetDoodadAnimationRectBJ( "stand", 'ZZcd', gg_rct_Tunnel03Dust01 )
    call SetDoodadAnimationRectBJ( "stand 2", 'ZZcd', gg_rct_Tunnel03Dust02 )
    call SetDoodadAnimationRectBJ( "stand", 'ZZcd', gg_rct_Tunnel03Dust03 )
    call SetDoodadAnimationRectBJ( "stand 2", 'ZZcd', gg_rct_Tunnel03Dust04 )
    call ExplodeUnitBJ( udg_CinematicKobold )
    call PlaySoundAtPointBJ( gg_snd_ArtilleryCorpseExplodeDeath1, 100.00, GetRectCenter(gg_rct_KoboldExplodeSound), 0 )
    call TriggerSleepAction( 1.60 )
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // MINI-CINEMATIC ENDS - Mini-Cinematics Cannot Be Skipped
    // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    // Fade Out
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call StopSoundBJ( gg_snd_Earthquake, true )
    call TriggerSleepAction( 0.25 )
    // Cleanup
    call ConditionalTriggerExecute( gg_trg_Tunnel03_Cleanup )
    call CinematicModeExBJ( false, GetPlayersAll(), 0.2 )
    call TriggerSleepAction( 0.10 )
    // Fade In
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 0.25, "ReplaceableTextures\\CameraMasks\\White_mask.tga", 0, 0, 0, 0 )
    call TriggerSleepAction( 0.25 )
    set udg_InCinematic = false
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
    set udg_LBColumnsDestroyed = ( udg_LBColumnsDestroyed + 1 )
    call ConditionalTriggerExecute( gg_trg_Update_Column_Leaderboard )
endfunction

//===========================================================================
function InitTrig_Tunnel03_MiniCinematic_Q takes nothing returns nothing
    set gg_trg_Tunnel03_MiniCinematic_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Tunnel03_MiniCinematic_Q, Condition( function Trig_Tunnel03_MiniCinematic_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Tunnel03_MiniCinematic_Q, function Trig_Tunnel03_MiniCinematic_Q_Actions )
endfunction

//===========================================================================
// Trigger: Tunnel03 Cleanup
//===========================================================================
function Trig_Tunnel03_Cleanup_Func036002 takes nothing returns nothing
    call SetItemVisibleBJ( true, GetEnumItem() )
endfunction

function Trig_Tunnel03_Cleanup_Func038002 takes nothing returns nothing
    call ShowUnitShow( GetEnumUnit() )
endfunction

function Trig_Tunnel03_Cleanup_Func043001 takes nothing returns boolean
    return ( udg_ExpDisabledForRexxar == false )
endfunction

function Trig_Tunnel03_Cleanup_Func044001 takes nothing returns boolean
    return ( udg_ExpDisabledForRokhan == false )
endfunction

function Trig_Tunnel03_Cleanup_Func045001 takes nothing returns boolean
    return ( udg_ExpDisabledForChen == false )
endfunction

function Trig_Tunnel03_Cleanup_Actions takes nothing returns nothing
    // Stop Earthquake
    call CameraClearNoiseForPlayer( udg_AP1_Player )
    // Spawn Rocks
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel03Rock01), GetRandomDirectionDeg(), 1, 0 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel03Rock02), GetRandomDirectionDeg(), 1, 1 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel03Rock03), GetRandomDirectionDeg(), 1, 2 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel03Rock04), GetRandomDirectionDeg(), 1, 3 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel03Rock05), GetRandomDirectionDeg(), 1, 4 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel03Rock06), GetRandomDirectionDeg(), 1, 5 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel03Rock07), GetRandomDirectionDeg(), 1, 6 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel03Rock08), GetRandomDirectionDeg(), 1, 7 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel03Rock09), GetRandomDirectionDeg(), 1, 8 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel03Rock10), GetRandomDirectionDeg(), 1, 9 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel03Rock11), GetRandomDirectionDeg(), 1, 10 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel03Rock12), GetRandomDirectionDeg(), 1, 11 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    call CreateDestructableLoc( 'LTrc', GetRectCenter(gg_rct_Tunnel03Rock13), GetRandomDirectionDeg(), 1, 12 )
    call SetDestructableInvulnerableBJ( GetLastCreatedDestructable(), true )
    // Turn Off Dust
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel03Dust01 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel03Dust02 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel03Dust03 )
    call SetDoodadAnimationRectBJ( "death", 'ZZcd', gg_rct_Tunnel03Dust04 )
    // Unhide Items
    call EnumItemsInRectBJ( GetPlayableMapRect(), function Trig_Tunnel03_Cleanup_Func036002 )
    // Unhide/Remove Units
    call ForGroupBJ( udg_HiddenUnits, function Trig_Tunnel03_Cleanup_Func038002 )
    call RemoveUnit( udg_CinematicKobold )
    // Unpause Units
    call PauseAllUnitsBJ( false )
    // Re-enable XP Gain
    if ( Trig_Tunnel03_Cleanup_Func043001() ) then
        call SuspendHeroXPBJ( true, udg_Rexxar )
    else
        call DoNothing(  )
    endif
    if ( Trig_Tunnel03_Cleanup_Func044001() ) then
        call SuspendHeroXPBJ( true, udg_Rokhan )
    else
        call DoNothing(  )
    endif
    if ( Trig_Tunnel03_Cleanup_Func045001() ) then
        call SuspendHeroXPBJ( true, udg_Chen )
    else
        call DoNothing(  )
    endif
    // Restore Selection
    call SelectGroupBJ( udg_SelectedUnits )
    // Reset Camera
    call CameraResetSmoothingFactorBJ(  )
    call ResetToGameCameraForPlayer( udg_AP1_Player, 0 )
    call PanCameraToTimedLocForPlayer( udg_AP1_Player, udg_CameraReturnPoint, 0 )
    // Disable Camera Bounds
    call SetCameraBoundsToRectForPlayerBJ( udg_AP1_Player, GetCameraBoundsMapRect() )
    // Restore Abilities
    call SetPlayerAbilityAvailableBJ( true, 'AIba', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIcd', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIad', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIae', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIcf', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'AIgx', udg_AP1_Player )
    call SetPlayerAbilityAvailableBJ( true, 'Ashm', udg_AP1_Player )
    // Resume Goblin Sapper Respawn Timer
    call StartTimerBJ( udg_GoblinRespawnTimer, true, 10.00 )
endfunction

//===========================================================================
function InitTrig_Tunnel03_Cleanup takes nothing returns nothing
    set gg_trg_Tunnel03_Cleanup = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Tunnel03_Cleanup, function Trig_Tunnel03_Cleanup_Actions )
endfunction

//===========================================================================
// Trigger: Quake Event
//===========================================================================
function Trig_Quake_Event_Actions takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_Quake_Shake )
    // Set up the next shake
    call StartTimerBJ( udg_QuakeTimer, false, ( 6.00 * GetRandomReal(0.75, 1.25) ) )
endfunction

//===========================================================================
function InitTrig_Quake_Event takes nothing returns nothing
    set gg_trg_Quake_Event = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Quake_Event, udg_QuakeTimer )
    call TriggerAddAction( gg_trg_Quake_Event, function Trig_Quake_Event_Actions )
endfunction

//===========================================================================
// Trigger: Quake Shake
//===========================================================================
function Trig_Quake_Shake_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quake_Shake_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call CameraSetSourceNoiseForPlayer( udg_AP1_Player, ( 20.00 * GetRandomReal(0.60, 1.40) ), ( 1000.00 * GetRandomReal(0.60, 1.40) ) )
    call SetSoundVolumeBJ( gg_snd_EarthquakeLoop1, 80.00 )
    call PlaySoundBJ( gg_snd_EarthquakeLoop1 )
    call TriggerSleepAction( ( 2.00 * GetRandomReal(0.75, 1.25) ) )
    call CameraClearNoiseForPlayer( udg_AP1_Player )
    call StopSoundBJ( gg_snd_EarthquakeLoop1, true )
    call EnableTrigger( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Quake_Shake takes nothing returns nothing
    set gg_trg_Quake_Shake = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quake_Shake, Condition( function Trig_Quake_Shake_Conditions ) )
    call TriggerAddAction( gg_trg_Quake_Shake, function Trig_Quake_Shake_Actions )
endfunction

//===========================================================================
// Trigger: Sync Quests
//===========================================================================
function Trig_Sync_Quests_Actions takes nothing returns nothing
    // Required Quests A
    call ConditionalTriggerExecute( gg_trg_Quest_DyingWish_Sync )
    call ConditionalTriggerExecute( gg_trg_Quest_EarnKeep_Sync )
    call ConditionalTriggerExecute( gg_trg_Quest_HarpyThreat_Sync )
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Sync )
    // Required Quests B
    call ConditionalTriggerExecute( gg_trg_Quest_SealTunnel_Sync )
    call ConditionalTriggerExecute( gg_trg_Quest_Survey_Sync )
    call ConditionalTriggerExecute( gg_trg_Quest_DestroyHumans_Sync )
    call ConditionalTriggerExecute( gg_trg_Quest_WarnTrolls_Sync )
    // Required Quests C
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Sync )
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Sync )
    call ConditionalTriggerExecute( gg_trg_Quest_Summit_Sync )
    // Optional Quests D
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Sync )
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderLizards_Sync )
    call ConditionalTriggerExecute( gg_trg_Quest_LizardEggs_Sync )
    // Optional Quests E
    call ConditionalTriggerExecute( gg_trg_Quest_Quillboars_Sync )
    call ConditionalTriggerExecute( gg_trg_Quest_WarlockCoven_Sync )
    call ConditionalTriggerExecute( gg_trg_Quest_StrangeBrew_Sync )
endfunction

//===========================================================================
function InitTrig_Sync_Quests takes nothing returns nothing
    set gg_trg_Sync_Quests = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Sync_Quests, function Trig_Sync_Quests_Actions )
endfunction

//===========================================================================
// Trigger: Quest DyingWish Create
//===========================================================================
function Trig_Quest_DyingWish_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_DyingWish_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestBJ( bj_QUESTTYPE_REQ_UNDISCOVERED, "TRIGSTR_194", "TRIGSTR_195", "ReplaceableTextures\\CommandButtons\\BTNGrunt.tga" )
    set udg_QuestDyingWish = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_196" )
    set udg_QuestDyingWishReq1 = GetLastCreatedQuestItemBJ()
    // Flag Quest Progress
    set udg_QuestDyingWishProgress = IMaxBJ(1, udg_QuestDyingWishProgress)
endfunction

//===========================================================================
function InitTrig_Quest_DyingWish_Create takes nothing returns nothing
    set gg_trg_Quest_DyingWish_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_DyingWish_Create, Condition( function Trig_Quest_DyingWish_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_DyingWish_Create, function Trig_Quest_DyingWish_Create_Actions )
endfunction

//===========================================================================
// Trigger: Quest DyingWish Discovered
//===========================================================================
function Trig_Quest_DyingWish_Discovered_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_DyingWish_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestDyingWish, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_197" )
    // Flag Quest Progress
    set udg_QuestDyingWishProgress = IMaxBJ(2, udg_QuestDyingWishProgress)
endfunction

//===========================================================================
function InitTrig_Quest_DyingWish_Discovered takes nothing returns nothing
    set gg_trg_Quest_DyingWish_Discovered = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_DyingWish_Discovered, function Trig_Quest_DyingWish_Discovered_Actions )
endfunction

//===========================================================================
// Trigger: Quest DyingWish Completed
//===========================================================================
function Trig_Quest_DyingWish_Completed_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_DyingWish_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestDyingWish, true )
    call QuestItemSetCompletedBJ( udg_QuestDyingWishReq1, true )
    call QuestSetCompletedBJ( udg_QuestDyingWish, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_198" )
    // Flag Quest Progress
    set udg_QuestDyingWishProgress = IMaxBJ(3, udg_QuestDyingWishProgress)
endfunction

//===========================================================================
function InitTrig_Quest_DyingWish_Completed takes nothing returns nothing
    set gg_trg_Quest_DyingWish_Completed = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_DyingWish_Completed, function Trig_Quest_DyingWish_Completed_Actions )
endfunction

//===========================================================================
// Trigger: Quest DyingWish Sync
//===========================================================================
function Trig_Quest_DyingWish_Sync_Func002001 takes nothing returns boolean
    return ( udg_QuestDyingWishProgress < 1 )
endfunction

function Trig_Quest_DyingWish_Sync_Func005001 takes nothing returns boolean
    return ( udg_QuestDyingWishProgress < 2 )
endfunction

function Trig_Quest_DyingWish_Sync_Func008001 takes nothing returns boolean
    return ( udg_QuestDyingWishProgress < 3 )
endfunction

function Trig_Quest_DyingWish_Sync_Actions takes nothing returns nothing
    // 1
    if ( Trig_Quest_DyingWish_Sync_Func002001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_DyingWish_Create )
    // 2
    if ( Trig_Quest_DyingWish_Sync_Func005001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestSetDiscoveredBJ( udg_QuestDyingWish, true )
    // 3
    if ( Trig_Quest_DyingWish_Sync_Func008001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestDyingWishReq1, true )
    call QuestSetCompletedBJ( udg_QuestDyingWish, true )
endfunction

//===========================================================================
function InitTrig_Quest_DyingWish_Sync takes nothing returns nothing
    set gg_trg_Quest_DyingWish_Sync = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_DyingWish_Sync, function Trig_Quest_DyingWish_Sync_Actions )
endfunction

//===========================================================================
// Trigger: Quest EarnKeep Create
//===========================================================================
function Trig_Quest_EarnKeep_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_EarnKeep_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestBJ( bj_QUESTTYPE_REQ_UNDISCOVERED, "TRIGSTR_199", "TRIGSTR_200", "ReplaceableTextures\\CommandButtons\\BTNThrall.tga" )
    set udg_QuestEarnKeep = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_201" )
    set udg_QuestEarnKeepReq1 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_202" )
    set udg_QuestEarnKeepReq2 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_203" )
    set udg_QuestEarnKeepReq3 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_204" )
    set udg_QuestEarnKeepReq4 = GetLastCreatedQuestItemBJ()
    // Flag Quest Progress
    set udg_QuestEarnKeepProgress = IMaxBJ(1, udg_QuestEarnKeepProgress)
endfunction

//===========================================================================
function InitTrig_Quest_EarnKeep_Create takes nothing returns nothing
    set gg_trg_Quest_EarnKeep_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_EarnKeep_Create, Condition( function Trig_Quest_EarnKeep_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_EarnKeep_Create, function Trig_Quest_EarnKeep_Create_Actions )
endfunction

//===========================================================================
// Trigger: Quest EarnKeep Discovered
//===========================================================================
function Trig_Quest_EarnKeep_Discovered_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_EarnKeep_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestEarnKeep, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_205" )
    // Flag Quest Progress
    set udg_QuestEarnKeepProgress = IMaxBJ(2, udg_QuestEarnKeepProgress)
endfunction

//===========================================================================
function InitTrig_Quest_EarnKeep_Discovered takes nothing returns nothing
    set gg_trg_Quest_EarnKeep_Discovered = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_EarnKeep_Discovered, function Trig_Quest_EarnKeep_Discovered_Actions )
endfunction

//===========================================================================
// Trigger: Quest EarnKeep Update1
//===========================================================================
function Trig_Quest_EarnKeep_Update1_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_EarnKeep_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestEarnKeep, true )
    call QuestItemSetCompletedBJ( udg_QuestEarnKeepReq1, true )
    set udg_QuestEarnKeepProgress1 = true
    // Display a quest message.
    call ConditionalTriggerExecute( gg_trg_Quest_EarnKeep_Update_Message )
    // Flag Quest Progress
    set udg_QuestEarnKeepProgress = IMaxBJ(2, udg_QuestEarnKeepProgress)
endfunction

//===========================================================================
function InitTrig_Quest_EarnKeep_Update1 takes nothing returns nothing
    set gg_trg_Quest_EarnKeep_Update1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_EarnKeep_Update1, function Trig_Quest_EarnKeep_Update1_Actions )
endfunction

//===========================================================================
// Trigger: Quest EarnKeep Update2
//===========================================================================
function Trig_Quest_EarnKeep_Update2_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_EarnKeep_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestEarnKeep, true )
    call QuestItemSetCompletedBJ( udg_QuestEarnKeepReq2, true )
    set udg_QuestEarnKeepProgress2 = true
    // Display a quest message.
    call ConditionalTriggerExecute( gg_trg_Quest_EarnKeep_Update_Message )
    // Flag Quest Progress
    set udg_QuestEarnKeepProgress = IMaxBJ(2, udg_QuestEarnKeepProgress)
endfunction

//===========================================================================
function InitTrig_Quest_EarnKeep_Update2 takes nothing returns nothing
    set gg_trg_Quest_EarnKeep_Update2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_EarnKeep_Update2, function Trig_Quest_EarnKeep_Update2_Actions )
endfunction

//===========================================================================
// Trigger: Quest EarnKeep Update3
//===========================================================================
function Trig_Quest_EarnKeep_Update3_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_EarnKeep_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestEarnKeep, true )
    call QuestItemSetCompletedBJ( udg_QuestEarnKeepReq3, true )
    set udg_QuestEarnKeepProgress3 = true
    // Display a quest message.
    call ConditionalTriggerExecute( gg_trg_Quest_EarnKeep_Update_Message )
    // Flag Quest Progress
    set udg_QuestEarnKeepProgress = IMaxBJ(2, udg_QuestEarnKeepProgress)
endfunction

//===========================================================================
function InitTrig_Quest_EarnKeep_Update3 takes nothing returns nothing
    set gg_trg_Quest_EarnKeep_Update3 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_EarnKeep_Update3, function Trig_Quest_EarnKeep_Update3_Actions )
endfunction

//===========================================================================
// Trigger: Quest EarnKeep Update Message
//===========================================================================
function Trig_Quest_EarnKeep_Update_Message_Func002C takes nothing returns boolean
    if ( not ( IsQuestItemCompleted(udg_QuestEarnKeepReq1) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_EarnKeep_Update_Message_Func003C takes nothing returns boolean
    if ( not ( IsQuestItemCompleted(udg_QuestEarnKeepReq2) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_EarnKeep_Update_Message_Func004C takes nothing returns boolean
    if ( not ( IsQuestItemCompleted(udg_QuestEarnKeepReq3) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_EarnKeep_Update_Message_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_206" )
    if ( Trig_Quest_EarnKeep_Update_Message_Func002C() ) then
        call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_REQUIREMENT, "TRIGSTR_208" )
    else
        call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_REQUIREMENT, "TRIGSTR_207" )
    endif
    if ( Trig_Quest_EarnKeep_Update_Message_Func003C() ) then
        call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_REQUIREMENT, "TRIGSTR_209" )
    else
        call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_REQUIREMENT, "TRIGSTR_210" )
    endif
    if ( Trig_Quest_EarnKeep_Update_Message_Func004C() ) then
        call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_REQUIREMENT, "TRIGSTR_211" )
    else
        call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_REQUIREMENT, "TRIGSTR_212" )
    endif
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_REQUIREMENT, "TRIGSTR_213" )
endfunction

//===========================================================================
function InitTrig_Quest_EarnKeep_Update_Message takes nothing returns nothing
    set gg_trg_Quest_EarnKeep_Update_Message = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_EarnKeep_Update_Message, function Trig_Quest_EarnKeep_Update_Message_Actions )
endfunction

//===========================================================================
// Trigger: Quest EarnKeep Completed
//===========================================================================
function Trig_Quest_EarnKeep_Completed_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_EarnKeep_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestEarnKeep, true )
    call QuestItemSetCompletedBJ( udg_QuestEarnKeepReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestEarnKeepReq2, true )
    call QuestItemSetCompletedBJ( udg_QuestEarnKeepReq3, true )
    call QuestItemSetCompletedBJ( udg_QuestEarnKeepReq4, true )
    call QuestSetCompletedBJ( udg_QuestEarnKeep, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_214" )
    // Flag Quest Progress
    set udg_QuestEarnKeepProgress1 = true
    set udg_QuestEarnKeepProgress2 = true
    set udg_QuestEarnKeepProgress3 = true
    set udg_QuestEarnKeepProgress = IMaxBJ(3, udg_QuestEarnKeepProgress)
endfunction

//===========================================================================
function InitTrig_Quest_EarnKeep_Completed takes nothing returns nothing
    set gg_trg_Quest_EarnKeep_Completed = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_EarnKeep_Completed, function Trig_Quest_EarnKeep_Completed_Actions )
endfunction

//===========================================================================
// Trigger: Quest EarnKeep Sync
//===========================================================================
function Trig_Quest_EarnKeep_Sync_Func002001 takes nothing returns boolean
    return ( udg_QuestEarnKeepProgress < 1 )
endfunction

function Trig_Quest_EarnKeep_Sync_Func005001 takes nothing returns boolean
    return ( udg_QuestEarnKeepProgress < 2 )
endfunction

function Trig_Quest_EarnKeep_Sync_Func007001 takes nothing returns boolean
    return ( udg_QuestEarnKeepProgress1 == true )
endfunction

function Trig_Quest_EarnKeep_Sync_Func008001 takes nothing returns boolean
    return ( udg_QuestEarnKeepProgress2 == true )
endfunction

function Trig_Quest_EarnKeep_Sync_Func009001 takes nothing returns boolean
    return ( udg_QuestEarnKeepProgress3 == true )
endfunction

function Trig_Quest_EarnKeep_Sync_Func011001 takes nothing returns boolean
    return ( udg_QuestEarnKeepProgress < 3 )
endfunction

function Trig_Quest_EarnKeep_Sync_Actions takes nothing returns nothing
    // 1
    if ( Trig_Quest_EarnKeep_Sync_Func002001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_EarnKeep_Create )
    // 2
    if ( Trig_Quest_EarnKeep_Sync_Func005001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestSetDiscoveredBJ( udg_QuestEarnKeep, true )
    if ( Trig_Quest_EarnKeep_Sync_Func007001() ) then
        call QuestItemSetCompletedBJ( udg_QuestEarnKeepReq1, true )
    else
        call DoNothing(  )
    endif
    if ( Trig_Quest_EarnKeep_Sync_Func008001() ) then
        call QuestItemSetCompletedBJ( udg_QuestEarnKeepReq2, true )
    else
        call DoNothing(  )
    endif
    if ( Trig_Quest_EarnKeep_Sync_Func009001() ) then
        call QuestItemSetCompletedBJ( udg_QuestEarnKeepReq3, true )
    else
        call DoNothing(  )
    endif
    // 3
    if ( Trig_Quest_EarnKeep_Sync_Func011001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestEarnKeepReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestEarnKeepReq2, true )
    call QuestItemSetCompletedBJ( udg_QuestEarnKeepReq3, true )
    call QuestItemSetCompletedBJ( udg_QuestEarnKeepReq4, true )
    call QuestSetCompletedBJ( udg_QuestEarnKeep, true )
endfunction

//===========================================================================
function InitTrig_Quest_EarnKeep_Sync takes nothing returns nothing
    set gg_trg_Quest_EarnKeep_Sync = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_EarnKeep_Sync, function Trig_Quest_EarnKeep_Sync_Actions )
endfunction

//===========================================================================
// Trigger: Quest HarpyThreat Create
//===========================================================================
function Trig_Quest_HarpyThreat_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_HarpyThreat_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestBJ( bj_QUESTTYPE_REQ_UNDISCOVERED, "TRIGSTR_215", "TRIGSTR_216", "ReplaceableTextures\\CommandButtons\\BTNHarpyWitch.tga" )
    set udg_QuestHarpyThreat = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_217" )
    set udg_QuestHarpyThreatReq1 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_218" )
    set udg_QuestHarpyThreatReq2 = GetLastCreatedQuestItemBJ()
    // Flag Quest Progress
    set udg_QuestHarpyThreatProgress = IMaxBJ(1, udg_QuestHarpyThreatProgress)
endfunction

//===========================================================================
function InitTrig_Quest_HarpyThreat_Create takes nothing returns nothing
    set gg_trg_Quest_HarpyThreat_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_HarpyThreat_Create, Condition( function Trig_Quest_HarpyThreat_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_HarpyThreat_Create, function Trig_Quest_HarpyThreat_Create_Actions )
endfunction

//===========================================================================
// Trigger: Quest HarpyThreat CreateReq3
//===========================================================================
function Trig_Quest_HarpyThreat_CreateReq3_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_HarpyThreat_CreateReq3_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestItemBJ( udg_QuestHarpyThreat, "TRIGSTR_219" )
    set udg_QuestHarpyThreatReq3 = GetLastCreatedQuestItemBJ()
endfunction

//===========================================================================
function InitTrig_Quest_HarpyThreat_CreateReq3 takes nothing returns nothing
    set gg_trg_Quest_HarpyThreat_CreateReq3 = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_HarpyThreat_CreateReq3, Condition( function Trig_Quest_HarpyThreat_CreateReq3_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_HarpyThreat_CreateReq3, function Trig_Quest_HarpyThreat_CreateReq3_Actions )
endfunction

//===========================================================================
// Trigger: Quest HarpyThreat Discovered
//===========================================================================
function Trig_Quest_HarpyThreat_Discovered_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_HarpyThreat_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestHarpyThreat, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_220" )
    // Flag Quest Progress
    set udg_QuestHarpyThreatProgress = IMaxBJ(2, udg_QuestHarpyThreatProgress)
endfunction

//===========================================================================
function InitTrig_Quest_HarpyThreat_Discovered takes nothing returns nothing
    set gg_trg_Quest_HarpyThreat_Discovered = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_HarpyThreat_Discovered, function Trig_Quest_HarpyThreat_Discovered_Actions )
endfunction

//===========================================================================
// Trigger: Quest HarpyThreat Update1
//===========================================================================
function Trig_Quest_HarpyThreat_Update1_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_HarpyThreat_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestHarpyThreat, true )
    call QuestItemSetCompletedBJ( udg_QuestHarpyThreatReq1, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_221" )
    // Flag Quest Progress
    set udg_QuestHarpyThreatProgress = IMaxBJ(3, udg_QuestHarpyThreatProgress)
endfunction

//===========================================================================
function InitTrig_Quest_HarpyThreat_Update1 takes nothing returns nothing
    set gg_trg_Quest_HarpyThreat_Update1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_HarpyThreat_Update1, function Trig_Quest_HarpyThreat_Update1_Actions )
endfunction

//===========================================================================
// Trigger: Quest HarpyThreat Update2
//===========================================================================
function Trig_Quest_HarpyThreat_Update2_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_HarpyThreat_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestHarpyThreat, true )
    call QuestItemSetCompletedBJ( udg_QuestHarpyThreatReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestHarpyThreatReq2, true )
    call ConditionalTriggerExecute( gg_trg_Quest_HarpyThreat_CreateReq3 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_222" )
    // Flag Quest Progress
    set udg_QuestHarpyThreatProgress = IMaxBJ(4, udg_QuestHarpyThreatProgress)
endfunction

//===========================================================================
function InitTrig_Quest_HarpyThreat_Update2 takes nothing returns nothing
    set gg_trg_Quest_HarpyThreat_Update2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_HarpyThreat_Update2, function Trig_Quest_HarpyThreat_Update2_Actions )
endfunction

//===========================================================================
// Trigger: Quest HarpyThreat Completed
//===========================================================================
function Trig_Quest_HarpyThreat_Completed_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_HarpyThreat_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestHarpyThreat, true )
    call QuestItemSetCompletedBJ( udg_QuestHarpyThreatReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestHarpyThreatReq2, true )
    call ConditionalTriggerExecute( gg_trg_Quest_HarpyThreat_CreateReq3 )
    call QuestItemSetCompletedBJ( udg_QuestHarpyThreatReq3, true )
    call QuestSetCompletedBJ( udg_QuestHarpyThreat, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_223" )
    // Flag Quest Progress
    set udg_QuestHarpyThreatProgress = IMaxBJ(5, udg_QuestHarpyThreatProgress)
endfunction

//===========================================================================
function InitTrig_Quest_HarpyThreat_Completed takes nothing returns nothing
    set gg_trg_Quest_HarpyThreat_Completed = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_HarpyThreat_Completed, function Trig_Quest_HarpyThreat_Completed_Actions )
endfunction

//===========================================================================
// Trigger: Quest HarpyThreat Sync
//===========================================================================
function Trig_Quest_HarpyThreat_Sync_Func002001 takes nothing returns boolean
    return ( udg_QuestHarpyThreatProgress < 1 )
endfunction

function Trig_Quest_HarpyThreat_Sync_Func005001 takes nothing returns boolean
    return ( udg_QuestHarpyThreatProgress < 2 )
endfunction

function Trig_Quest_HarpyThreat_Sync_Func008001 takes nothing returns boolean
    return ( udg_QuestHarpyThreatProgress < 3 )
endfunction

function Trig_Quest_HarpyThreat_Sync_Func011001 takes nothing returns boolean
    return ( udg_QuestHarpyThreatProgress < 4 )
endfunction

function Trig_Quest_HarpyThreat_Sync_Func015001 takes nothing returns boolean
    return ( udg_QuestHarpyThreatProgress < 5 )
endfunction

function Trig_Quest_HarpyThreat_Sync_Actions takes nothing returns nothing
    // 1
    if ( Trig_Quest_HarpyThreat_Sync_Func002001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_HarpyThreat_Create )
    // 2
    if ( Trig_Quest_HarpyThreat_Sync_Func005001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestSetDiscoveredBJ( udg_QuestHarpyThreat, true )
    // 3
    if ( Trig_Quest_HarpyThreat_Sync_Func008001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestHarpyThreatReq1, true )
    // 4
    if ( Trig_Quest_HarpyThreat_Sync_Func011001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestHarpyThreatReq2, true )
    call ConditionalTriggerExecute( gg_trg_Quest_HarpyThreat_CreateReq3 )
    // 5
    if ( Trig_Quest_HarpyThreat_Sync_Func015001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestHarpyThreatReq3, true )
    call QuestSetCompletedBJ( udg_QuestHarpyThreat, true )
endfunction

//===========================================================================
function InitTrig_Quest_HarpyThreat_Sync takes nothing returns nothing
    set gg_trg_Quest_HarpyThreat_Sync = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_HarpyThreat_Sync, function Trig_Quest_HarpyThreat_Sync_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderHerb Create
//===========================================================================
function Trig_Quest_ThunderHerb_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_ThunderHerb_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestBJ( bj_QUESTTYPE_REQ_UNDISCOVERED, "TRIGSTR_224", "TRIGSTR_225", "ReplaceableTextures\\CommandButtons\\BTNShimmerWeed.tga" )
    set udg_QuestThunderHerb = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_226" )
    set udg_QuestThunderHerbReq1 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_227" )
    set udg_QuestThunderHerbReq2 = GetLastCreatedQuestItemBJ()
    // Flag Quest Progress
    set udg_QuestThunderHerbProgress = IMaxBJ(1, udg_QuestThunderHerbProgress)
endfunction

//===========================================================================
function InitTrig_Quest_ThunderHerb_Create takes nothing returns nothing
    set gg_trg_Quest_ThunderHerb_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_ThunderHerb_Create, Condition( function Trig_Quest_ThunderHerb_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_ThunderHerb_Create, function Trig_Quest_ThunderHerb_Create_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderHerb Discovered
//===========================================================================
function Trig_Quest_ThunderHerb_Discovered_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestThunderHerb, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_228" )
    // Flag Quest Progress
    set udg_QuestThunderHerbProgress = IMaxBJ(2, udg_QuestThunderHerbProgress)
endfunction

//===========================================================================
function InitTrig_Quest_ThunderHerb_Discovered takes nothing returns nothing
    set gg_trg_Quest_ThunderHerb_Discovered = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderHerb_Discovered, function Trig_Quest_ThunderHerb_Discovered_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderHerb Update1
//===========================================================================
function Trig_Quest_ThunderHerb_Update1_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestThunderHerb, true )
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Description1 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_229" )
    // Flag Quest Progress
    set udg_QuestThunderHerbProgress = IMaxBJ(3, udg_QuestThunderHerbProgress)
endfunction

//===========================================================================
function InitTrig_Quest_ThunderHerb_Update1 takes nothing returns nothing
    set gg_trg_Quest_ThunderHerb_Update1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderHerb_Update1, function Trig_Quest_ThunderHerb_Update1_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderHerb Update2
//===========================================================================
function Trig_Quest_ThunderHerb_Update2_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestThunderHerb, true )
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Description2 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_230" )
    // Flag Quest Progress
    set udg_QuestThunderHerbProgress = IMaxBJ(4, udg_QuestThunderHerbProgress)
endfunction

//===========================================================================
function InitTrig_Quest_ThunderHerb_Update2 takes nothing returns nothing
    set gg_trg_Quest_ThunderHerb_Update2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderHerb_Update2, function Trig_Quest_ThunderHerb_Update2_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderHerb Update3
//===========================================================================
function Trig_Quest_ThunderHerb_Update3_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestThunderHerb, true )
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Description3 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_231" )
    // Flag Quest Progress
    set udg_QuestThunderHerbProgress = IMaxBJ(5, udg_QuestThunderHerbProgress)
endfunction

//===========================================================================
function InitTrig_Quest_ThunderHerb_Update3 takes nothing returns nothing
    set gg_trg_Quest_ThunderHerb_Update3 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderHerb_Update3, function Trig_Quest_ThunderHerb_Update3_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderHerb Update4
//===========================================================================
function Trig_Quest_ThunderHerb_Update4_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestThunderHerb, true )
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Description4 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_232" )
    // Flag Quest Progress
    set udg_QuestThunderHerbProgress = IMaxBJ(6, udg_QuestThunderHerbProgress)
endfunction

//===========================================================================
function InitTrig_Quest_ThunderHerb_Update4 takes nothing returns nothing
    set gg_trg_Quest_ThunderHerb_Update4 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderHerb_Update4, function Trig_Quest_ThunderHerb_Update4_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderHerb Update5
//===========================================================================
function Trig_Quest_ThunderHerb_Update5_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestThunderHerb, true )
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Description5 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_233" )
    // Flag Quest Progress
    set udg_QuestThunderHerbProgress = IMaxBJ(7, udg_QuestThunderHerbProgress)
endfunction

//===========================================================================
function InitTrig_Quest_ThunderHerb_Update5 takes nothing returns nothing
    set gg_trg_Quest_ThunderHerb_Update5 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderHerb_Update5, function Trig_Quest_ThunderHerb_Update5_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderHerb Update6
//===========================================================================
function Trig_Quest_ThunderHerb_Update6_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestThunderHerb, true )
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Description6 )
    call QuestItemSetCompletedBJ( udg_QuestThunderHerbReq1, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_234" )
    // Flag Quest Progress
    set udg_QuestThunderHerbProgress = IMaxBJ(8, udg_QuestThunderHerbProgress)
endfunction

//===========================================================================
function InitTrig_Quest_ThunderHerb_Update6 takes nothing returns nothing
    set gg_trg_Quest_ThunderHerb_Update6 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderHerb_Update6, function Trig_Quest_ThunderHerb_Update6_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderHerb Completed
//===========================================================================
function Trig_Quest_ThunderHerb_Completed_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestThunderHerb, true )
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Description6 )
    call QuestItemSetCompletedBJ( udg_QuestThunderHerbReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestThunderHerbReq2, true )
    call QuestSetCompletedBJ( udg_QuestThunderHerb, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_235" )
    // Flag Quest Progress
    set udg_QuestThunderHerbProgress = IMaxBJ(9, udg_QuestThunderHerbProgress)
endfunction

//===========================================================================
function InitTrig_Quest_ThunderHerb_Completed takes nothing returns nothing
    set gg_trg_Quest_ThunderHerb_Completed = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderHerb_Completed, function Trig_Quest_ThunderHerb_Completed_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderHerb Description1
//===========================================================================
function Trig_Quest_ThunderHerb_Description1_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestThunderHerbReq1, "TRIGSTR_236" )
endfunction

//===========================================================================
function InitTrig_Quest_ThunderHerb_Description1 takes nothing returns nothing
    set gg_trg_Quest_ThunderHerb_Description1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderHerb_Description1, function Trig_Quest_ThunderHerb_Description1_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderHerb Description2
//===========================================================================
function Trig_Quest_ThunderHerb_Description2_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestThunderHerbReq1, "TRIGSTR_237" )
endfunction

//===========================================================================
function InitTrig_Quest_ThunderHerb_Description2 takes nothing returns nothing
    set gg_trg_Quest_ThunderHerb_Description2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderHerb_Description2, function Trig_Quest_ThunderHerb_Description2_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderHerb Description3
//===========================================================================
function Trig_Quest_ThunderHerb_Description3_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestThunderHerbReq1, "TRIGSTR_238" )
endfunction

//===========================================================================
function InitTrig_Quest_ThunderHerb_Description3 takes nothing returns nothing
    set gg_trg_Quest_ThunderHerb_Description3 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderHerb_Description3, function Trig_Quest_ThunderHerb_Description3_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderHerb Description4
//===========================================================================
function Trig_Quest_ThunderHerb_Description4_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestThunderHerbReq1, "TRIGSTR_239" )
endfunction

//===========================================================================
function InitTrig_Quest_ThunderHerb_Description4 takes nothing returns nothing
    set gg_trg_Quest_ThunderHerb_Description4 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderHerb_Description4, function Trig_Quest_ThunderHerb_Description4_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderHerb Description5
//===========================================================================
function Trig_Quest_ThunderHerb_Description5_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestThunderHerbReq1, "TRIGSTR_240" )
endfunction

//===========================================================================
function InitTrig_Quest_ThunderHerb_Description5 takes nothing returns nothing
    set gg_trg_Quest_ThunderHerb_Description5 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderHerb_Description5, function Trig_Quest_ThunderHerb_Description5_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderHerb Description6
//===========================================================================
function Trig_Quest_ThunderHerb_Description6_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestThunderHerbReq1, "TRIGSTR_241" )
endfunction

//===========================================================================
function InitTrig_Quest_ThunderHerb_Description6 takes nothing returns nothing
    set gg_trg_Quest_ThunderHerb_Description6 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderHerb_Description6, function Trig_Quest_ThunderHerb_Description6_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderHerb Sync
//===========================================================================
function Trig_Quest_ThunderHerb_Sync_Func002001 takes nothing returns boolean
    return ( udg_QuestThunderHerbProgress < 1 )
endfunction

function Trig_Quest_ThunderHerb_Sync_Func005001 takes nothing returns boolean
    return ( udg_QuestThunderHerbProgress < 2 )
endfunction

function Trig_Quest_ThunderHerb_Sync_Func008001 takes nothing returns boolean
    return ( udg_QuestThunderHerbProgress < 3 )
endfunction

function Trig_Quest_ThunderHerb_Sync_Func011001 takes nothing returns boolean
    return ( udg_QuestThunderHerbProgress < 4 )
endfunction

function Trig_Quest_ThunderHerb_Sync_Func014001 takes nothing returns boolean
    return ( udg_QuestThunderHerbProgress < 5 )
endfunction

function Trig_Quest_ThunderHerb_Sync_Func017001 takes nothing returns boolean
    return ( udg_QuestThunderHerbProgress < 6 )
endfunction

function Trig_Quest_ThunderHerb_Sync_Func020001 takes nothing returns boolean
    return ( udg_QuestThunderHerbProgress < 7 )
endfunction

function Trig_Quest_ThunderHerb_Sync_Func023001 takes nothing returns boolean
    return ( udg_QuestThunderHerbProgress < 8 )
endfunction

function Trig_Quest_ThunderHerb_Sync_Func027001 takes nothing returns boolean
    return ( udg_QuestThunderHerbProgress < 9 )
endfunction

function Trig_Quest_ThunderHerb_Sync_Actions takes nothing returns nothing
    // 1
    if ( Trig_Quest_ThunderHerb_Sync_Func002001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Create )
    // 2
    if ( Trig_Quest_ThunderHerb_Sync_Func005001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestSetDiscoveredBJ( udg_QuestThunderHerb, true )
    // 3
    if ( Trig_Quest_ThunderHerb_Sync_Func008001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Description1 )
    // 4
    if ( Trig_Quest_ThunderHerb_Sync_Func011001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Description2 )
    // 5
    if ( Trig_Quest_ThunderHerb_Sync_Func014001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Description3 )
    // 6
    if ( Trig_Quest_ThunderHerb_Sync_Func017001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Description4 )
    // 7
    if ( Trig_Quest_ThunderHerb_Sync_Func020001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Description5 )
    // 8
    if ( Trig_Quest_ThunderHerb_Sync_Func023001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderHerb_Description6 )
    call QuestItemSetCompletedBJ( udg_QuestThunderHerbReq1, true )
    // 9
    if ( Trig_Quest_ThunderHerb_Sync_Func027001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestThunderHerbReq2, true )
    call QuestSetCompletedBJ( udg_QuestThunderHerb, true )
endfunction

//===========================================================================
function InitTrig_Quest_ThunderHerb_Sync takes nothing returns nothing
    set gg_trg_Quest_ThunderHerb_Sync = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderHerb_Sync, function Trig_Quest_ThunderHerb_Sync_Actions )
endfunction

//===========================================================================
// Trigger: Quest SealTunnel Create
//===========================================================================
function Trig_Quest_SealTunnel_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_SealTunnel_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestBJ( bj_QUESTTYPE_REQ_UNDISCOVERED, "TRIGSTR_242", "TRIGSTR_243", "ReplaceableTextures\\CommandButtons\\BTNKoboldGeomancer.tga" )
    set udg_QuestSealTunnel = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_244" )
    set udg_QuestSealTunnelReq1 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_245" )
    set udg_QuestSealTunnelReq2 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_246" )
    set udg_QuestSealTunnelReq3 = GetLastCreatedQuestItemBJ()
    // Flag Quest Progress
    set udg_QuestSealTunnelProgress = IMaxBJ(1, udg_QuestSealTunnelProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SealTunnel_Create takes nothing returns nothing
    set gg_trg_Quest_SealTunnel_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_SealTunnel_Create, Condition( function Trig_Quest_SealTunnel_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_SealTunnel_Create, function Trig_Quest_SealTunnel_Create_Actions )
endfunction

//===========================================================================
// Trigger: Quest SealTunnel Discovered
//===========================================================================
function Trig_Quest_SealTunnel_Discovered_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SealTunnel_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSealTunnel, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_247" )
    // Flag Quest Progress
    set udg_QuestSealTunnelProgress = IMaxBJ(2, udg_QuestSealTunnelProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SealTunnel_Discovered takes nothing returns nothing
    set gg_trg_Quest_SealTunnel_Discovered = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SealTunnel_Discovered, function Trig_Quest_SealTunnel_Discovered_Actions )
endfunction

//===========================================================================
// Trigger: Quest SealTunnel Update1
//===========================================================================
function Trig_Quest_SealTunnel_Update1_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SealTunnel_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSealTunnel, true )
    call QuestItemSetCompletedBJ( udg_QuestSealTunnelReq1, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_248" )
    // Flag Quest Progress
    set udg_QuestSealTunnelProgress = IMaxBJ(3, udg_QuestSealTunnelProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SealTunnel_Update1 takes nothing returns nothing
    set gg_trg_Quest_SealTunnel_Update1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SealTunnel_Update1, function Trig_Quest_SealTunnel_Update1_Actions )
endfunction

//===========================================================================
// Trigger: Quest SealTunnel Update2
//===========================================================================
function Trig_Quest_SealTunnel_Update2_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SealTunnel_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSealTunnel, true )
    call QuestItemSetCompletedBJ( udg_QuestSealTunnelReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestSealTunnelReq2, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_249" )
    // Flag Quest Progress
    set udg_QuestSealTunnelProgress = IMaxBJ(4, udg_QuestSealTunnelProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SealTunnel_Update2 takes nothing returns nothing
    set gg_trg_Quest_SealTunnel_Update2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SealTunnel_Update2, function Trig_Quest_SealTunnel_Update2_Actions )
endfunction

//===========================================================================
// Trigger: Quest SealTunnel Completed
//===========================================================================
function Trig_Quest_SealTunnel_Completed_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SealTunnel_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSealTunnel, true )
    call QuestItemSetCompletedBJ( udg_QuestSealTunnelReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestSealTunnelReq2, true )
    call QuestItemSetCompletedBJ( udg_QuestSealTunnelReq3, true )
    call QuestSetCompletedBJ( udg_QuestSealTunnel, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_250" )
    // Flag Quest Progress
    set udg_QuestSealTunnelProgress = IMaxBJ(5, udg_QuestSealTunnelProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SealTunnel_Completed takes nothing returns nothing
    set gg_trg_Quest_SealTunnel_Completed = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SealTunnel_Completed, function Trig_Quest_SealTunnel_Completed_Actions )
endfunction

//===========================================================================
// Trigger: Quest SealTunnel Sync
//===========================================================================
function Trig_Quest_SealTunnel_Sync_Func002001 takes nothing returns boolean
    return ( udg_QuestSealTunnelProgress < 1 )
endfunction

function Trig_Quest_SealTunnel_Sync_Func005001 takes nothing returns boolean
    return ( udg_QuestSealTunnelProgress < 2 )
endfunction

function Trig_Quest_SealTunnel_Sync_Func008001 takes nothing returns boolean
    return ( udg_QuestSealTunnelProgress < 3 )
endfunction

function Trig_Quest_SealTunnel_Sync_Func011001 takes nothing returns boolean
    return ( udg_QuestSealTunnelProgress < 4 )
endfunction

function Trig_Quest_SealTunnel_Sync_Func014001 takes nothing returns boolean
    return ( udg_QuestSealTunnelProgress < 5 )
endfunction

function Trig_Quest_SealTunnel_Sync_Actions takes nothing returns nothing
    // 1
    if ( Trig_Quest_SealTunnel_Sync_Func002001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_SealTunnel_Create )
    // 2
    if ( Trig_Quest_SealTunnel_Sync_Func005001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestSetDiscoveredBJ( udg_QuestSealTunnel, true )
    // 3
    if ( Trig_Quest_SealTunnel_Sync_Func008001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestSealTunnelReq1, true )
    // 4
    if ( Trig_Quest_SealTunnel_Sync_Func011001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestSealTunnelReq2, true )
    // 5
    if ( Trig_Quest_SealTunnel_Sync_Func014001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestSealTunnelReq3, true )
    call QuestSetCompletedBJ( udg_QuestSealTunnel, true )
endfunction

//===========================================================================
function InitTrig_Quest_SealTunnel_Sync takes nothing returns nothing
    set gg_trg_Quest_SealTunnel_Sync = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SealTunnel_Sync, function Trig_Quest_SealTunnel_Sync_Actions )
endfunction

//===========================================================================
// Trigger: Quest Survey Create
//===========================================================================
function Trig_Quest_Survey_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_Survey_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestBJ( bj_QUESTTYPE_REQ_UNDISCOVERED, "TRIGSTR_251", "TRIGSTR_252", "ReplaceableTextures\\CommandButtons\\BTNOrcTower.tga" )
    set udg_QuestSurvey = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_253" )
    set udg_QuestSurveyReq1 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_254" )
    set udg_QuestSurveyReq2 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_255" )
    set udg_QuestSurveyReq3 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_256" )
    set udg_QuestSurveyReq4 = GetLastCreatedQuestItemBJ()
    // Flag Quest Progress
    set udg_QuestSurveyProgress = IMaxBJ(1, udg_QuestSurveyProgress)
endfunction

//===========================================================================
function InitTrig_Quest_Survey_Create takes nothing returns nothing
    set gg_trg_Quest_Survey_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_Survey_Create, Condition( function Trig_Quest_Survey_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_Survey_Create, function Trig_Quest_Survey_Create_Actions )
endfunction

//===========================================================================
// Trigger: Quest Survey Discovered
//===========================================================================
function Trig_Quest_Survey_Discovered_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_Survey_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSurvey, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_257" )
    // Flag Quest Progress
    set udg_QuestSurveyProgress = IMaxBJ(2, udg_QuestSurveyProgress)
endfunction

//===========================================================================
function InitTrig_Quest_Survey_Discovered takes nothing returns nothing
    set gg_trg_Quest_Survey_Discovered = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Survey_Discovered, function Trig_Quest_Survey_Discovered_Actions )
endfunction

//===========================================================================
// Trigger: Quest Survey Update1
//===========================================================================
function Trig_Quest_Survey_Update1_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_Survey_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSurvey, true )
    call QuestItemSetCompletedBJ( udg_QuestSurveyReq1, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_258" )
    // Flag Quest Progress
    set udg_QuestSurveyProgress = IMaxBJ(3, udg_QuestSurveyProgress)
endfunction

//===========================================================================
function InitTrig_Quest_Survey_Update1 takes nothing returns nothing
    set gg_trg_Quest_Survey_Update1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Survey_Update1, function Trig_Quest_Survey_Update1_Actions )
endfunction

//===========================================================================
// Trigger: Quest Survey Update2
//===========================================================================
function Trig_Quest_Survey_Update2_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_Survey_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSurvey, true )
    call QuestItemSetCompletedBJ( udg_QuestSurveyReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestSurveyReq2, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_259" )
    // Flag Quest Progress
    set udg_QuestSurveyProgress = IMaxBJ(4, udg_QuestSurveyProgress)
endfunction

//===========================================================================
function InitTrig_Quest_Survey_Update2 takes nothing returns nothing
    set gg_trg_Quest_Survey_Update2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Survey_Update2, function Trig_Quest_Survey_Update2_Actions )
endfunction

//===========================================================================
// Trigger: Quest Survey Update3
//===========================================================================
function Trig_Quest_Survey_Update3_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_Survey_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSurvey, true )
    call QuestItemSetCompletedBJ( udg_QuestSurveyReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestSurveyReq2, true )
    call QuestItemSetCompletedBJ( udg_QuestSurveyReq3, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_260" )
    // Flag Quest Progress
    set udg_QuestSurveyProgress = IMaxBJ(5, udg_QuestSurveyProgress)
endfunction

//===========================================================================
function InitTrig_Quest_Survey_Update3 takes nothing returns nothing
    set gg_trg_Quest_Survey_Update3 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Survey_Update3, function Trig_Quest_Survey_Update3_Actions )
endfunction

//===========================================================================
// Trigger: Quest Survey Completed
//===========================================================================
function Trig_Quest_Survey_Completed_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_Survey_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSurvey, true )
    call QuestItemSetCompletedBJ( udg_QuestSurveyReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestSurveyReq2, true )
    call QuestItemSetCompletedBJ( udg_QuestSurveyReq3, true )
    call QuestItemSetCompletedBJ( udg_QuestSurveyReq4, true )
    call QuestSetCompletedBJ( udg_QuestSurvey, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_261" )
    // Flag Quest Progress
    set udg_QuestSurveyProgress = IMaxBJ(6, udg_QuestSurveyProgress)
endfunction

//===========================================================================
function InitTrig_Quest_Survey_Completed takes nothing returns nothing
    set gg_trg_Quest_Survey_Completed = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Survey_Completed, function Trig_Quest_Survey_Completed_Actions )
endfunction

//===========================================================================
// Trigger: Quest Survey Sync
//===========================================================================
function Trig_Quest_Survey_Sync_Func002001 takes nothing returns boolean
    return ( udg_QuestSurveyProgress < 1 )
endfunction

function Trig_Quest_Survey_Sync_Func005001 takes nothing returns boolean
    return ( udg_QuestSurveyProgress < 2 )
endfunction

function Trig_Quest_Survey_Sync_Func008001 takes nothing returns boolean
    return ( udg_QuestSurveyProgress < 3 )
endfunction

function Trig_Quest_Survey_Sync_Func011001 takes nothing returns boolean
    return ( udg_QuestSurveyProgress < 4 )
endfunction

function Trig_Quest_Survey_Sync_Func014001 takes nothing returns boolean
    return ( udg_QuestSurveyProgress < 5 )
endfunction

function Trig_Quest_Survey_Sync_Func017001 takes nothing returns boolean
    return ( udg_QuestSurveyProgress < 6 )
endfunction

function Trig_Quest_Survey_Sync_Actions takes nothing returns nothing
    // 1
    if ( Trig_Quest_Survey_Sync_Func002001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_Survey_Create )
    // 2
    if ( Trig_Quest_Survey_Sync_Func005001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestSetDiscoveredBJ( udg_QuestSurvey, true )
    // 3
    if ( Trig_Quest_Survey_Sync_Func008001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestSurveyReq1, true )
    // 4
    if ( Trig_Quest_Survey_Sync_Func011001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestSurveyReq2, true )
    // 5
    if ( Trig_Quest_Survey_Sync_Func014001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestSurveyReq3, true )
    // 6
    if ( Trig_Quest_Survey_Sync_Func017001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestSurveyReq4, true )
    call QuestSetCompletedBJ( udg_QuestSurvey, true )
endfunction

//===========================================================================
function InitTrig_Quest_Survey_Sync takes nothing returns nothing
    set gg_trg_Quest_Survey_Sync = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Survey_Sync, function Trig_Quest_Survey_Sync_Actions )
endfunction

//===========================================================================
// Trigger: Quest DestroyHumans Create
//===========================================================================
function Trig_Quest_DestroyHumans_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_DestroyHumans_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestBJ( bj_QUESTTYPE_REQ_UNDISCOVERED, "TRIGSTR_262", "TRIGSTR_263", "ReplaceableTextures\\CommandButtons\\BTNOrcTower.tga" )
    set udg_QuestDestroyHumans = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_264" )
    set udg_QuestDestroyHumansReq1 = GetLastCreatedQuestItemBJ()
    // Flag Quest Progress
    set udg_QuestDestroyHumansProgress = IMaxBJ(1, udg_QuestDestroyHumansProgress)
endfunction

//===========================================================================
function InitTrig_Quest_DestroyHumans_Create takes nothing returns nothing
    set gg_trg_Quest_DestroyHumans_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_DestroyHumans_Create, Condition( function Trig_Quest_DestroyHumans_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_DestroyHumans_Create, function Trig_Quest_DestroyHumans_Create_Actions )
endfunction

//===========================================================================
// Trigger: Quest DestroyHumans CreateReq234
//===========================================================================
function Trig_Quest_DestroyHumans_CreateReq234_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_DestroyHumans_CreateReq234_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call CreateQuestItemBJ( udg_QuestDestroyHumans, "TRIGSTR_265" )
    set udg_QuestDestroyHumansReq2 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( udg_QuestDestroyHumans, "TRIGSTR_266" )
    set udg_QuestDestroyHumansReq3 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( udg_QuestDestroyHumans, "TRIGSTR_267" )
    set udg_QuestDestroyHumansReq4 = GetLastCreatedQuestItemBJ()
endfunction

//===========================================================================
function InitTrig_Quest_DestroyHumans_CreateReq234 takes nothing returns nothing
    set gg_trg_Quest_DestroyHumans_CreateReq234 = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_DestroyHumans_CreateReq234, Condition( function Trig_Quest_DestroyHumans_CreateReq234_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_DestroyHumans_CreateReq234, function Trig_Quest_DestroyHumans_CreateReq234_Actions )
endfunction

//===========================================================================
// Trigger: Quest DestroyHumans Discovered
//===========================================================================
function Trig_Quest_DestroyHumans_Discovered_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_DestroyHumans_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestDestroyHumans, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_268" )
    // Flag Quest Progress
    set udg_QuestDestroyHumansProgress = IMaxBJ(2, udg_QuestDestroyHumansProgress)
endfunction

//===========================================================================
function InitTrig_Quest_DestroyHumans_Discovered takes nothing returns nothing
    set gg_trg_Quest_DestroyHumans_Discovered = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_DestroyHumans_Discovered, function Trig_Quest_DestroyHumans_Discovered_Actions )
endfunction

//===========================================================================
// Trigger: Quest DestroyHumans Update1
//===========================================================================
function Trig_Quest_DestroyHumans_Update1_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_DestroyHumans_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestDestroyHumans, true )
    call QuestItemSetCompletedBJ( udg_QuestDestroyHumansReq1, true )
    call ConditionalTriggerExecute( gg_trg_Quest_DestroyHumans_CreateReq234 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_269" )
    // Flag Quest Progress
    set udg_QuestDestroyHumansProgress = IMaxBJ(3, udg_QuestDestroyHumansProgress)
endfunction

//===========================================================================
function InitTrig_Quest_DestroyHumans_Update1 takes nothing returns nothing
    set gg_trg_Quest_DestroyHumans_Update1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_DestroyHumans_Update1, function Trig_Quest_DestroyHumans_Update1_Actions )
endfunction

//===========================================================================
// Trigger: Quest DestroyHumans Update2
//===========================================================================
function Trig_Quest_DestroyHumans_Update2_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_DestroyHumans_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestDestroyHumans, true )
    call QuestItemSetCompletedBJ( udg_QuestDestroyHumansReq1, true )
    call ConditionalTriggerExecute( gg_trg_Quest_DestroyHumans_CreateReq234 )
    call QuestItemSetCompletedBJ( udg_QuestDestroyHumansReq2, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_270" )
    // Flag Quest Progress
    set udg_QuestDestroyHumansProgress = IMaxBJ(4, udg_QuestDestroyHumansProgress)
endfunction

//===========================================================================
function InitTrig_Quest_DestroyHumans_Update2 takes nothing returns nothing
    set gg_trg_Quest_DestroyHumans_Update2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_DestroyHumans_Update2, function Trig_Quest_DestroyHumans_Update2_Actions )
endfunction

//===========================================================================
// Trigger: Quest DestroyHumans Update3
//===========================================================================
function Trig_Quest_DestroyHumans_Update3_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_DestroyHumans_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestDestroyHumans, true )
    call QuestItemSetCompletedBJ( udg_QuestDestroyHumansReq1, true )
    call ConditionalTriggerExecute( gg_trg_Quest_DestroyHumans_CreateReq234 )
    call QuestItemSetCompletedBJ( udg_QuestDestroyHumansReq2, true )
    call QuestItemSetCompletedBJ( udg_QuestDestroyHumansReq3, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_271" )
    // Flag Quest Progress
    set udg_QuestDestroyHumansProgress = IMaxBJ(5, udg_QuestDestroyHumansProgress)
endfunction

//===========================================================================
function InitTrig_Quest_DestroyHumans_Update3 takes nothing returns nothing
    set gg_trg_Quest_DestroyHumans_Update3 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_DestroyHumans_Update3, function Trig_Quest_DestroyHumans_Update3_Actions )
endfunction

//===========================================================================
// Trigger: Quest DestroyHumans Completed
//===========================================================================
function Trig_Quest_DestroyHumans_Completed_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_DestroyHumans_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestDestroyHumans, true )
    call QuestItemSetCompletedBJ( udg_QuestDestroyHumansReq1, true )
    call ConditionalTriggerExecute( gg_trg_Quest_DestroyHumans_CreateReq234 )
    call QuestItemSetCompletedBJ( udg_QuestDestroyHumansReq2, true )
    call QuestItemSetCompletedBJ( udg_QuestDestroyHumansReq3, true )
    call QuestItemSetCompletedBJ( udg_QuestDestroyHumansReq4, true )
    call QuestSetCompletedBJ( udg_QuestDestroyHumans, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_272" )
    // Flag Quest Progress
    set udg_QuestDestroyHumansProgress = IMaxBJ(6, udg_QuestDestroyHumansProgress)
endfunction

//===========================================================================
function InitTrig_Quest_DestroyHumans_Completed takes nothing returns nothing
    set gg_trg_Quest_DestroyHumans_Completed = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_DestroyHumans_Completed, function Trig_Quest_DestroyHumans_Completed_Actions )
endfunction

//===========================================================================
// Trigger: Quest DestroyHumans Sync
//===========================================================================
function Trig_Quest_DestroyHumans_Sync_Func002001 takes nothing returns boolean
    return ( udg_QuestDestroyHumansProgress < 1 )
endfunction

function Trig_Quest_DestroyHumans_Sync_Func005001 takes nothing returns boolean
    return ( udg_QuestDestroyHumansProgress < 2 )
endfunction

function Trig_Quest_DestroyHumans_Sync_Func008001 takes nothing returns boolean
    return ( udg_QuestDestroyHumansProgress < 3 )
endfunction

function Trig_Quest_DestroyHumans_Sync_Func012001 takes nothing returns boolean
    return ( udg_QuestDestroyHumansProgress < 4 )
endfunction

function Trig_Quest_DestroyHumans_Sync_Func015001 takes nothing returns boolean
    return ( udg_QuestDestroyHumansProgress < 5 )
endfunction

function Trig_Quest_DestroyHumans_Sync_Func018001 takes nothing returns boolean
    return ( udg_QuestDestroyHumansProgress < 6 )
endfunction

function Trig_Quest_DestroyHumans_Sync_Actions takes nothing returns nothing
    // 1
    if ( Trig_Quest_DestroyHumans_Sync_Func002001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_DestroyHumans_Create )
    // 2
    if ( Trig_Quest_DestroyHumans_Sync_Func005001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestSetDiscoveredBJ( udg_QuestDestroyHumans, true )
    // 3
    if ( Trig_Quest_DestroyHumans_Sync_Func008001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestDestroyHumansReq1, true )
    call ConditionalTriggerExecute( gg_trg_Quest_DestroyHumans_CreateReq234 )
    // 4
    if ( Trig_Quest_DestroyHumans_Sync_Func012001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestDestroyHumansReq2, true )
    // 5
    if ( Trig_Quest_DestroyHumans_Sync_Func015001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestDestroyHumansReq3, true )
    // 6
    if ( Trig_Quest_DestroyHumans_Sync_Func018001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestDestroyHumansReq4, true )
    call QuestSetCompletedBJ( udg_QuestDestroyHumans, true )
endfunction

//===========================================================================
function InitTrig_Quest_DestroyHumans_Sync takes nothing returns nothing
    set gg_trg_Quest_DestroyHumans_Sync = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_DestroyHumans_Sync, function Trig_Quest_DestroyHumans_Sync_Actions )
endfunction

//===========================================================================
// Trigger: Quest WarnTrolls Create
//===========================================================================
function Trig_Quest_WarnTrolls_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_WarnTrolls_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestBJ( bj_QUESTTYPE_REQ_UNDISCOVERED, "TRIGSTR_273", "TRIGSTR_274", "ReplaceableTextures\\CommandButtons\\BTNOrcTower.tga" )
    set udg_QuestWarnTrolls = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_275" )
    set udg_QuestWarnTrollsReq1 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_276" )
    set udg_QuestWarnTrollsReq2 = GetLastCreatedQuestItemBJ()
    // Flag Quest Progress
    set udg_QuestWarnTrollsProgress = IMaxBJ(1, udg_QuestWarnTrollsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_WarnTrolls_Create takes nothing returns nothing
    set gg_trg_Quest_WarnTrolls_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_WarnTrolls_Create, Condition( function Trig_Quest_WarnTrolls_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_WarnTrolls_Create, function Trig_Quest_WarnTrolls_Create_Actions )
endfunction

//===========================================================================
// Trigger: Quest WarnTrolls Discovered
//===========================================================================
function Trig_Quest_WarnTrolls_Discovered_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_WarnTrolls_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestWarnTrolls, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_277" )
    // Flag Quest Progress
    set udg_QuestWarnTrollsProgress = IMaxBJ(2, udg_QuestWarnTrollsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_WarnTrolls_Discovered takes nothing returns nothing
    set gg_trg_Quest_WarnTrolls_Discovered = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_WarnTrolls_Discovered, function Trig_Quest_WarnTrolls_Discovered_Actions )
endfunction

//===========================================================================
// Trigger: Quest WarnTrolls Update
//===========================================================================
function Trig_Quest_WarnTrolls_Update_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_WarnTrolls_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestWarnTrolls, true )
    call QuestItemSetCompletedBJ( udg_QuestWarnTrollsReq1, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_278" )
    // Flag Quest Progress
    set udg_QuestWarnTrollsProgress = IMaxBJ(3, udg_QuestWarnTrollsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_WarnTrolls_Update takes nothing returns nothing
    set gg_trg_Quest_WarnTrolls_Update = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_WarnTrolls_Update, function Trig_Quest_WarnTrolls_Update_Actions )
endfunction

//===========================================================================
// Trigger: Quest WarnTrolls Completed
//===========================================================================
function Trig_Quest_WarnTrolls_Completed_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_WarnTrolls_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestWarnTrolls, true )
    call QuestItemSetCompletedBJ( udg_QuestWarnTrollsReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestWarnTrollsReq2, true )
    call QuestSetCompletedBJ( udg_QuestWarnTrolls, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_279" )
    // Flag Quest Progress
    set udg_QuestWarnTrollsProgress = IMaxBJ(4, udg_QuestWarnTrollsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_WarnTrolls_Completed takes nothing returns nothing
    set gg_trg_Quest_WarnTrolls_Completed = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_WarnTrolls_Completed, function Trig_Quest_WarnTrolls_Completed_Actions )
endfunction

//===========================================================================
// Trigger: Quest WarnTrolls Sync
//===========================================================================
function Trig_Quest_WarnTrolls_Sync_Func002001 takes nothing returns boolean
    return ( udg_QuestWarnTrollsProgress < 1 )
endfunction

function Trig_Quest_WarnTrolls_Sync_Func005001 takes nothing returns boolean
    return ( udg_QuestWarnTrollsProgress < 2 )
endfunction

function Trig_Quest_WarnTrolls_Sync_Func008001 takes nothing returns boolean
    return ( udg_QuestWarnTrollsProgress < 3 )
endfunction

function Trig_Quest_WarnTrolls_Sync_Func011001 takes nothing returns boolean
    return ( udg_QuestWarnTrollsProgress < 4 )
endfunction

function Trig_Quest_WarnTrolls_Sync_Actions takes nothing returns nothing
    // 1
    if ( Trig_Quest_WarnTrolls_Sync_Func002001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_WarnTrolls_Create )
    // 2
    if ( Trig_Quest_WarnTrolls_Sync_Func005001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestSetDiscoveredBJ( udg_QuestWarnTrolls, true )
    // 3
    if ( Trig_Quest_WarnTrolls_Sync_Func008001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestWarnTrollsReq1, true )
    // 4
    if ( Trig_Quest_WarnTrolls_Sync_Func011001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestWarnTrollsReq2, true )
    call QuestSetCompletedBJ( udg_QuestWarnTrolls, true )
endfunction

//===========================================================================
function InitTrig_Quest_WarnTrolls_Sync takes nothing returns nothing
    set gg_trg_Quest_WarnTrolls_Sync = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_WarnTrolls_Sync, function Trig_Quest_WarnTrolls_Sync_Actions )
endfunction

//===========================================================================
// Trigger: Quest SinkFleet Create
//===========================================================================
function Trig_Quest_SinkFleet_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_SinkFleet_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestBJ( bj_QUESTTYPE_REQ_UNDISCOVERED, "TRIGSTR_280", "TRIGSTR_281", "ReplaceableTextures\\CommandButtons\\BTNTrollBatRider.tga" )
    set udg_QuestSinkFleet = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_282" )
    set udg_QuestSinkFleetReq1 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_283" )
    set udg_QuestSinkFleetReq2 = GetLastCreatedQuestItemBJ()
    // Flag Quest Progress
    set udg_QuestSinkFleetProgress = IMaxBJ(1, udg_QuestSinkFleetProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SinkFleet_Create takes nothing returns nothing
    set gg_trg_Quest_SinkFleet_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_SinkFleet_Create, Condition( function Trig_Quest_SinkFleet_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_SinkFleet_Create, function Trig_Quest_SinkFleet_Create_Actions )
endfunction

//===========================================================================
// Trigger: Quest SinkFleet Discovered
//===========================================================================
function Trig_Quest_SinkFleet_Discovered_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSinkFleet, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_284" )
    // Flag Quest Progress
    set udg_QuestSinkFleetProgress = IMaxBJ(2, udg_QuestSinkFleetProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SinkFleet_Discovered takes nothing returns nothing
    set gg_trg_Quest_SinkFleet_Discovered = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SinkFleet_Discovered, function Trig_Quest_SinkFleet_Discovered_Actions )
endfunction

//===========================================================================
// Trigger: Quest SinkFleet Update1
//===========================================================================
function Trig_Quest_SinkFleet_Update1_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSinkFleet, true )
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Description1 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_285" )
    // Flag Quest Progress
    set udg_QuestSinkFleetProgress = IMaxBJ(3, udg_QuestSinkFleetProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SinkFleet_Update1 takes nothing returns nothing
    set gg_trg_Quest_SinkFleet_Update1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SinkFleet_Update1, function Trig_Quest_SinkFleet_Update1_Actions )
endfunction

//===========================================================================
// Trigger: Quest SinkFleet Update2
//===========================================================================
function Trig_Quest_SinkFleet_Update2_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSinkFleet, true )
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Description2 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_286" )
    // Flag Quest Progress
    set udg_QuestSinkFleetProgress = IMaxBJ(4, udg_QuestSinkFleetProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SinkFleet_Update2 takes nothing returns nothing
    set gg_trg_Quest_SinkFleet_Update2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SinkFleet_Update2, function Trig_Quest_SinkFleet_Update2_Actions )
endfunction

//===========================================================================
// Trigger: Quest SinkFleet Update3
//===========================================================================
function Trig_Quest_SinkFleet_Update3_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSinkFleet, true )
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Description3 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_287" )
    // Flag Quest Progress
    set udg_QuestSinkFleetProgress = IMaxBJ(5, udg_QuestSinkFleetProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SinkFleet_Update3 takes nothing returns nothing
    set gg_trg_Quest_SinkFleet_Update3 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SinkFleet_Update3, function Trig_Quest_SinkFleet_Update3_Actions )
endfunction

//===========================================================================
// Trigger: Quest SinkFleet Update4
//===========================================================================
function Trig_Quest_SinkFleet_Update4_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSinkFleet, true )
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Description4 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_288" )
    // Flag Quest Progress
    set udg_QuestSinkFleetProgress = IMaxBJ(6, udg_QuestSinkFleetProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SinkFleet_Update4 takes nothing returns nothing
    set gg_trg_Quest_SinkFleet_Update4 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SinkFleet_Update4, function Trig_Quest_SinkFleet_Update4_Actions )
endfunction

//===========================================================================
// Trigger: Quest SinkFleet Update5
//===========================================================================
function Trig_Quest_SinkFleet_Update5_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSinkFleet, true )
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Description5 )
    call QuestItemSetCompletedBJ( udg_QuestSinkFleetReq1, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_289" )
    // Flag Quest Progress
    set udg_QuestSinkFleetProgress = IMaxBJ(7, udg_QuestSinkFleetProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SinkFleet_Update5 takes nothing returns nothing
    set gg_trg_Quest_SinkFleet_Update5 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SinkFleet_Update5, function Trig_Quest_SinkFleet_Update5_Actions )
endfunction

//===========================================================================
// Trigger: Quest SinkFleet Completed
//===========================================================================
function Trig_Quest_SinkFleet_Completed_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSinkFleet, true )
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Description5 )
    call QuestItemSetCompletedBJ( udg_QuestSinkFleetReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestSinkFleetReq2, true )
    call QuestSetCompletedBJ( udg_QuestSinkFleet, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_290" )
    // Flag Quest Progress
    set udg_QuestSinkFleetProgress = IMaxBJ(8, udg_QuestSinkFleetProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SinkFleet_Completed takes nothing returns nothing
    set gg_trg_Quest_SinkFleet_Completed = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SinkFleet_Completed, function Trig_Quest_SinkFleet_Completed_Actions )
endfunction

//===========================================================================
// Trigger: Quest SinkFleet Description1
//===========================================================================
function Trig_Quest_SinkFleet_Description1_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestSinkFleetReq1, "TRIGSTR_291" )
endfunction

//===========================================================================
function InitTrig_Quest_SinkFleet_Description1 takes nothing returns nothing
    set gg_trg_Quest_SinkFleet_Description1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SinkFleet_Description1, function Trig_Quest_SinkFleet_Description1_Actions )
endfunction

//===========================================================================
// Trigger: Quest SinkFleet Description2
//===========================================================================
function Trig_Quest_SinkFleet_Description2_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestSinkFleetReq1, "TRIGSTR_292" )
endfunction

//===========================================================================
function InitTrig_Quest_SinkFleet_Description2 takes nothing returns nothing
    set gg_trg_Quest_SinkFleet_Description2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SinkFleet_Description2, function Trig_Quest_SinkFleet_Description2_Actions )
endfunction

//===========================================================================
// Trigger: Quest SinkFleet Description3
//===========================================================================
function Trig_Quest_SinkFleet_Description3_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestSinkFleetReq1, "TRIGSTR_293" )
endfunction

//===========================================================================
function InitTrig_Quest_SinkFleet_Description3 takes nothing returns nothing
    set gg_trg_Quest_SinkFleet_Description3 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SinkFleet_Description3, function Trig_Quest_SinkFleet_Description3_Actions )
endfunction

//===========================================================================
// Trigger: Quest SinkFleet Description4
//===========================================================================
function Trig_Quest_SinkFleet_Description4_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestSinkFleetReq1, "TRIGSTR_294" )
endfunction

//===========================================================================
function InitTrig_Quest_SinkFleet_Description4 takes nothing returns nothing
    set gg_trg_Quest_SinkFleet_Description4 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SinkFleet_Description4, function Trig_Quest_SinkFleet_Description4_Actions )
endfunction

//===========================================================================
// Trigger: Quest SinkFleet Description5
//===========================================================================
function Trig_Quest_SinkFleet_Description5_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestSinkFleetReq1, "TRIGSTR_295" )
endfunction

//===========================================================================
function InitTrig_Quest_SinkFleet_Description5 takes nothing returns nothing
    set gg_trg_Quest_SinkFleet_Description5 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SinkFleet_Description5, function Trig_Quest_SinkFleet_Description5_Actions )
endfunction

//===========================================================================
// Trigger: Quest SinkFleet Sync
//===========================================================================
function Trig_Quest_SinkFleet_Sync_Func002001 takes nothing returns boolean
    return ( udg_QuestSinkFleetProgress < 1 )
endfunction

function Trig_Quest_SinkFleet_Sync_Func005001 takes nothing returns boolean
    return ( udg_QuestSinkFleetProgress < 2 )
endfunction

function Trig_Quest_SinkFleet_Sync_Func008001 takes nothing returns boolean
    return ( udg_QuestSinkFleetProgress < 3 )
endfunction

function Trig_Quest_SinkFleet_Sync_Func011001 takes nothing returns boolean
    return ( udg_QuestSinkFleetProgress < 4 )
endfunction

function Trig_Quest_SinkFleet_Sync_Func014001 takes nothing returns boolean
    return ( udg_QuestSinkFleetProgress < 5 )
endfunction

function Trig_Quest_SinkFleet_Sync_Func017001 takes nothing returns boolean
    return ( udg_QuestSinkFleetProgress < 6 )
endfunction

function Trig_Quest_SinkFleet_Sync_Func020001 takes nothing returns boolean
    return ( udg_QuestSinkFleetProgress < 7 )
endfunction

function Trig_Quest_SinkFleet_Sync_Func024001 takes nothing returns boolean
    return ( udg_QuestSinkFleetProgress < 8 )
endfunction

function Trig_Quest_SinkFleet_Sync_Actions takes nothing returns nothing
    // 1
    if ( Trig_Quest_SinkFleet_Sync_Func002001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Create )
    // 2
    if ( Trig_Quest_SinkFleet_Sync_Func005001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestSetDiscoveredBJ( udg_QuestSinkFleet, true )
    // 3
    if ( Trig_Quest_SinkFleet_Sync_Func008001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Description1 )
    // 4
    if ( Trig_Quest_SinkFleet_Sync_Func011001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Description2 )
    // 5
    if ( Trig_Quest_SinkFleet_Sync_Func014001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Description3 )
    // 6
    if ( Trig_Quest_SinkFleet_Sync_Func017001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Description4 )
    // 7
    if ( Trig_Quest_SinkFleet_Sync_Func020001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_SinkFleet_Description5 )
    call QuestItemSetCompletedBJ( udg_QuestSinkFleetReq1, true )
    // 8
    if ( Trig_Quest_SinkFleet_Sync_Func024001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestSinkFleetReq2, true )
    call QuestSetCompletedBJ( udg_QuestSinkFleet, true )
endfunction

//===========================================================================
function InitTrig_Quest_SinkFleet_Sync takes nothing returns nothing
    set gg_trg_Quest_SinkFleet_Sync = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SinkFleet_Sync, function Trig_Quest_SinkFleet_Sync_Actions )
endfunction

//===========================================================================
// Trigger: Quest SignalPyres Create
//===========================================================================
function Trig_Quest_SignalPyres_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_SignalPyres_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestBJ( bj_QUESTTYPE_REQ_UNDISCOVERED, "TRIGSTR_296", "TRIGSTR_297", "ReplaceableTextures\\CommandButtons\\BTNFarSight.tga" )
    set udg_QuestSignalPyres = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_298" )
    set udg_QuestSignalPyresReq1 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_406" )
    set udg_QuestSignalPyresReq2 = GetLastCreatedQuestItemBJ()
    // Flag Quest Progress
    set udg_QuestSignalPyresProgress = IMaxBJ(1, udg_QuestSignalPyresProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SignalPyres_Create takes nothing returns nothing
    set gg_trg_Quest_SignalPyres_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_SignalPyres_Create, Condition( function Trig_Quest_SignalPyres_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_SignalPyres_Create, function Trig_Quest_SignalPyres_Create_Actions )
endfunction

//===========================================================================
// Trigger: Quest SignalPyres Discovered
//===========================================================================
function Trig_Quest_SignalPyres_Discovered_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSignalPyres, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_299" )
    // Flag Quest Progress
    set udg_QuestSignalPyresProgress = IMaxBJ(2, udg_QuestSignalPyresProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SignalPyres_Discovered takes nothing returns nothing
    set gg_trg_Quest_SignalPyres_Discovered = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SignalPyres_Discovered, function Trig_Quest_SignalPyres_Discovered_Actions )
endfunction

//===========================================================================
// Trigger: Quest SignalPyres Update1
//===========================================================================
function Trig_Quest_SignalPyres_Update1_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSignalPyres, true )
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Description1 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_300" )
    // Flag Quest Progress
    set udg_QuestSignalPyresProgress = IMaxBJ(3, udg_QuestSignalPyresProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SignalPyres_Update1 takes nothing returns nothing
    set gg_trg_Quest_SignalPyres_Update1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SignalPyres_Update1, function Trig_Quest_SignalPyres_Update1_Actions )
endfunction

//===========================================================================
// Trigger: Quest SignalPyres Update2
//===========================================================================
function Trig_Quest_SignalPyres_Update2_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSignalPyres, true )
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Description2 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_301" )
    // Flag Quest Progress
    set udg_QuestSignalPyresProgress = IMaxBJ(4, udg_QuestSignalPyresProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SignalPyres_Update2 takes nothing returns nothing
    set gg_trg_Quest_SignalPyres_Update2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SignalPyres_Update2, function Trig_Quest_SignalPyres_Update2_Actions )
endfunction

//===========================================================================
// Trigger: Quest SignalPyres Update3
//===========================================================================
function Trig_Quest_SignalPyres_Update3_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSignalPyres, true )
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Description3 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_302" )
    // Flag Quest Progress
    set udg_QuestSignalPyresProgress = IMaxBJ(5, udg_QuestSignalPyresProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SignalPyres_Update3 takes nothing returns nothing
    set gg_trg_Quest_SignalPyres_Update3 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SignalPyres_Update3, function Trig_Quest_SignalPyres_Update3_Actions )
endfunction

//===========================================================================
// Trigger: Quest SignalPyres Update4
//===========================================================================
function Trig_Quest_SignalPyres_Update4_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSignalPyres, true )
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Description4 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_303" )
    // Flag Quest Progress
    set udg_QuestSignalPyresProgress = IMaxBJ(6, udg_QuestSignalPyresProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SignalPyres_Update4 takes nothing returns nothing
    set gg_trg_Quest_SignalPyres_Update4 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SignalPyres_Update4, function Trig_Quest_SignalPyres_Update4_Actions )
endfunction

//===========================================================================
// Trigger: Quest SignalPyres Update5
//===========================================================================
function Trig_Quest_SignalPyres_Update5_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSignalPyres, true )
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Description5 )
    call QuestItemSetCompletedBJ( udg_QuestSignalPyresReq1, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_405" )
    // Flag Quest Progress
    set udg_QuestSignalPyresProgress = IMaxBJ(7, udg_QuestSignalPyresProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SignalPyres_Update5 takes nothing returns nothing
    set gg_trg_Quest_SignalPyres_Update5 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SignalPyres_Update5, function Trig_Quest_SignalPyres_Update5_Actions )
endfunction

//===========================================================================
// Trigger: Quest SignalPyres Completed
//===========================================================================
function Trig_Quest_SignalPyres_Completed_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSignalPyres, true )
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Description5 )
    call QuestItemSetCompletedBJ( udg_QuestSignalPyresReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestSignalPyresReq2, true )
    call QuestSetCompletedBJ( udg_QuestSignalPyres, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_304" )
    // Flag Quest Progress
    set udg_QuestSignalPyresProgress = IMaxBJ(8, udg_QuestSignalPyresProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SignalPyres_Completed takes nothing returns nothing
    set gg_trg_Quest_SignalPyres_Completed = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SignalPyres_Completed, function Trig_Quest_SignalPyres_Completed_Actions )
endfunction

//===========================================================================
// Trigger: Quest SignalPyres Description1
//===========================================================================
function Trig_Quest_SignalPyres_Description1_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestSignalPyresReq1, "TRIGSTR_305" )
endfunction

//===========================================================================
function InitTrig_Quest_SignalPyres_Description1 takes nothing returns nothing
    set gg_trg_Quest_SignalPyres_Description1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SignalPyres_Description1, function Trig_Quest_SignalPyres_Description1_Actions )
endfunction

//===========================================================================
// Trigger: Quest SignalPyres Description2
//===========================================================================
function Trig_Quest_SignalPyres_Description2_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestSignalPyresReq1, "TRIGSTR_306" )
endfunction

//===========================================================================
function InitTrig_Quest_SignalPyres_Description2 takes nothing returns nothing
    set gg_trg_Quest_SignalPyres_Description2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SignalPyres_Description2, function Trig_Quest_SignalPyres_Description2_Actions )
endfunction

//===========================================================================
// Trigger: Quest SignalPyres Description3
//===========================================================================
function Trig_Quest_SignalPyres_Description3_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestSignalPyresReq1, "TRIGSTR_307" )
endfunction

//===========================================================================
function InitTrig_Quest_SignalPyres_Description3 takes nothing returns nothing
    set gg_trg_Quest_SignalPyres_Description3 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SignalPyres_Description3, function Trig_Quest_SignalPyres_Description3_Actions )
endfunction

//===========================================================================
// Trigger: Quest SignalPyres Description4
//===========================================================================
function Trig_Quest_SignalPyres_Description4_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestSignalPyresReq1, "TRIGSTR_308" )
endfunction

//===========================================================================
function InitTrig_Quest_SignalPyres_Description4 takes nothing returns nothing
    set gg_trg_Quest_SignalPyres_Description4 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SignalPyres_Description4, function Trig_Quest_SignalPyres_Description4_Actions )
endfunction

//===========================================================================
// Trigger: Quest SignalPyres Description5
//===========================================================================
function Trig_Quest_SignalPyres_Description5_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestSignalPyresReq1, "TRIGSTR_309" )
endfunction

//===========================================================================
function InitTrig_Quest_SignalPyres_Description5 takes nothing returns nothing
    set gg_trg_Quest_SignalPyres_Description5 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SignalPyres_Description5, function Trig_Quest_SignalPyres_Description5_Actions )
endfunction

//===========================================================================
// Trigger: Quest SignalPyres Sync
//===========================================================================
function Trig_Quest_SignalPyres_Sync_Func002001 takes nothing returns boolean
    return ( udg_QuestSignalPyresProgress < 1 )
endfunction

function Trig_Quest_SignalPyres_Sync_Func005001 takes nothing returns boolean
    return ( udg_QuestSignalPyresProgress < 2 )
endfunction

function Trig_Quest_SignalPyres_Sync_Func008001 takes nothing returns boolean
    return ( udg_QuestSignalPyresProgress < 3 )
endfunction

function Trig_Quest_SignalPyres_Sync_Func011001 takes nothing returns boolean
    return ( udg_QuestSignalPyresProgress < 4 )
endfunction

function Trig_Quest_SignalPyres_Sync_Func014001 takes nothing returns boolean
    return ( udg_QuestSignalPyresProgress < 5 )
endfunction

function Trig_Quest_SignalPyres_Sync_Func017001 takes nothing returns boolean
    return ( udg_QuestSignalPyresProgress < 6 )
endfunction

function Trig_Quest_SignalPyres_Sync_Func020001 takes nothing returns boolean
    return ( udg_QuestSignalPyresProgress < 7 )
endfunction

function Trig_Quest_SignalPyres_Sync_Func024001 takes nothing returns boolean
    return ( udg_QuestSignalPyresProgress < 8 )
endfunction

function Trig_Quest_SignalPyres_Sync_Actions takes nothing returns nothing
    // 1
    if ( Trig_Quest_SignalPyres_Sync_Func002001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Create )
    // 2
    if ( Trig_Quest_SignalPyres_Sync_Func005001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestSetDiscoveredBJ( udg_QuestSignalPyres, true )
    // 3
    if ( Trig_Quest_SignalPyres_Sync_Func008001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Description1 )
    // 4
    if ( Trig_Quest_SignalPyres_Sync_Func011001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Description2 )
    // 5
    if ( Trig_Quest_SignalPyres_Sync_Func014001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Description3 )
    // 6
    if ( Trig_Quest_SignalPyres_Sync_Func017001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Description4 )
    // 7
    if ( Trig_Quest_SignalPyres_Sync_Func020001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_SignalPyres_Description5 )
    call QuestItemSetCompletedBJ( udg_QuestSignalPyresReq1, true )
    // 8
    if ( Trig_Quest_SignalPyres_Sync_Func024001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestSignalPyresReq2, true )
    call QuestSetCompletedBJ( udg_QuestSignalPyres, true )
endfunction

//===========================================================================
function InitTrig_Quest_SignalPyres_Sync takes nothing returns nothing
    set gg_trg_Quest_SignalPyres_Sync = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SignalPyres_Sync, function Trig_Quest_SignalPyres_Sync_Actions )
endfunction

//===========================================================================
// Trigger: Quest Summit Create
//===========================================================================
function Trig_Quest_Summit_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_Summit_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestBJ( bj_QUESTTYPE_REQ_UNDISCOVERED, "TRIGSTR_310", "TRIGSTR_311", "ReplaceableTextures\\CommandButtons\\BTNBanditSpearThrower.tga" )
    set udg_QuestSummit = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_312" )
    set udg_QuestSummitReq1 = GetLastCreatedQuestItemBJ()
    // Flag Quest Progress
    set udg_QuestSummitProgress = IMaxBJ(1, udg_QuestSummitProgress)
endfunction

//===========================================================================
function InitTrig_Quest_Summit_Create takes nothing returns nothing
    set gg_trg_Quest_Summit_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_Summit_Create, Condition( function Trig_Quest_Summit_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_Summit_Create, function Trig_Quest_Summit_Create_Actions )
endfunction

//===========================================================================
// Trigger: Quest Summit Create Req23
//===========================================================================
function Trig_Quest_Summit_Create_Req23_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_Summit_Create_Req23_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call CreateQuestItemBJ( udg_QuestSummit, "TRIGSTR_313" )
    set udg_QuestSummitReq2 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( udg_QuestSummit, "TRIGSTR_314" )
    set udg_QuestSummitReq3 = GetLastCreatedQuestItemBJ()
endfunction

//===========================================================================
function InitTrig_Quest_Summit_Create_Req23 takes nothing returns nothing
    set gg_trg_Quest_Summit_Create_Req23 = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_Summit_Create_Req23, Condition( function Trig_Quest_Summit_Create_Req23_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_Summit_Create_Req23, function Trig_Quest_Summit_Create_Req23_Actions )
endfunction

//===========================================================================
// Trigger: Quest Summit Discovered
//===========================================================================
function Trig_Quest_Summit_Discovered_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_Summit_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSummit, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_315" )
    // Flag Quest Progress
    set udg_QuestSummitProgress = IMaxBJ(2, udg_QuestSummitProgress)
endfunction

//===========================================================================
function InitTrig_Quest_Summit_Discovered takes nothing returns nothing
    set gg_trg_Quest_Summit_Discovered = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Summit_Discovered, function Trig_Quest_Summit_Discovered_Actions )
endfunction

//===========================================================================
// Trigger: Quest Summit Update1
//===========================================================================
function Trig_Quest_Summit_Update1_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_Summit_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSummit, true )
    call QuestItemSetCompletedBJ( udg_QuestSummitReq1, true )
    call ConditionalTriggerExecute( gg_trg_Quest_Summit_Create_Req23 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_316" )
    // Flag Quest Progress
    set udg_QuestSummitProgress = IMaxBJ(3, udg_QuestSummitProgress)
endfunction

//===========================================================================
function InitTrig_Quest_Summit_Update1 takes nothing returns nothing
    set gg_trg_Quest_Summit_Update1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Summit_Update1, function Trig_Quest_Summit_Update1_Actions )
endfunction

//===========================================================================
// Trigger: Quest Summit Update2
//===========================================================================
function Trig_Quest_Summit_Update2_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_Summit_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSummit, true )
    call QuestItemSetCompletedBJ( udg_QuestSummitReq1, true )
    call ConditionalTriggerExecute( gg_trg_Quest_Summit_Create_Req23 )
    call QuestItemSetCompletedBJ( udg_QuestSummitReq2, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_317" )
    // Flag Quest Progress
    set udg_QuestSummitProgress = IMaxBJ(4, udg_QuestSummitProgress)
endfunction

//===========================================================================
function InitTrig_Quest_Summit_Update2 takes nothing returns nothing
    set gg_trg_Quest_Summit_Update2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Summit_Update2, function Trig_Quest_Summit_Update2_Actions )
endfunction

//===========================================================================
// Trigger: Quest Summit Completed
//===========================================================================
function Trig_Quest_Summit_Completed_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_Summit_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSummit, true )
    call QuestItemSetCompletedBJ( udg_QuestSummitReq1, true )
    call ConditionalTriggerExecute( gg_trg_Quest_Summit_Create_Req23 )
    call QuestItemSetCompletedBJ( udg_QuestSummitReq2, true )
    call QuestItemSetCompletedBJ( udg_QuestSummitReq3, true )
    call QuestSetCompletedBJ( udg_QuestSummit, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_318" )
    // Flag Quest Progress
    set udg_QuestSummitProgress = IMaxBJ(5, udg_QuestSummitProgress)
endfunction

//===========================================================================
function InitTrig_Quest_Summit_Completed takes nothing returns nothing
    set gg_trg_Quest_Summit_Completed = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Summit_Completed, function Trig_Quest_Summit_Completed_Actions )
endfunction

//===========================================================================
// Trigger: Quest Summit Sync
//===========================================================================
function Trig_Quest_Summit_Sync_Func002001 takes nothing returns boolean
    return ( udg_QuestSummitProgress < 1 )
endfunction

function Trig_Quest_Summit_Sync_Func005001 takes nothing returns boolean
    return ( udg_QuestSummitProgress < 2 )
endfunction

function Trig_Quest_Summit_Sync_Func008001 takes nothing returns boolean
    return ( udg_QuestSummitProgress < 3 )
endfunction

function Trig_Quest_Summit_Sync_Func012001 takes nothing returns boolean
    return ( udg_QuestSummitProgress < 4 )
endfunction

function Trig_Quest_Summit_Sync_Func015001 takes nothing returns boolean
    return ( udg_QuestSummitProgress < 5 )
endfunction

function Trig_Quest_Summit_Sync_Actions takes nothing returns nothing
    // 1
    if ( Trig_Quest_Summit_Sync_Func002001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_Summit_Create )
    // 2
    if ( Trig_Quest_Summit_Sync_Func005001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestSetDiscoveredBJ( udg_QuestSummit, true )
    // 3
    if ( Trig_Quest_Summit_Sync_Func008001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestSummitReq1, true )
    call ConditionalTriggerExecute( gg_trg_Quest_Summit_Create_Req23 )
    // 4
    if ( Trig_Quest_Summit_Sync_Func012001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestSummitReq2, true )
    // 5
    if ( Trig_Quest_Summit_Sync_Func015001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestSummitReq3, true )
    call QuestSetCompletedBJ( udg_QuestSummit, true )
endfunction

//===========================================================================
function InitTrig_Quest_Summit_Sync takes nothing returns nothing
    set gg_trg_Quest_Summit_Sync = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Summit_Sync, function Trig_Quest_Summit_Sync_Actions )
endfunction

//===========================================================================
// Trigger: Quest SecureWells Create
//===========================================================================
function Trig_Quest_SecureWells_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_SecureWells_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestBJ( bj_QUESTTYPE_OPT_UNDISCOVERED, "TRIGSTR_319", "TRIGSTR_320", "ReplaceableTextures\\CommandButtons\\BTNJunkGolem.tga" )
    set udg_QuestSecureWells = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_321" )
    set udg_QuestSecureWellsReq1 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_322" )
    set udg_QuestSecureWellsReq2 = GetLastCreatedQuestItemBJ()
    // Flag Quest Progress
    set udg_QuestSecureWellsProgress = IMaxBJ(1, udg_QuestSecureWellsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SecureWells_Create takes nothing returns nothing
    set gg_trg_Quest_SecureWells_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_SecureWells_Create, Condition( function Trig_Quest_SecureWells_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_SecureWells_Create, function Trig_Quest_SecureWells_Create_Actions )
endfunction

//===========================================================================
// Trigger: Quest SecureWells Discovered
//===========================================================================
function Trig_Quest_SecureWells_Discovered_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSecureWells, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_323" )
    // Flag Quest Progress
    set udg_QuestSecureWellsProgress = IMaxBJ(2, udg_QuestSecureWellsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SecureWells_Discovered takes nothing returns nothing
    set gg_trg_Quest_SecureWells_Discovered = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SecureWells_Discovered, function Trig_Quest_SecureWells_Discovered_Actions )
endfunction

//===========================================================================
// Trigger: Quest SecureWells Update1
//===========================================================================
function Trig_Quest_SecureWells_Update1_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSecureWells, true )
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Description1 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_324" )
    // Flag Quest Progress
    set udg_QuestSecureWellsProgress = IMaxBJ(3, udg_QuestSecureWellsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SecureWells_Update1 takes nothing returns nothing
    set gg_trg_Quest_SecureWells_Update1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SecureWells_Update1, function Trig_Quest_SecureWells_Update1_Actions )
endfunction

//===========================================================================
// Trigger: Quest SecureWells Update2
//===========================================================================
function Trig_Quest_SecureWells_Update2_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSecureWells, true )
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Description2 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_325" )
    // Flag Quest Progress
    set udg_QuestSecureWellsProgress = IMaxBJ(4, udg_QuestSecureWellsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SecureWells_Update2 takes nothing returns nothing
    set gg_trg_Quest_SecureWells_Update2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SecureWells_Update2, function Trig_Quest_SecureWells_Update2_Actions )
endfunction

//===========================================================================
// Trigger: Quest SecureWells Update3
//===========================================================================
function Trig_Quest_SecureWells_Update3_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSecureWells, true )
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Description3 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_326" )
    // Flag Quest Progress
    set udg_QuestSecureWellsProgress = IMaxBJ(5, udg_QuestSecureWellsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SecureWells_Update3 takes nothing returns nothing
    set gg_trg_Quest_SecureWells_Update3 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SecureWells_Update3, function Trig_Quest_SecureWells_Update3_Actions )
endfunction

//===========================================================================
// Trigger: Quest SecureWells Update4
//===========================================================================
function Trig_Quest_SecureWells_Update4_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSecureWells, true )
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Description4 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_327" )
    // Flag Quest Progress
    set udg_QuestSecureWellsProgress = IMaxBJ(6, udg_QuestSecureWellsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SecureWells_Update4 takes nothing returns nothing
    set gg_trg_Quest_SecureWells_Update4 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SecureWells_Update4, function Trig_Quest_SecureWells_Update4_Actions )
endfunction

//===========================================================================
// Trigger: Quest SecureWells Update5
//===========================================================================
function Trig_Quest_SecureWells_Update5_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSecureWells, true )
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Description5 )
    call QuestItemSetCompletedBJ( udg_QuestSecureWellsReq1, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_328" )
    // Flag Quest Progress
    set udg_QuestSecureWellsProgress = IMaxBJ(7, udg_QuestSecureWellsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SecureWells_Update5 takes nothing returns nothing
    set gg_trg_Quest_SecureWells_Update5 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SecureWells_Update5, function Trig_Quest_SecureWells_Update5_Actions )
endfunction

//===========================================================================
// Trigger: Quest SecureWells Completed
//===========================================================================
function Trig_Quest_SecureWells_Completed_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestSecureWells, true )
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Description5 )
    call QuestItemSetCompletedBJ( udg_QuestSecureWellsReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestSecureWellsReq2, true )
    call QuestSetCompletedBJ( udg_QuestSecureWells, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_329" )
    // Flag Quest Progress
    set udg_QuestSecureWellsProgress = IMaxBJ(8, udg_QuestSecureWellsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_SecureWells_Completed takes nothing returns nothing
    set gg_trg_Quest_SecureWells_Completed = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SecureWells_Completed, function Trig_Quest_SecureWells_Completed_Actions )
endfunction

//===========================================================================
// Trigger: Quest SecureWells Description1
//===========================================================================
function Trig_Quest_SecureWells_Description1_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestSecureWellsReq1, "TRIGSTR_330" )
endfunction

//===========================================================================
function InitTrig_Quest_SecureWells_Description1 takes nothing returns nothing
    set gg_trg_Quest_SecureWells_Description1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SecureWells_Description1, function Trig_Quest_SecureWells_Description1_Actions )
endfunction

//===========================================================================
// Trigger: Quest SecureWells Description2
//===========================================================================
function Trig_Quest_SecureWells_Description2_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestSecureWellsReq1, "TRIGSTR_331" )
endfunction

//===========================================================================
function InitTrig_Quest_SecureWells_Description2 takes nothing returns nothing
    set gg_trg_Quest_SecureWells_Description2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SecureWells_Description2, function Trig_Quest_SecureWells_Description2_Actions )
endfunction

//===========================================================================
// Trigger: Quest SecureWells Description3
//===========================================================================
function Trig_Quest_SecureWells_Description3_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestSecureWellsReq1, "TRIGSTR_332" )
endfunction

//===========================================================================
function InitTrig_Quest_SecureWells_Description3 takes nothing returns nothing
    set gg_trg_Quest_SecureWells_Description3 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SecureWells_Description3, function Trig_Quest_SecureWells_Description3_Actions )
endfunction

//===========================================================================
// Trigger: Quest SecureWells Description4
//===========================================================================
function Trig_Quest_SecureWells_Description4_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestSecureWellsReq1, "TRIGSTR_333" )
endfunction

//===========================================================================
function InitTrig_Quest_SecureWells_Description4 takes nothing returns nothing
    set gg_trg_Quest_SecureWells_Description4 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SecureWells_Description4, function Trig_Quest_SecureWells_Description4_Actions )
endfunction

//===========================================================================
// Trigger: Quest SecureWells Description5
//===========================================================================
function Trig_Quest_SecureWells_Description5_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestSecureWellsReq1, "TRIGSTR_334" )
endfunction

//===========================================================================
function InitTrig_Quest_SecureWells_Description5 takes nothing returns nothing
    set gg_trg_Quest_SecureWells_Description5 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SecureWells_Description5, function Trig_Quest_SecureWells_Description5_Actions )
endfunction

//===========================================================================
// Trigger: Quest SecureWells Sync
//===========================================================================
function Trig_Quest_SecureWells_Sync_Func002001 takes nothing returns boolean
    return ( udg_QuestSecureWellsProgress < 1 )
endfunction

function Trig_Quest_SecureWells_Sync_Func005001 takes nothing returns boolean
    return ( udg_QuestSecureWellsProgress < 2 )
endfunction

function Trig_Quest_SecureWells_Sync_Func008001 takes nothing returns boolean
    return ( udg_QuestSecureWellsProgress < 3 )
endfunction

function Trig_Quest_SecureWells_Sync_Func011001 takes nothing returns boolean
    return ( udg_QuestSecureWellsProgress < 4 )
endfunction

function Trig_Quest_SecureWells_Sync_Func014001 takes nothing returns boolean
    return ( udg_QuestSecureWellsProgress < 5 )
endfunction

function Trig_Quest_SecureWells_Sync_Func017001 takes nothing returns boolean
    return ( udg_QuestSecureWellsProgress < 6 )
endfunction

function Trig_Quest_SecureWells_Sync_Func020001 takes nothing returns boolean
    return ( udg_QuestSecureWellsProgress < 7 )
endfunction

function Trig_Quest_SecureWells_Sync_Func024001 takes nothing returns boolean
    return ( udg_QuestSecureWellsProgress < 8 )
endfunction

function Trig_Quest_SecureWells_Sync_Actions takes nothing returns nothing
    // 1
    if ( Trig_Quest_SecureWells_Sync_Func002001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Create )
    // 2
    if ( Trig_Quest_SecureWells_Sync_Func005001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestSetDiscoveredBJ( udg_QuestSecureWells, true )
    // 3
    if ( Trig_Quest_SecureWells_Sync_Func008001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Description1 )
    // 4
    if ( Trig_Quest_SecureWells_Sync_Func011001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Description2 )
    // 5
    if ( Trig_Quest_SecureWells_Sync_Func014001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Description3 )
    // 6
    if ( Trig_Quest_SecureWells_Sync_Func017001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Description4 )
    // 7
    if ( Trig_Quest_SecureWells_Sync_Func020001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_SecureWells_Description5 )
    call QuestItemSetCompletedBJ( udg_QuestSecureWellsReq1, true )
    // 8
    if ( Trig_Quest_SecureWells_Sync_Func024001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestSecureWellsReq2, true )
    call QuestSetCompletedBJ( udg_QuestSecureWells, true )
endfunction

//===========================================================================
function InitTrig_Quest_SecureWells_Sync takes nothing returns nothing
    set gg_trg_Quest_SecureWells_Sync = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_SecureWells_Sync, function Trig_Quest_SecureWells_Sync_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderLizards Create
//===========================================================================
function Trig_Quest_ThunderLizards_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_ThunderLizards_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestBJ( bj_QUESTTYPE_OPT_UNDISCOVERED, "TRIGSTR_335", "TRIGSTR_336", "ReplaceableTextures\\CommandButtons\\BTNThunderLizard.tga" )
    set udg_QuestThunderLizards = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_337" )
    set udg_QuestThunderLizardsReq1 = GetLastCreatedQuestItemBJ()
    // Flag Quest Progress
    set udg_QuestThunderLizardsProgress = IMaxBJ(1, udg_QuestThunderLizardsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_ThunderLizards_Create takes nothing returns nothing
    set gg_trg_Quest_ThunderLizards_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_ThunderLizards_Create, Condition( function Trig_Quest_ThunderLizards_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_ThunderLizards_Create, function Trig_Quest_ThunderLizards_Create_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderLizards Create Req23
//===========================================================================
function Trig_Quest_ThunderLizards_Create_Req23_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_ThunderLizards_Create_Req23_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call CreateQuestItemBJ( udg_QuestThunderLizards, "TRIGSTR_338" )
    set udg_QuestThunderLizardsReq2 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( udg_QuestThunderLizards, "TRIGSTR_339" )
    set udg_QuestThunderLizardsReq3 = GetLastCreatedQuestItemBJ()
endfunction

//===========================================================================
function InitTrig_Quest_ThunderLizards_Create_Req23 takes nothing returns nothing
    set gg_trg_Quest_ThunderLizards_Create_Req23 = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_ThunderLizards_Create_Req23, Condition( function Trig_Quest_ThunderLizards_Create_Req23_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_ThunderLizards_Create_Req23, function Trig_Quest_ThunderLizards_Create_Req23_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderLizards Discovered
//===========================================================================
function Trig_Quest_ThunderLizards_Discovered_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderLizards_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestThunderLizards, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_340" )
    // Flag Quest Progress
    set udg_QuestThunderLizardsProgress = IMaxBJ(2, udg_QuestThunderLizardsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_ThunderLizards_Discovered takes nothing returns nothing
    set gg_trg_Quest_ThunderLizards_Discovered = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderLizards_Discovered, function Trig_Quest_ThunderLizards_Discovered_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderLizards Update1
//===========================================================================
function Trig_Quest_ThunderLizards_Update1_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderLizards_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestThunderLizards, true )
    call QuestItemSetCompletedBJ( udg_QuestThunderLizardsReq1, true )
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderLizards_Create_Req23 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_341" )
    // Flag Quest Progress
    set udg_QuestThunderLizardsProgress = IMaxBJ(3, udg_QuestThunderLizardsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_ThunderLizards_Update1 takes nothing returns nothing
    set gg_trg_Quest_ThunderLizards_Update1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderLizards_Update1, function Trig_Quest_ThunderLizards_Update1_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderLizards Update2
//===========================================================================
function Trig_Quest_ThunderLizards_Update2_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderLizards_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestThunderLizards, true )
    call QuestItemSetCompletedBJ( udg_QuestThunderLizardsReq1, true )
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderLizards_Create_Req23 )
    call QuestItemSetCompletedBJ( udg_QuestThunderLizardsReq2, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_342" )
    // Flag Quest Progress
    set udg_QuestThunderLizardsProgress = IMaxBJ(4, udg_QuestThunderLizardsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_ThunderLizards_Update2 takes nothing returns nothing
    set gg_trg_Quest_ThunderLizards_Update2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderLizards_Update2, function Trig_Quest_ThunderLizards_Update2_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderLizards Completed
//===========================================================================
function Trig_Quest_ThunderLizards_Completed_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderLizards_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestThunderLizards, true )
    call QuestItemSetCompletedBJ( udg_QuestThunderLizardsReq1, true )
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderLizards_Create_Req23 )
    call QuestItemSetCompletedBJ( udg_QuestThunderLizardsReq2, true )
    call QuestItemSetCompletedBJ( udg_QuestThunderLizardsReq3, true )
    call QuestSetCompletedBJ( udg_QuestThunderLizards, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_343" )
    // Flag Quest Progress
    set udg_QuestThunderLizardsProgress = IMaxBJ(5, udg_QuestThunderLizardsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_ThunderLizards_Completed takes nothing returns nothing
    set gg_trg_Quest_ThunderLizards_Completed = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderLizards_Completed, function Trig_Quest_ThunderLizards_Completed_Actions )
endfunction

//===========================================================================
// Trigger: Quest ThunderLizards Sync
//===========================================================================
function Trig_Quest_ThunderLizards_Sync_Func002001 takes nothing returns boolean
    return ( udg_QuestThunderLizardsProgress < 1 )
endfunction

function Trig_Quest_ThunderLizards_Sync_Func005001 takes nothing returns boolean
    return ( udg_QuestThunderLizardsProgress < 2 )
endfunction

function Trig_Quest_ThunderLizards_Sync_Func008001 takes nothing returns boolean
    return ( udg_QuestThunderLizardsProgress < 3 )
endfunction

function Trig_Quest_ThunderLizards_Sync_Func012001 takes nothing returns boolean
    return ( udg_QuestThunderLizardsProgress < 4 )
endfunction

function Trig_Quest_ThunderLizards_Sync_Func015001 takes nothing returns boolean
    return ( udg_QuestThunderLizardsProgress < 5 )
endfunction

function Trig_Quest_ThunderLizards_Sync_Actions takes nothing returns nothing
    // 1
    if ( Trig_Quest_ThunderLizards_Sync_Func002001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderLizards_Create )
    // 2
    if ( Trig_Quest_ThunderLizards_Sync_Func005001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestSetDiscoveredBJ( udg_QuestThunderLizards, true )
    // 3
    if ( Trig_Quest_ThunderLizards_Sync_Func008001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestThunderLizardsReq1, true )
    call ConditionalTriggerExecute( gg_trg_Quest_ThunderLizards_Create_Req23 )
    // 4
    if ( Trig_Quest_ThunderLizards_Sync_Func012001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestThunderLizardsReq2, true )
    // 5
    if ( Trig_Quest_ThunderLizards_Sync_Func015001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestThunderLizardsReq3, true )
    call QuestSetCompletedBJ( udg_QuestThunderLizards, true )
endfunction

//===========================================================================
function InitTrig_Quest_ThunderLizards_Sync takes nothing returns nothing
    set gg_trg_Quest_ThunderLizards_Sync = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_ThunderLizards_Sync, function Trig_Quest_ThunderLizards_Sync_Actions )
endfunction

//===========================================================================
// Trigger: Quest LizardEggs Create
//===========================================================================
function Trig_Quest_LizardEggs_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_LizardEggs_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestBJ( bj_QUESTTYPE_OPT_UNDISCOVERED, "TRIGSTR_344", "TRIGSTR_345", "ReplaceableTextures\\CommandButtons\\BTNThunderLizardEgg.tga" )
    set udg_QuestLizardEggs = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_346" )
    set udg_QuestLizardEggsReq1 = GetLastCreatedQuestItemBJ()
    // Flag Quest Progress
    set udg_QuestLizardEggsProgress = IMaxBJ(1, udg_QuestLizardEggsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_LizardEggs_Create takes nothing returns nothing
    set gg_trg_Quest_LizardEggs_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_LizardEggs_Create, Condition( function Trig_Quest_LizardEggs_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_LizardEggs_Create, function Trig_Quest_LizardEggs_Create_Actions )
endfunction

//===========================================================================
// Trigger: Quest LizardEggs Discovered
//===========================================================================
function Trig_Quest_LizardEggs_Discovered_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_LizardEggs_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestLizardEggs, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_347" )
    // Flag Quest Progress
    set udg_QuestLizardEggsProgress = IMaxBJ(2, udg_QuestLizardEggsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_LizardEggs_Discovered takes nothing returns nothing
    set gg_trg_Quest_LizardEggs_Discovered = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_LizardEggs_Discovered, function Trig_Quest_LizardEggs_Discovered_Actions )
endfunction

//===========================================================================
// Trigger: Quest LizardEggs Update1
//===========================================================================
function Trig_Quest_LizardEggs_Update1_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_LizardEggs_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestLizardEggs, true )
    call ConditionalTriggerExecute( gg_trg_Quest_LizardEggs_Description1 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_348" )
    // Flag Quest Progress
    set udg_QuestLizardEggsProgress = IMaxBJ(3, udg_QuestLizardEggsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_LizardEggs_Update1 takes nothing returns nothing
    set gg_trg_Quest_LizardEggs_Update1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_LizardEggs_Update1, function Trig_Quest_LizardEggs_Update1_Actions )
endfunction

//===========================================================================
// Trigger: Quest LizardEggs Update2
//===========================================================================
function Trig_Quest_LizardEggs_Update2_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_LizardEggs_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestLizardEggs, true )
    call ConditionalTriggerExecute( gg_trg_Quest_LizardEggs_Description2 )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_349" )
    // Flag Quest Progress
    set udg_QuestLizardEggsProgress = IMaxBJ(4, udg_QuestLizardEggsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_LizardEggs_Update2 takes nothing returns nothing
    set gg_trg_Quest_LizardEggs_Update2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_LizardEggs_Update2, function Trig_Quest_LizardEggs_Update2_Actions )
endfunction

//===========================================================================
// Trigger: Quest LizardEggs Completed
//===========================================================================
function Trig_Quest_LizardEggs_Completed_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_LizardEggs_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestLizardEggs, true )
    call ConditionalTriggerExecute( gg_trg_Quest_LizardEggs_Description3 )
    call QuestItemSetCompletedBJ( udg_QuestLizardEggsReq1, true )
    call QuestSetCompletedBJ( udg_QuestLizardEggs, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_350" )
    // Flag Quest Progress
    set udg_QuestLizardEggsProgress = IMaxBJ(5, udg_QuestLizardEggsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_LizardEggs_Completed takes nothing returns nothing
    set gg_trg_Quest_LizardEggs_Completed = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_LizardEggs_Completed, function Trig_Quest_LizardEggs_Completed_Actions )
endfunction

//===========================================================================
// Trigger: Quest LizardEggs Description1
//===========================================================================
function Trig_Quest_LizardEggs_Description1_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestLizardEggsReq1, "TRIGSTR_351" )
endfunction

//===========================================================================
function InitTrig_Quest_LizardEggs_Description1 takes nothing returns nothing
    set gg_trg_Quest_LizardEggs_Description1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_LizardEggs_Description1, function Trig_Quest_LizardEggs_Description1_Actions )
endfunction

//===========================================================================
// Trigger: Quest LizardEggs Description2
//===========================================================================
function Trig_Quest_LizardEggs_Description2_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestLizardEggsReq1, "TRIGSTR_352" )
endfunction

//===========================================================================
function InitTrig_Quest_LizardEggs_Description2 takes nothing returns nothing
    set gg_trg_Quest_LizardEggs_Description2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_LizardEggs_Description2, function Trig_Quest_LizardEggs_Description2_Actions )
endfunction

//===========================================================================
// Trigger: Quest LizardEggs Description3
//===========================================================================
function Trig_Quest_LizardEggs_Description3_Actions takes nothing returns nothing
    call QuestItemSetDescriptionBJ( udg_QuestLizardEggsReq1, "TRIGSTR_353" )
endfunction

//===========================================================================
function InitTrig_Quest_LizardEggs_Description3 takes nothing returns nothing
    set gg_trg_Quest_LizardEggs_Description3 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_LizardEggs_Description3, function Trig_Quest_LizardEggs_Description3_Actions )
endfunction

//===========================================================================
// Trigger: Quest LizardEggs Sync
//===========================================================================
function Trig_Quest_LizardEggs_Sync_Func002001 takes nothing returns boolean
    return ( udg_QuestLizardEggsProgress < 1 )
endfunction

function Trig_Quest_LizardEggs_Sync_Func005001 takes nothing returns boolean
    return ( udg_QuestLizardEggsProgress < 2 )
endfunction

function Trig_Quest_LizardEggs_Sync_Func008001 takes nothing returns boolean
    return ( udg_QuestLizardEggsProgress < 3 )
endfunction

function Trig_Quest_LizardEggs_Sync_Func011001 takes nothing returns boolean
    return ( udg_QuestLizardEggsProgress < 4 )
endfunction

function Trig_Quest_LizardEggs_Sync_Func014001 takes nothing returns boolean
    return ( udg_QuestLizardEggsProgress < 5 )
endfunction

function Trig_Quest_LizardEggs_Sync_Actions takes nothing returns nothing
    // 1
    if ( Trig_Quest_LizardEggs_Sync_Func002001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_LizardEggs_Create )
    // 2
    if ( Trig_Quest_LizardEggs_Sync_Func005001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestSetDiscoveredBJ( udg_QuestLizardEggs, true )
    // 3
    if ( Trig_Quest_LizardEggs_Sync_Func008001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_LizardEggs_Description1 )
    // 4
    if ( Trig_Quest_LizardEggs_Sync_Func011001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_LizardEggs_Description2 )
    // 5
    if ( Trig_Quest_LizardEggs_Sync_Func014001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_LizardEggs_Description3 )
    call QuestItemSetCompletedBJ( udg_QuestLizardEggsReq1, true )
    call QuestSetCompletedBJ( udg_QuestLizardEggs, true )
endfunction

//===========================================================================
function InitTrig_Quest_LizardEggs_Sync takes nothing returns nothing
    set gg_trg_Quest_LizardEggs_Sync = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_LizardEggs_Sync, function Trig_Quest_LizardEggs_Sync_Actions )
endfunction

//===========================================================================
// Trigger: Quest Quillboars Create
//===========================================================================
function Trig_Quest_Quillboars_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_Quillboars_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestBJ( bj_QUESTTYPE_OPT_UNDISCOVERED, "TRIGSTR_354", "TRIGSTR_355", "ReplaceableTextures\\CommandButtons\\BTNRazorback.tga" )
    set udg_QuestQuillboars = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_356" )
    set udg_QuestQuillboarsReq1 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_357" )
    set udg_QuestQuillboarsReq2 = GetLastCreatedQuestItemBJ()
    // Flag Quest Progress
    set udg_QuestQuillboarsProgress = IMaxBJ(1, udg_QuestQuillboarsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_Quillboars_Create takes nothing returns nothing
    set gg_trg_Quest_Quillboars_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_Quillboars_Create, Condition( function Trig_Quest_Quillboars_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_Quillboars_Create, function Trig_Quest_Quillboars_Create_Actions )
endfunction

//===========================================================================
// Trigger: Quest Quillboars Discovered
//===========================================================================
function Trig_Quest_Quillboars_Discovered_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_Quillboars_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestQuillboars, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_358" )
    // Flag Quest Progress
    set udg_QuestQuillboarsProgress = IMaxBJ(2, udg_QuestQuillboarsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_Quillboars_Discovered takes nothing returns nothing
    set gg_trg_Quest_Quillboars_Discovered = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Quillboars_Discovered, function Trig_Quest_Quillboars_Discovered_Actions )
endfunction

//===========================================================================
// Trigger: Quest Quillboars Update1
//===========================================================================
function Trig_Quest_Quillboars_Update1_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_Quillboars_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestQuillboars, true )
    call QuestItemSetCompletedBJ( udg_QuestQuillboarsReq1, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_359" )
    // Flag Quest Progress
    set udg_QuestQuillboarsProgress = IMaxBJ(3, udg_QuestQuillboarsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_Quillboars_Update1 takes nothing returns nothing
    set gg_trg_Quest_Quillboars_Update1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Quillboars_Update1, function Trig_Quest_Quillboars_Update1_Actions )
endfunction

//===========================================================================
// Trigger: Quest Quillboars Completed
//===========================================================================
function Trig_Quest_Quillboars_Completed_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_Quillboars_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestQuillboars, true )
    call QuestItemSetCompletedBJ( udg_QuestQuillboarsReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestQuillboarsReq2, true )
    call QuestSetCompletedBJ( udg_QuestQuillboars, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_360" )
    // Flag Quest Progress
    set udg_QuestQuillboarsProgress = IMaxBJ(4, udg_QuestQuillboarsProgress)
endfunction

//===========================================================================
function InitTrig_Quest_Quillboars_Completed takes nothing returns nothing
    set gg_trg_Quest_Quillboars_Completed = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Quillboars_Completed, function Trig_Quest_Quillboars_Completed_Actions )
endfunction

//===========================================================================
// Trigger: Quest Quillboars Sync
//===========================================================================
function Trig_Quest_Quillboars_Sync_Func002001 takes nothing returns boolean
    return ( udg_QuestQuillboarsProgress < 1 )
endfunction

function Trig_Quest_Quillboars_Sync_Func005001 takes nothing returns boolean
    return ( udg_QuestQuillboarsProgress < 2 )
endfunction

function Trig_Quest_Quillboars_Sync_Func008001 takes nothing returns boolean
    return ( udg_QuestQuillboarsProgress < 3 )
endfunction

function Trig_Quest_Quillboars_Sync_Func011001 takes nothing returns boolean
    return ( udg_QuestQuillboarsProgress < 4 )
endfunction

function Trig_Quest_Quillboars_Sync_Actions takes nothing returns nothing
    // 1
    if ( Trig_Quest_Quillboars_Sync_Func002001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_Quillboars_Create )
    // 2
    if ( Trig_Quest_Quillboars_Sync_Func005001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestSetDiscoveredBJ( udg_QuestQuillboars, true )
    // 3
    if ( Trig_Quest_Quillboars_Sync_Func008001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestQuillboarsReq1, true )
    // 4
    if ( Trig_Quest_Quillboars_Sync_Func011001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestQuillboarsReq2, true )
    call QuestSetCompletedBJ( udg_QuestQuillboars, true )
endfunction

//===========================================================================
function InitTrig_Quest_Quillboars_Sync takes nothing returns nothing
    set gg_trg_Quest_Quillboars_Sync = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_Quillboars_Sync, function Trig_Quest_Quillboars_Sync_Actions )
endfunction

//===========================================================================
// Trigger: Quest WarlockCoven Create
//===========================================================================
function Trig_Quest_WarlockCoven_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_WarlockCoven_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestBJ( bj_QUESTTYPE_OPT_UNDISCOVERED, "TRIGSTR_361", "TRIGSTR_362", "ReplaceableTextures\\CommandButtons\\BTNChaosWarlockGreen.tga" )
    set udg_QuestWarlockCoven = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_363" )
    set udg_QuestWarlockCovenReq1 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_364" )
    set udg_QuestWarlockCovenReq2 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_365" )
    set udg_QuestWarlockCovenReq3 = GetLastCreatedQuestItemBJ()
    // Flag Quest Progress
    set udg_QuestWarlockCovenProgress = IMaxBJ(1, udg_QuestWarlockCovenProgress)
endfunction

//===========================================================================
function InitTrig_Quest_WarlockCoven_Create takes nothing returns nothing
    set gg_trg_Quest_WarlockCoven_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_WarlockCoven_Create, Condition( function Trig_Quest_WarlockCoven_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_WarlockCoven_Create, function Trig_Quest_WarlockCoven_Create_Actions )
endfunction

//===========================================================================
// Trigger: Quest WarlockCoven Discovered
//===========================================================================
function Trig_Quest_WarlockCoven_Discovered_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_WarlockCoven_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestWarlockCoven, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_366" )
    // Flag Quest Progress
    set udg_QuestWarlockCovenProgress = IMaxBJ(2, udg_QuestWarlockCovenProgress)
endfunction

//===========================================================================
function InitTrig_Quest_WarlockCoven_Discovered takes nothing returns nothing
    set gg_trg_Quest_WarlockCoven_Discovered = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_WarlockCoven_Discovered, function Trig_Quest_WarlockCoven_Discovered_Actions )
endfunction

//===========================================================================
// Trigger: Quest WarlockCoven Update1
//===========================================================================
function Trig_Quest_WarlockCoven_Update1_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_WarlockCoven_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestWarlockCoven, true )
    call QuestItemSetCompletedBJ( udg_QuestWarlockCovenReq1, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_367" )
    // Flag Quest Progress
    set udg_QuestWarlockCovenProgress = IMaxBJ(3, udg_QuestWarlockCovenProgress)
endfunction

//===========================================================================
function InitTrig_Quest_WarlockCoven_Update1 takes nothing returns nothing
    set gg_trg_Quest_WarlockCoven_Update1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_WarlockCoven_Update1, function Trig_Quest_WarlockCoven_Update1_Actions )
endfunction

//===========================================================================
// Trigger: Quest WarlockCoven Update2
//===========================================================================
function Trig_Quest_WarlockCoven_Update2_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_WarlockCoven_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestWarlockCoven, true )
    call QuestItemSetCompletedBJ( udg_QuestWarlockCovenReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestWarlockCovenReq2, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_368" )
    // Flag Quest Progress
    set udg_QuestWarlockCovenProgress = IMaxBJ(4, udg_QuestWarlockCovenProgress)
endfunction

//===========================================================================
function InitTrig_Quest_WarlockCoven_Update2 takes nothing returns nothing
    set gg_trg_Quest_WarlockCoven_Update2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_WarlockCoven_Update2, function Trig_Quest_WarlockCoven_Update2_Actions )
endfunction

//===========================================================================
// Trigger: Quest WarlockCoven Completed
//===========================================================================
function Trig_Quest_WarlockCoven_Completed_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_WarlockCoven_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestWarlockCoven, true )
    call QuestItemSetCompletedBJ( udg_QuestWarlockCovenReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestWarlockCovenReq2, true )
    call QuestItemSetCompletedBJ( udg_QuestWarlockCovenReq3, true )
    call QuestSetCompletedBJ( udg_QuestWarlockCoven, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_369" )
    // Flag Quest Progress
    set udg_QuestWarlockCovenProgress = IMaxBJ(5, udg_QuestWarlockCovenProgress)
endfunction

//===========================================================================
function InitTrig_Quest_WarlockCoven_Completed takes nothing returns nothing
    set gg_trg_Quest_WarlockCoven_Completed = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_WarlockCoven_Completed, function Trig_Quest_WarlockCoven_Completed_Actions )
endfunction

//===========================================================================
// Trigger: Quest WarlockCoven Sync
//===========================================================================
function Trig_Quest_WarlockCoven_Sync_Func002001 takes nothing returns boolean
    return ( udg_QuestWarlockCovenProgress < 1 )
endfunction

function Trig_Quest_WarlockCoven_Sync_Func005001 takes nothing returns boolean
    return ( udg_QuestWarlockCovenProgress < 2 )
endfunction

function Trig_Quest_WarlockCoven_Sync_Func008001 takes nothing returns boolean
    return ( udg_QuestWarlockCovenProgress < 3 )
endfunction

function Trig_Quest_WarlockCoven_Sync_Func011001 takes nothing returns boolean
    return ( udg_QuestWarlockCovenProgress < 4 )
endfunction

function Trig_Quest_WarlockCoven_Sync_Func014001 takes nothing returns boolean
    return ( udg_QuestWarlockCovenProgress < 5 )
endfunction

function Trig_Quest_WarlockCoven_Sync_Actions takes nothing returns nothing
    // 1
    if ( Trig_Quest_WarlockCoven_Sync_Func002001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_WarlockCoven_Create )
    // 2
    if ( Trig_Quest_WarlockCoven_Sync_Func005001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestSetDiscoveredBJ( udg_QuestWarlockCoven, true )
    // 3
    if ( Trig_Quest_WarlockCoven_Sync_Func008001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestWarlockCovenReq1, true )
    // 4
    if ( Trig_Quest_WarlockCoven_Sync_Func011001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestWarlockCovenReq2, true )
    // 5
    if ( Trig_Quest_WarlockCoven_Sync_Func014001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestWarlockCovenReq3, true )
    call QuestSetCompletedBJ( udg_QuestWarlockCoven, true )
endfunction

//===========================================================================
function InitTrig_Quest_WarlockCoven_Sync takes nothing returns nothing
    set gg_trg_Quest_WarlockCoven_Sync = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_WarlockCoven_Sync, function Trig_Quest_WarlockCoven_Sync_Actions )
endfunction

//===========================================================================
// Trigger: Quest StrangeBrew Create
//===========================================================================
function Trig_Quest_StrangeBrew_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_StrangeBrew_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Create the quest objects
    call CreateQuestBJ( bj_QUESTTYPE_OPT_UNDISCOVERED, "TRIGSTR_370", "TRIGSTR_371", "ReplaceableTextures\\CommandButtons\\BTNPandarenBrewmaster.tga" )
    set udg_QuestStrangeBrew = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_372" )
    set udg_QuestStrangeBrewReq1 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_373" )
    set udg_QuestStrangeBrewReq2 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_374" )
    set udg_QuestStrangeBrewReq3 = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( GetLastCreatedQuestBJ(), "TRIGSTR_375" )
    set udg_QuestStrangeBrewReq4 = GetLastCreatedQuestItemBJ()
    // Flag Quest Progress
    set udg_QuestStrangeBrewProgress = IMaxBJ(1, udg_QuestStrangeBrewProgress)
endfunction

//===========================================================================
function InitTrig_Quest_StrangeBrew_Create takes nothing returns nothing
    set gg_trg_Quest_StrangeBrew_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quest_StrangeBrew_Create, Condition( function Trig_Quest_StrangeBrew_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quest_StrangeBrew_Create, function Trig_Quest_StrangeBrew_Create_Actions )
endfunction

//===========================================================================
// Trigger: Quest StrangeBrew Discovered
//===========================================================================
function Trig_Quest_StrangeBrew_Discovered_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_StrangeBrew_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestStrangeBrew, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_376" )
    // Flag Quest Progress
    set udg_QuestStrangeBrewProgress = IMaxBJ(2, udg_QuestStrangeBrewProgress)
endfunction

//===========================================================================
function InitTrig_Quest_StrangeBrew_Discovered takes nothing returns nothing
    set gg_trg_Quest_StrangeBrew_Discovered = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_StrangeBrew_Discovered, function Trig_Quest_StrangeBrew_Discovered_Actions )
endfunction

//===========================================================================
// Trigger: Quest StrangeBrew Update1
//===========================================================================
function Trig_Quest_StrangeBrew_Update1_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_StrangeBrew_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestStrangeBrew, true )
    call QuestItemSetCompletedBJ( udg_QuestStrangeBrewReq1, true )
    set udg_QuestStrangeBrewProgress1 = true
    // Display a quest message.
    call ConditionalTriggerExecute( gg_trg_Quest_StrangeBrew_Update_Message )
    // Flag Quest Progress
    set udg_QuestStrangeBrewProgress = IMaxBJ(2, udg_QuestStrangeBrewProgress)
endfunction

//===========================================================================
function InitTrig_Quest_StrangeBrew_Update1 takes nothing returns nothing
    set gg_trg_Quest_StrangeBrew_Update1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_StrangeBrew_Update1, function Trig_Quest_StrangeBrew_Update1_Actions )
endfunction

//===========================================================================
// Trigger: Quest StrangeBrew Update2
//===========================================================================
function Trig_Quest_StrangeBrew_Update2_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_StrangeBrew_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestStrangeBrew, true )
    call QuestItemSetCompletedBJ( udg_QuestStrangeBrewReq2, true )
    set udg_QuestStrangeBrewProgress2 = true
    // Display a quest message.
    call ConditionalTriggerExecute( gg_trg_Quest_StrangeBrew_Update_Message )
    // Flag Quest Progress
    set udg_QuestStrangeBrewProgress = IMaxBJ(2, udg_QuestStrangeBrewProgress)
endfunction

//===========================================================================
function InitTrig_Quest_StrangeBrew_Update2 takes nothing returns nothing
    set gg_trg_Quest_StrangeBrew_Update2 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_StrangeBrew_Update2, function Trig_Quest_StrangeBrew_Update2_Actions )
endfunction

//===========================================================================
// Trigger: Quest StrangeBrew Update3
//===========================================================================
function Trig_Quest_StrangeBrew_Update3_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_StrangeBrew_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestStrangeBrew, true )
    call QuestItemSetCompletedBJ( udg_QuestStrangeBrewReq3, true )
    set udg_QuestStrangeBrewProgress3 = true
    // Display a quest message.
    call ConditionalTriggerExecute( gg_trg_Quest_StrangeBrew_Update_Message )
    // Flag Quest Progress
    set udg_QuestStrangeBrewProgress = IMaxBJ(2, udg_QuestStrangeBrewProgress)
endfunction

//===========================================================================
function InitTrig_Quest_StrangeBrew_Update3 takes nothing returns nothing
    set gg_trg_Quest_StrangeBrew_Update3 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_StrangeBrew_Update3, function Trig_Quest_StrangeBrew_Update3_Actions )
endfunction

//===========================================================================
// Trigger: Quest StrangeBrew Update Message
//===========================================================================
function Trig_Quest_StrangeBrew_Update_Message_Func002C takes nothing returns boolean
    if ( not ( IsQuestItemCompleted(udg_QuestStrangeBrewReq1) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_StrangeBrew_Update_Message_Func003C takes nothing returns boolean
    if ( not ( IsQuestItemCompleted(udg_QuestStrangeBrewReq2) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_StrangeBrew_Update_Message_Func004C takes nothing returns boolean
    if ( not ( IsQuestItemCompleted(udg_QuestStrangeBrewReq3) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quest_StrangeBrew_Update_Message_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_377" )
    if ( Trig_Quest_StrangeBrew_Update_Message_Func002C() ) then
        call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_REQUIREMENT, "TRIGSTR_379" )
    else
        call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_REQUIREMENT, "TRIGSTR_378" )
    endif
    if ( Trig_Quest_StrangeBrew_Update_Message_Func003C() ) then
        call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_REQUIREMENT, "TRIGSTR_381" )
    else
        call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_REQUIREMENT, "TRIGSTR_380" )
    endif
    if ( Trig_Quest_StrangeBrew_Update_Message_Func004C() ) then
        call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_REQUIREMENT, "TRIGSTR_383" )
    else
        call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_REQUIREMENT, "TRIGSTR_382" )
    endif
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_REQUIREMENT, "TRIGSTR_384" )
endfunction

//===========================================================================
function InitTrig_Quest_StrangeBrew_Update_Message takes nothing returns nothing
    set gg_trg_Quest_StrangeBrew_Update_Message = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_StrangeBrew_Update_Message, function Trig_Quest_StrangeBrew_Update_Message_Actions )
endfunction

//===========================================================================
// Trigger: Quest StrangeBrew Completed
//===========================================================================
function Trig_Quest_StrangeBrew_Completed_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quest_StrangeBrew_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_QuestStrangeBrew, true )
    call QuestItemSetCompletedBJ( udg_QuestStrangeBrewReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestStrangeBrewReq2, true )
    call QuestItemSetCompletedBJ( udg_QuestStrangeBrewReq3, true )
    call QuestItemSetCompletedBJ( udg_QuestStrangeBrewReq4, true )
    call QuestSetCompletedBJ( udg_QuestStrangeBrew, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_385" )
    // Flag Quest Progress
    set udg_QuestStrangeBrewProgress1 = true
    set udg_QuestStrangeBrewProgress2 = true
    set udg_QuestStrangeBrewProgress3 = true
    set udg_QuestStrangeBrewProgress = IMaxBJ(3, udg_QuestStrangeBrewProgress)
endfunction

//===========================================================================
function InitTrig_Quest_StrangeBrew_Completed takes nothing returns nothing
    set gg_trg_Quest_StrangeBrew_Completed = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_StrangeBrew_Completed, function Trig_Quest_StrangeBrew_Completed_Actions )
endfunction

//===========================================================================
// Trigger: Quest StrangeBrew Sync
//===========================================================================
function Trig_Quest_StrangeBrew_Sync_Func002001 takes nothing returns boolean
    return ( udg_QuestStrangeBrewProgress < 1 )
endfunction

function Trig_Quest_StrangeBrew_Sync_Func005001 takes nothing returns boolean
    return ( udg_QuestStrangeBrewProgress < 2 )
endfunction

function Trig_Quest_StrangeBrew_Sync_Func007001 takes nothing returns boolean
    return ( udg_QuestStrangeBrewProgress1 == true )
endfunction

function Trig_Quest_StrangeBrew_Sync_Func008001 takes nothing returns boolean
    return ( udg_QuestStrangeBrewProgress2 == true )
endfunction

function Trig_Quest_StrangeBrew_Sync_Func009001 takes nothing returns boolean
    return ( udg_QuestStrangeBrewProgress3 == true )
endfunction

function Trig_Quest_StrangeBrew_Sync_Func011001 takes nothing returns boolean
    return ( udg_QuestStrangeBrewProgress < 3 )
endfunction

function Trig_Quest_StrangeBrew_Sync_Actions takes nothing returns nothing
    // 1
    if ( Trig_Quest_StrangeBrew_Sync_Func002001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_Quest_StrangeBrew_Create )
    // 2
    if ( Trig_Quest_StrangeBrew_Sync_Func005001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestSetDiscoveredBJ( udg_QuestStrangeBrew, true )
    if ( Trig_Quest_StrangeBrew_Sync_Func007001() ) then
        call QuestItemSetCompletedBJ( udg_QuestStrangeBrewReq1, true )
    else
        call DoNothing(  )
    endif
    if ( Trig_Quest_StrangeBrew_Sync_Func008001() ) then
        call QuestItemSetCompletedBJ( udg_QuestStrangeBrewReq2, true )
    else
        call DoNothing(  )
    endif
    if ( Trig_Quest_StrangeBrew_Sync_Func009001() ) then
        call QuestItemSetCompletedBJ( udg_QuestStrangeBrewReq3, true )
    else
        call DoNothing(  )
    endif
    // 3
    if ( Trig_Quest_StrangeBrew_Sync_Func011001() ) then
        return
    else
        call DoNothing(  )
    endif
    call QuestItemSetCompletedBJ( udg_QuestStrangeBrewReq1, true )
    call QuestItemSetCompletedBJ( udg_QuestStrangeBrewReq2, true )
    call QuestItemSetCompletedBJ( udg_QuestStrangeBrewReq3, true )
    call QuestItemSetCompletedBJ( udg_QuestStrangeBrewReq4, true )
    call QuestSetCompletedBJ( udg_QuestStrangeBrew, true )
endfunction

//===========================================================================
function InitTrig_Quest_StrangeBrew_Sync takes nothing returns nothing
    set gg_trg_Quest_StrangeBrew_Sync = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Quest_StrangeBrew_Sync, function Trig_Quest_StrangeBrew_Sync_Actions )
endfunction

//===========================================================================
// Trigger: TriggerGoblinCinematic
//===========================================================================
function Trig_TriggerGoblinCinematic_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    return true
endfunction

function Trig_TriggerGoblinCinematic_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call QueuedTriggerAddBJ( gg_trg_Goblin_Midgame_Cinematic_Q, true )
endfunction

//===========================================================================
function InitTrig_TriggerGoblinCinematic takes nothing returns nothing
    set gg_trg_TriggerGoblinCinematic = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_TriggerGoblinCinematic, gg_rct_GoblinTripwire )
    call TriggerAddCondition( gg_trg_TriggerGoblinCinematic, Condition( function Trig_TriggerGoblinCinematic_Conditions ) )
    call TriggerAddAction( gg_trg_TriggerGoblinCinematic, function Trig_TriggerGoblinCinematic_Actions )
endfunction

//===========================================================================
// Trigger: RescueGoblins
//===========================================================================
function Trig_RescueGoblins_Actions takes nothing returns nothing
    call RescueUnitBJ( udg_GoblinSapper01, udg_AP1_Player, true )
    call RescueUnitBJ( udg_GoblinSapper02, udg_AP1_Player, true )
    call RescueUnitBJ( udg_GoblinSapper03, udg_AP1_Player, true )
    call RescueUnitBJ( udg_GoblinSapper04, udg_AP1_Player, true )
endfunction

//===========================================================================
function InitTrig_RescueGoblins takes nothing returns nothing
    set gg_trg_RescueGoblins = CreateTrigger(  )
    call TriggerAddAction( gg_trg_RescueGoblins, function Trig_RescueGoblins_Actions )
endfunction

//===========================================================================
// Trigger: SupportColumn01A
//===========================================================================
function Trig_SupportColumn01A_Actions takes nothing returns nothing
    call DisableTrigger( gg_trg_SupportColumn01A )
    call DisableTrigger( gg_trg_SupportColumn01B )
    call KillDestructable( gg_dest_BTsc_0462 )
    set udg_Column01Dead = true
    //  
    call QueuedTriggerAddBJ( gg_trg_Tunnel01_MiniCinematic_Q, true )
endfunction

//===========================================================================
function InitTrig_SupportColumn01A takes nothing returns nothing
    set gg_trg_SupportColumn01A = CreateTrigger(  )
    call TriggerRegisterDeathEvent( gg_trg_SupportColumn01A, gg_dest_BTsc_0453 )
    call TriggerAddAction( gg_trg_SupportColumn01A, function Trig_SupportColumn01A_Actions )
endfunction

//===========================================================================
// Trigger: SupportColumn01B
//===========================================================================
function Trig_SupportColumn01B_Actions takes nothing returns nothing
    call DisableTrigger( gg_trg_SupportColumn01A )
    call DisableTrigger( gg_trg_SupportColumn01B )
    call KillDestructable( gg_dest_BTsc_0453 )
    set udg_Column01Dead = true
    //  
    call QueuedTriggerAddBJ( gg_trg_Tunnel01_MiniCinematic_Q, true )
endfunction

//===========================================================================
function InitTrig_SupportColumn01B takes nothing returns nothing
    set gg_trg_SupportColumn01B = CreateTrigger(  )
    call TriggerRegisterDeathEvent( gg_trg_SupportColumn01B, gg_dest_BTsc_0462 )
    call TriggerAddAction( gg_trg_SupportColumn01B, function Trig_SupportColumn01B_Actions )
endfunction

//===========================================================================
// Trigger: SupportColumn02A
//===========================================================================
function Trig_SupportColumn02A_Actions takes nothing returns nothing
    call DisableTrigger( gg_trg_SupportColumn02A )
    call DisableTrigger( gg_trg_SupportColumn02B )
    call KillDestructable( gg_dest_BTsc_0073 )
    set udg_Column02Dead = true
    //  
    call QueuedTriggerAddBJ( gg_trg_Tunnel02_MiniCinematic_Q, true )
endfunction

//===========================================================================
function InitTrig_SupportColumn02A takes nothing returns nothing
    set gg_trg_SupportColumn02A = CreateTrigger(  )
    call TriggerRegisterDeathEvent( gg_trg_SupportColumn02A, gg_dest_BTsc_0460 )
    call TriggerAddAction( gg_trg_SupportColumn02A, function Trig_SupportColumn02A_Actions )
endfunction

//===========================================================================
// Trigger: SupportColumn02B
//===========================================================================
function Trig_SupportColumn02B_Actions takes nothing returns nothing
    call DisableTrigger( gg_trg_SupportColumn02A )
    call DisableTrigger( gg_trg_SupportColumn02B )
    call KillDestructable( gg_dest_BTsc_0460 )
    set udg_Column02Dead = true
    //  
    call QueuedTriggerAddBJ( gg_trg_Tunnel02_MiniCinematic_Q, true )
endfunction

//===========================================================================
function InitTrig_SupportColumn02B takes nothing returns nothing
    set gg_trg_SupportColumn02B = CreateTrigger(  )
    call TriggerRegisterDeathEvent( gg_trg_SupportColumn02B, gg_dest_BTsc_0073 )
    call TriggerAddAction( gg_trg_SupportColumn02B, function Trig_SupportColumn02B_Actions )
endfunction

//===========================================================================
// Trigger: SupportColumn03A
//===========================================================================
function Trig_SupportColumn03A_Actions takes nothing returns nothing
    call DisableTrigger( gg_trg_SupportColumn03A )
    call DisableTrigger( gg_trg_SupportColumn03B )
    call KillDestructable( gg_dest_BTsc_0461 )
    set udg_Column03Dead = true
    //  
    call QueuedTriggerAddBJ( gg_trg_Tunnel03_MiniCinematic_Q, true )
endfunction

//===========================================================================
function InitTrig_SupportColumn03A takes nothing returns nothing
    set gg_trg_SupportColumn03A = CreateTrigger(  )
    call TriggerRegisterDeathEvent( gg_trg_SupportColumn03A, gg_dest_BTsc_0463 )
    call TriggerAddAction( gg_trg_SupportColumn03A, function Trig_SupportColumn03A_Actions )
endfunction

//===========================================================================
// Trigger: SupportColumn03B
//===========================================================================
function Trig_SupportColumn03B_Actions takes nothing returns nothing
    call DisableTrigger( gg_trg_SupportColumn03A )
    call DisableTrigger( gg_trg_SupportColumn03B )
    call KillDestructable( gg_dest_BTsc_0463 )
    set udg_Column03Dead = true
    //  
    call QueuedTriggerAddBJ( gg_trg_Tunnel03_MiniCinematic_Q, true )
endfunction

//===========================================================================
function InitTrig_SupportColumn03B takes nothing returns nothing
    set gg_trg_SupportColumn03B = CreateTrigger(  )
    call TriggerRegisterDeathEvent( gg_trg_SupportColumn03B, gg_dest_BTsc_0461 )
    call TriggerAddAction( gg_trg_SupportColumn03B, function Trig_SupportColumn03B_Actions )
endfunction

//===========================================================================
// Trigger: Create Column Leaderboard
//===========================================================================
function Trig_Create_Column_Leaderboard_Actions takes nothing returns nothing
    call CreateLeaderboardBJ( GetPlayersAll(), "TRIGSTR_074" )
    set udg_LBColumnLeaderboard = GetLastCreatedLeaderboard()
    call LeaderboardAddItemBJ( udg_AP1_Player, udg_LBColumnLeaderboard, "TRIGSTR_075", 0 )
    call LeaderboardSetValueColorBJ( udg_LBColumnLeaderboard, 100, 100, 100, 0 )
    call LeaderboardSetLabelColorBJ( udg_LBColumnLeaderboard, 100, 80.00, 0.00, 0 )
    call LeaderboardSetPlayerItemLabelBJ( udg_AP1_Player, udg_LBColumnLeaderboard, "TRIGSTR_077" )
    call LeaderboardSetStyleBJ( udg_LBColumnLeaderboard, false, true, false, false )
    call LeaderboardDisplayBJ( true, udg_LBColumnLeaderboard )
endfunction

//===========================================================================
function InitTrig_Create_Column_Leaderboard takes nothing returns nothing
    set gg_trg_Create_Column_Leaderboard = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Create_Column_Leaderboard, function Trig_Create_Column_Leaderboard_Actions )
endfunction

//===========================================================================
// Trigger: Update Column Leaderboard
//===========================================================================
function Trig_Update_Column_Leaderboard_Func001C takes nothing returns boolean
    if ( not ( udg_LBColumnsDestroyed == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Update_Column_Leaderboard_Func002C takes nothing returns boolean
    if ( not ( udg_LBColumnsDestroyed == 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Update_Column_Leaderboard_Func003C takes nothing returns boolean
    if ( not ( udg_LBColumnsDestroyed == 3 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Update_Column_Leaderboard_Actions takes nothing returns nothing
    if ( Trig_Update_Column_Leaderboard_Func001C() ) then
        call LeaderboardSetPlayerItemLabelBJ( udg_AP1_Player, udg_LBColumnLeaderboard, "TRIGSTR_078" )
    else
    endif
    if ( Trig_Update_Column_Leaderboard_Func002C() ) then
        call LeaderboardSetPlayerItemLabelBJ( udg_AP1_Player, udg_LBColumnLeaderboard, "TRIGSTR_079" )
    else
    endif
    if ( Trig_Update_Column_Leaderboard_Func003C() ) then
        call ConditionalTriggerExecute( gg_trg_Quest_SealTunnel_Update2 )
        call LeaderboardSetPlayerItemLabelBJ( udg_AP1_Player, udg_LBColumnLeaderboard, "TRIGSTR_080" )
        call LeaderboardDisplayBJ( false, udg_LBColumnLeaderboard )
        set udg_AllTunnelsClosed = true
    else
    endif
endfunction

//===========================================================================
function InitTrig_Update_Column_Leaderboard takes nothing returns nothing
    set gg_trg_Update_Column_Leaderboard = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Update_Column_Leaderboard, function Trig_Update_Column_Leaderboard_Actions )
endfunction

//===========================================================================
// Trigger: Tunnel01VoiceOver
//===========================================================================
function Trig_Tunnel01VoiceOver_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    return true
endfunction

function Trig_Tunnel01VoiceOver_Actions takes nothing returns nothing
    call DisableTrigger( gg_trg_Tunnel01VoiceOver )
    call DisableTrigger( gg_trg_Tunnel02VoiceOver )
    call DisableTrigger( gg_trg_Tunnel03VoiceOver )
    call QueuedTriggerAddBJ( gg_trg_Tunnel01VoiceOver_Q, true )
    call QueuedTriggerAddBJ( gg_trg_HINT_Use_Kaboom_Q, true )
endfunction

//===========================================================================
function InitTrig_Tunnel01VoiceOver takes nothing returns nothing
    set gg_trg_Tunnel01VoiceOver = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Tunnel01VoiceOver, gg_rct_NearTunnel01 )
    call TriggerAddCondition( gg_trg_Tunnel01VoiceOver, Condition( function Trig_Tunnel01VoiceOver_Conditions ) )
    call TriggerAddAction( gg_trg_Tunnel01VoiceOver, function Trig_Tunnel01VoiceOver_Actions )
endfunction

//===========================================================================
// Trigger: Tunnel01VoiceOver Q
//===========================================================================
function Trig_Tunnel01VoiceOver_Q_Actions takes nothing returns nothing
    call PingMinimapLocForForce( udg_APG1_Player, GetRectCenter(gg_rct_Tunnel01), 1 )
    call SetCameraQuickPositionLocForPlayer( udg_AP1_Player, GetRectCenter(gg_rct_Tunnel01) )
    call SetSpeechVolumeGroupsBJ(  )
    call TransmissionFromUnitWithNameBJ( udg_APG1_Player, udg_Rexxar, "TRIGSTR_394", gg_snd_D03Rexxar08, "TRIGSTR_395", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_D03Rexxar08, 0 )
    call VolumeGroupResetBJ(  )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Tunnel01VoiceOver_Q takes nothing returns nothing
    set gg_trg_Tunnel01VoiceOver_Q = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Tunnel01VoiceOver_Q, function Trig_Tunnel01VoiceOver_Q_Actions )
endfunction

//===========================================================================
// Trigger: Tunnel02VoiceOver
//===========================================================================
function Trig_Tunnel02VoiceOver_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    return true
endfunction

function Trig_Tunnel02VoiceOver_Actions takes nothing returns nothing
    call DisableTrigger( gg_trg_Tunnel01VoiceOver )
    call DisableTrigger( gg_trg_Tunnel02VoiceOver )
    call DisableTrigger( gg_trg_Tunnel03VoiceOver )
    call QueuedTriggerAddBJ( gg_trg_Tunnel01VoiceOver_Q, true )
    call QueuedTriggerAddBJ( gg_trg_HINT_Use_Kaboom_Q, true )
endfunction

//===========================================================================
function InitTrig_Tunnel02VoiceOver takes nothing returns nothing
    set gg_trg_Tunnel02VoiceOver = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Tunnel02VoiceOver, gg_rct_NearTunnel02 )
    call TriggerAddCondition( gg_trg_Tunnel02VoiceOver, Condition( function Trig_Tunnel02VoiceOver_Conditions ) )
    call TriggerAddAction( gg_trg_Tunnel02VoiceOver, function Trig_Tunnel02VoiceOver_Actions )
endfunction

//===========================================================================
// Trigger: Tunnel02VoiceOver Q
//===========================================================================
function Trig_Tunnel02VoiceOver_Q_Actions takes nothing returns nothing
    call PingMinimapLocForForce( udg_APG1_Player, GetRectCenter(gg_rct_Tunnel02), 1 )
    call SetCameraQuickPositionLocForPlayer( udg_AP1_Player, GetRectCenter(gg_rct_Tunnel02) )
    call SetSpeechVolumeGroupsBJ(  )
    call TransmissionFromUnitWithNameBJ( udg_APG1_Player, udg_Rexxar, "TRIGSTR_396", gg_snd_D03Rexxar08, "TRIGSTR_397", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_D03Rexxar08, 0 )
    call VolumeGroupResetBJ(  )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Tunnel02VoiceOver_Q takes nothing returns nothing
    set gg_trg_Tunnel02VoiceOver_Q = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Tunnel02VoiceOver_Q, function Trig_Tunnel02VoiceOver_Q_Actions )
endfunction

//===========================================================================
// Trigger: Tunnel03VoiceOver
//===========================================================================
function Trig_Tunnel03VoiceOver_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_AP1_Player ) ) then
        return false
    endif
    return true
endfunction

function Trig_Tunnel03VoiceOver_Actions takes nothing returns nothing
    call DisableTrigger( gg_trg_Tunnel01VoiceOver )
    call DisableTrigger( gg_trg_Tunnel02VoiceOver )
    call DisableTrigger( gg_trg_Tunnel03VoiceOver )
    call QueuedTriggerAddBJ( gg_trg_Tunnel01VoiceOver_Q, true )
    call QueuedTriggerAddBJ( gg_trg_HINT_Use_Kaboom_Q, true )
endfunction

//===========================================================================
function InitTrig_Tunnel03VoiceOver takes nothing returns nothing
    set gg_trg_Tunnel03VoiceOver = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Tunnel03VoiceOver, gg_rct_NearTunnel03 )
    call TriggerAddCondition( gg_trg_Tunnel03VoiceOver, Condition( function Trig_Tunnel03VoiceOver_Conditions ) )
    call TriggerAddAction( gg_trg_Tunnel03VoiceOver, function Trig_Tunnel03VoiceOver_Actions )
endfunction

//===========================================================================
// Trigger: Tunnel03VoiceOver Q
//===========================================================================
function Trig_Tunnel03VoiceOver_Q_Actions takes nothing returns nothing
    call PingMinimapLocForForce( udg_APG1_Player, GetRectCenter(gg_rct_Tunnel03), 1 )
    call SetCameraQuickPositionLocForPlayer( udg_AP1_Player, GetRectCenter(gg_rct_Tunnel03) )
    call SetSpeechVolumeGroupsBJ(  )
    call TransmissionFromUnitWithNameBJ( udg_APG1_Player, udg_Rexxar, "TRIGSTR_398", gg_snd_D03Rexxar08, "TRIGSTR_399", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_D03Rexxar08, 0 )
    call VolumeGroupResetBJ(  )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Tunnel03VoiceOver_Q takes nothing returns nothing
    set gg_trg_Tunnel03VoiceOver_Q = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Tunnel03VoiceOver_Q, function Trig_Tunnel03VoiceOver_Q_Actions )
endfunction

//===========================================================================
// Trigger: Initialize Goblin Respawn Timer
//===========================================================================
function Trig_Initialize_Goblin_Respawn_Timer_Actions takes nothing returns nothing
    call StartTimerBJ( udg_GoblinRespawnTimer, true, 10.00 )
endfunction

//===========================================================================
function InitTrig_Initialize_Goblin_Respawn_Timer takes nothing returns nothing
    set gg_trg_Initialize_Goblin_Respawn_Timer = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Initialize_Goblin_Respawn_Timer, function Trig_Initialize_Goblin_Respawn_Timer_Actions )
endfunction

//===========================================================================
// Trigger: Goblin Respawn Timer Expires
//===========================================================================
function Trig_Goblin_Respawn_Timer_Expires_Func008001001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Goblin_Respawn_Timer_Expires_Func008001001002002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'ngsp' )
endfunction

function Trig_Goblin_Respawn_Timer_Expires_Func008001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Goblin_Respawn_Timer_Expires_Func008001001002001(), Trig_Goblin_Respawn_Timer_Expires_Func008001001002002() )
endfunction

function Trig_Goblin_Respawn_Timer_Expires_Conditions takes nothing returns boolean
    if ( not ( udg_InCinematic == false ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsOfPlayerMatching(udg_AP1_Player, Condition(function Trig_Goblin_Respawn_Timer_Expires_Func008001001002))) < 4 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Goblin_Respawn_Timer_Expires_Actions takes nothing returns nothing
    set udg_TempPointA = GetRectCenter(gg_rct_Sapper_Respawn_Enter)
    call CreateNUnitsAtLoc( 1, 'ngsp', Player(3), udg_TempPointA, 0.00 )
    call RemoveLocation( udg_TempPointA )
    set udg_TempPointA = GetRandomLocInRect(gg_rct_SapperTarget)
    call IssuePointOrderLocBJ( GetLastCreatedUnit(), "move", GetRandomLocInRect(gg_rct_SapperTarget) )
    call RemoveLocation( udg_TempPointA )
endfunction

//===========================================================================
function InitTrig_Goblin_Respawn_Timer_Expires takes nothing returns nothing
    set gg_trg_Goblin_Respawn_Timer_Expires = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Goblin_Respawn_Timer_Expires, udg_GoblinRespawnTimer )
    call TriggerAddCondition( gg_trg_Goblin_Respawn_Timer_Expires, Condition( function Trig_Goblin_Respawn_Timer_Expires_Conditions ) )
    call TriggerAddAction( gg_trg_Goblin_Respawn_Timer_Expires, function Trig_Goblin_Respawn_Timer_Expires_Actions )
endfunction

//===========================================================================
// Trigger: Sapper Enters Dest
//===========================================================================
function Trig_Sapper_Enters_Dest_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(3) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Sapper_Enters_Dest_Actions takes nothing returns nothing
    call RescueUnitBJ( GetEnteringUnit(), udg_AP1_Player, true )
    call SetCameraQuickPositionLocForPlayer( udg_AP1_Player, GetRectCenter(gg_rct_Sapper_Respawn_Dest) )
    call ConditionalTriggerExecute( gg_trg_HINT_First_Replacement )
endfunction

//===========================================================================
function InitTrig_Sapper_Enters_Dest takes nothing returns nothing
    set gg_trg_Sapper_Enters_Dest = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Sapper_Enters_Dest, gg_rct_Sapper_Respawn_Dest )
    call TriggerAddCondition( gg_trg_Sapper_Enters_Dest, Condition( function Trig_Sapper_Enters_Dest_Conditions ) )
    call TriggerAddAction( gg_trg_Sapper_Enters_Dest, function Trig_Sapper_Enters_Dest_Actions )
endfunction

//===========================================================================
// Trigger: HINT First Replacement
//===========================================================================
function Trig_HINT_First_Replacement_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_HINT_First_Replacement_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call QueuedTriggerAddBJ( gg_trg_HINT_First_Replacement_Q, true )
endfunction

//===========================================================================
function InitTrig_HINT_First_Replacement takes nothing returns nothing
    set gg_trg_HINT_First_Replacement = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_HINT_First_Replacement, Condition( function Trig_HINT_First_Replacement_Conditions ) )
    call TriggerAddAction( gg_trg_HINT_First_Replacement, function Trig_HINT_First_Replacement_Actions )
endfunction

//===========================================================================
// Trigger: HINT First Replacement Q
//===========================================================================
function Trig_HINT_First_Replacement_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_HINT_First_Replacement_Q_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_403" )
    call TriggerSleepAction( bj_QUEUE_DELAY_HINT )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_HINT_First_Replacement_Q takes nothing returns nothing
    set gg_trg_HINT_First_Replacement_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_HINT_First_Replacement_Q, Condition( function Trig_HINT_First_Replacement_Q_Conditions ) )
    call TriggerAddAction( gg_trg_HINT_First_Replacement_Q, function Trig_HINT_First_Replacement_Q_Actions )
endfunction

//===========================================================================
// Trigger: HINT Use Kaboom Q
//===========================================================================
function Trig_HINT_Use_Kaboom_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_HINT_Use_Kaboom_Q_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_ALWAYSHINT, "TRIGSTR_404" )
    call TriggerSleepAction( bj_QUEUE_DELAY_HINT )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_HINT_Use_Kaboom_Q takes nothing returns nothing
    set gg_trg_HINT_Use_Kaboom_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_HINT_Use_Kaboom_Q, Condition( function Trig_HINT_Use_Kaboom_Q_Conditions ) )
    call TriggerAddAction( gg_trg_HINT_Use_Kaboom_Q, function Trig_HINT_Use_Kaboom_Q_Actions )
endfunction

//===========================================================================
// Trigger: Add Preexisting Units to Packs
//===========================================================================
function Trig_Add_Preexisting_Units_to_Packs_Func001001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkob' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func001A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[1] )
    call SetUnitUserData( GetEnumUnit(), 1 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableCommonKoboldA )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func002001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkob' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func002A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[2] )
    call SetUnitUserData( GetEnumUnit(), 2 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableCommonKoboldB )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func003001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkot' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func003A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[3] )
    call SetUnitUserData( GetEnumUnit(), 3 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableKT03A )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func004001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkob' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func004A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[4] )
    call SetUnitUserData( GetEnumUnit(), 4 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableCommonKoboldB )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func005001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkol' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func005A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[5] )
    call SetUnitUserData( GetEnumUnit(), 5 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableKT04XA )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func006001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkob' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func006A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[6] )
    call SetUnitUserData( GetEnumUnit(), 6 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableCommonKoboldA )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func007001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkob' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func007A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[7] )
    call SetUnitUserData( GetEnumUnit(), 7 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableCommonKoboldB )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func008001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkog' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func008A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[8] )
    call SetUnitUserData( GetEnumUnit(), 8 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableKG06A )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func009001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkob' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func009A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[9] )
    call SetUnitUserData( GetEnumUnit(), 9 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableCommonKoboldB )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func010001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nowb' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func010A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[10] )
    call SetUnitUserData( GetEnumUnit(), 10 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableWildkin )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func011001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkob' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func011A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[11] )
    call SetUnitUserData( GetEnumUnit(), 11 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableCommonKoboldA )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func012001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkot' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func012A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[12] )
    call SetUnitUserData( GetEnumUnit(), 12 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableKT09A )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func013001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkob' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func013A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[13] )
    call SetUnitUserData( GetEnumUnit(), 13 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableCommonKoboldB )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func014001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkot' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func014A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[14] )
    call SetUnitUserData( GetEnumUnit(), 14 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableKT10A )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func015001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkob' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func015A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[15] )
    call SetUnitUserData( GetEnumUnit(), 15 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableCommonKoboldA )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func016001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkog' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func016A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[16] )
    call SetUnitUserData( GetEnumUnit(), 16 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableKG11XA )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func017001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkob' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func017A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[17] )
    call SetUnitUserData( GetEnumUnit(), 17 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableCommonKoboldB )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func018001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkot' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func018A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[18] )
    call SetUnitUserData( GetEnumUnit(), 18 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableKT12A )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func019001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkob' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func019A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[19] )
    call SetUnitUserData( GetEnumUnit(), 19 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableCommonKoboldB )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func020001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkot' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func020A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[20] )
    call SetUnitUserData( GetEnumUnit(), 20 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableKT13A )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func021001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkob' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func021A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[21] )
    call SetUnitUserData( GetEnumUnit(), 21 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableCommonKoboldB )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func022001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkob' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func022A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[22] )
    call SetUnitUserData( GetEnumUnit(), 22 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableCommonKoboldA )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func023001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkol' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func023A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[23] )
    call SetUnitUserData( GetEnumUnit(), 23 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableKTM15A )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func024001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkog' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func024A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[24] )
    call SetUnitUserData( GetEnumUnit(), 24 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableKG15B )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func025001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkog' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func025A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[25] )
    call SetUnitUserData( GetEnumUnit(), 25 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableKG16XA )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func026001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkob' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func026A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[26] )
    call SetUnitUserData( GetEnumUnit(), 26 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableCommonKoboldB )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func027001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkot' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func027A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[27] )
    call SetUnitUserData( GetEnumUnit(), 27 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableKT17A )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func028001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkob' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func028A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[28] )
    call SetUnitUserData( GetEnumUnit(), 28 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableCommonKoboldA )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func029001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkob' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func029A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[29] )
    call SetUnitUserData( GetEnumUnit(), 29 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableCommonKoboldB )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func030001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nkob' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func030A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[30] )
    call SetUnitUserData( GetEnumUnit(), 30 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableCommonKoboldB )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func031001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nowb' )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Func031A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_PackGroupArray[31] )
    call SetUnitUserData( GetEnumUnit(), 31 )
    call GroupAddUnitSimple( GetEnumUnit(), udg_DropTableWildkin )
endfunction

function Trig_Add_Preexisting_Units_to_Packs_Actions takes nothing returns nothing
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack01, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func001001002)), function Trig_Add_Preexisting_Units_to_Packs_Func001A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack02, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func002001002)), function Trig_Add_Preexisting_Units_to_Packs_Func002A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack03, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func003001002)), function Trig_Add_Preexisting_Units_to_Packs_Func003A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack03, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func004001002)), function Trig_Add_Preexisting_Units_to_Packs_Func004A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack04X, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func005001002)), function Trig_Add_Preexisting_Units_to_Packs_Func005A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack04X, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func006001002)), function Trig_Add_Preexisting_Units_to_Packs_Func006A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack05X, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func007001002)), function Trig_Add_Preexisting_Units_to_Packs_Func007A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack06, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func008001002)), function Trig_Add_Preexisting_Units_to_Packs_Func008A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack06, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func009001002)), function Trig_Add_Preexisting_Units_to_Packs_Func009A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack07, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func010001002)), function Trig_Add_Preexisting_Units_to_Packs_Func010A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack08, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func011001002)), function Trig_Add_Preexisting_Units_to_Packs_Func011A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack09, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func012001002)), function Trig_Add_Preexisting_Units_to_Packs_Func012A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack09, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func013001002)), function Trig_Add_Preexisting_Units_to_Packs_Func013A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack10, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func014001002)), function Trig_Add_Preexisting_Units_to_Packs_Func014A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack10, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func015001002)), function Trig_Add_Preexisting_Units_to_Packs_Func015A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack11X, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func016001002)), function Trig_Add_Preexisting_Units_to_Packs_Func016A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack11X, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func017001002)), function Trig_Add_Preexisting_Units_to_Packs_Func017A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack12, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func018001002)), function Trig_Add_Preexisting_Units_to_Packs_Func018A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack12, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func019001002)), function Trig_Add_Preexisting_Units_to_Packs_Func019A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack13, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func020001002)), function Trig_Add_Preexisting_Units_to_Packs_Func020A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack13, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func021001002)), function Trig_Add_Preexisting_Units_to_Packs_Func021A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack14X, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func022001002)), function Trig_Add_Preexisting_Units_to_Packs_Func022A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack15, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func023001002)), function Trig_Add_Preexisting_Units_to_Packs_Func023A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack15, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func024001002)), function Trig_Add_Preexisting_Units_to_Packs_Func024A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack16X, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func025001002)), function Trig_Add_Preexisting_Units_to_Packs_Func025A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack16X, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func026001002)), function Trig_Add_Preexisting_Units_to_Packs_Func026A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack17, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func027001002)), function Trig_Add_Preexisting_Units_to_Packs_Func027A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack17, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func028001002)), function Trig_Add_Preexisting_Units_to_Packs_Func028A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack18, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func029001002)), function Trig_Add_Preexisting_Units_to_Packs_Func029A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack19, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func030001002)), function Trig_Add_Preexisting_Units_to_Packs_Func030A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_Pack20, Condition(function Trig_Add_Preexisting_Units_to_Packs_Func031001002)), function Trig_Add_Preexisting_Units_to_Packs_Func031A )
endfunction

//===========================================================================
function InitTrig_Add_Preexisting_Units_to_Packs takes nothing returns nothing
    set gg_trg_Add_Preexisting_Units_to_Packs = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Add_Preexisting_Units_to_Packs, function Trig_Add_Preexisting_Units_to_Packs_Actions )
endfunction

//===========================================================================
// Trigger: Pack01
//===========================================================================
function Trig_Pack01_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack01_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 1
    set udg_SpawnPackRegion = gg_rct_Pack01
    set udg_SpawnPackUnitType = 'nkob'
    set udg_SpawnPackUnitMax = 4
    set udg_SpawnPackDropTable = udg_DropTableCommonKoboldA
    set udg_SpawnPackSpawnChance = 80.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack01 takes nothing returns nothing
    set gg_trg_Pack01 = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack01, udg_SpawnTimerCommon01 )
    call TriggerAddCondition( gg_trg_Pack01, Condition( function Trig_Pack01_Conditions ) )
    call TriggerAddAction( gg_trg_Pack01, function Trig_Pack01_Actions )
endfunction

//===========================================================================
// Trigger: Pack02
//===========================================================================
function Trig_Pack02_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack02_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 2
    set udg_SpawnPackRegion = gg_rct_Pack02
    set udg_SpawnPackUnitType = 'nkob'
    set udg_SpawnPackUnitMax = 2
    set udg_SpawnPackDropTable = udg_DropTableCommonKoboldB
    set udg_SpawnPackSpawnChance = 80.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack02 takes nothing returns nothing
    set gg_trg_Pack02 = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack02, udg_SpawnTimerCommon02 )
    call TriggerAddCondition( gg_trg_Pack02, Condition( function Trig_Pack02_Conditions ) )
    call TriggerAddAction( gg_trg_Pack02, function Trig_Pack02_Actions )
endfunction

//===========================================================================
// Trigger: Pack03A
//===========================================================================
function Trig_Pack03A_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack03A_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 3
    set udg_SpawnPackRegion = gg_rct_Pack03
    set udg_SpawnPackUnitType = 'nkot'
    set udg_SpawnPackUnitMax = 1
    set udg_SpawnPackDropTable = udg_DropTableKT03A
    set udg_SpawnPackSpawnChance = 50.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack03A takes nothing returns nothing
    set gg_trg_Pack03A = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack03A, udg_SpawnTimerCommon03 )
    call TriggerAddCondition( gg_trg_Pack03A, Condition( function Trig_Pack03A_Conditions ) )
    call TriggerAddAction( gg_trg_Pack03A, function Trig_Pack03A_Actions )
endfunction

//===========================================================================
// Trigger: Pack03B
//===========================================================================
function Trig_Pack03B_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack03B_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 4
    set udg_SpawnPackRegion = gg_rct_Pack03
    set udg_SpawnPackUnitType = 'nkob'
    set udg_SpawnPackUnitMax = 3
    set udg_SpawnPackDropTable = udg_DropTableCommonKoboldB
    set udg_SpawnPackSpawnChance = 80.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack03B takes nothing returns nothing
    set gg_trg_Pack03B = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack03B, udg_SpawnTimerCommon04 )
    call TriggerAddCondition( gg_trg_Pack03B, Condition( function Trig_Pack03B_Conditions ) )
    call TriggerAddAction( gg_trg_Pack03B, function Trig_Pack03B_Actions )
endfunction

//===========================================================================
// Trigger: Pack04XA
//===========================================================================
function Trig_Pack04XA_Conditions takes nothing returns boolean
    if ( not ( udg_Column02Dead == false ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack04XA_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 5
    set udg_SpawnPackRegion = gg_rct_Pack04X
    set udg_SpawnPackUnitType = 'nkol'
    set udg_SpawnPackUnitMax = 1
    set udg_SpawnPackDropTable = udg_DropTableKT04XA
    set udg_SpawnPackSpawnChance = 80.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn_4X )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack04XA takes nothing returns nothing
    set gg_trg_Pack04XA = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack04XA, udg_SpawnTimerCommon05 )
    call TriggerAddCondition( gg_trg_Pack04XA, Condition( function Trig_Pack04XA_Conditions ) )
    call TriggerAddAction( gg_trg_Pack04XA, function Trig_Pack04XA_Actions )
endfunction

//===========================================================================
// Trigger: Pack04XB
//===========================================================================
function Trig_Pack04XB_Conditions takes nothing returns boolean
    if ( not ( udg_Column02Dead == false ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack04XB_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 6
    set udg_SpawnPackRegion = gg_rct_Pack04X
    set udg_SpawnPackUnitType = 'nkob'
    set udg_SpawnPackUnitMax = 4
    set udg_SpawnPackDropTable = udg_DropTableCommonKoboldA
    set udg_SpawnPackSpawnChance = 80.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn_4X )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack04XB takes nothing returns nothing
    set gg_trg_Pack04XB = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack04XB, udg_SpawnTimerCommon01 )
    call TriggerAddCondition( gg_trg_Pack04XB, Condition( function Trig_Pack04XB_Conditions ) )
    call TriggerAddAction( gg_trg_Pack04XB, function Trig_Pack04XB_Actions )
endfunction

//===========================================================================
// Trigger: Pack05X
//===========================================================================
function Trig_Pack05X_Conditions takes nothing returns boolean
    if ( not ( udg_Column02Dead == false ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack05X_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 7
    set udg_SpawnPackRegion = gg_rct_Pack05X
    set udg_SpawnPackUnitType = 'nkob'
    set udg_SpawnPackUnitMax = 2
    set udg_SpawnPackDropTable = udg_DropTableCommonKoboldA
    set udg_SpawnPackSpawnChance = 80.00
    set udg_SpawnPackSpawnChance = 30.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack05X takes nothing returns nothing
    set gg_trg_Pack05X = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack05X, udg_SpawnTimerCommon02 )
    call TriggerAddCondition( gg_trg_Pack05X, Condition( function Trig_Pack05X_Conditions ) )
    call TriggerAddAction( gg_trg_Pack05X, function Trig_Pack05X_Actions )
endfunction

//===========================================================================
// Trigger: Pack06A
//===========================================================================
function Trig_Pack06A_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack06A_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 8
    set udg_SpawnPackRegion = gg_rct_Pack06
    set udg_SpawnPackUnitType = 'nkog'
    set udg_SpawnPackUnitMax = 1
    set udg_SpawnPackDropTable = udg_DropTableKG06A
    set udg_SpawnPackSpawnChance = 50.00
    set udg_SpawnPackRoamChance = 30.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack06A takes nothing returns nothing
    set gg_trg_Pack06A = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack06A, udg_SpawnTimerCommon03 )
    call TriggerAddCondition( gg_trg_Pack06A, Condition( function Trig_Pack06A_Conditions ) )
    call TriggerAddAction( gg_trg_Pack06A, function Trig_Pack06A_Actions )
endfunction

//===========================================================================
// Trigger: Pack06B
//===========================================================================
function Trig_Pack06B_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack06B_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 9
    set udg_SpawnPackRegion = gg_rct_Pack06
    set udg_SpawnPackUnitType = 'nkob'
    set udg_SpawnPackUnitMax = 3
    set udg_SpawnPackDropTable = udg_DropTableCommonKoboldB
    set udg_SpawnPackSpawnChance = 80.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack06B takes nothing returns nothing
    set gg_trg_Pack06B = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack06B, udg_SpawnTimerCommon04 )
    call TriggerAddCondition( gg_trg_Pack06B, Condition( function Trig_Pack06B_Conditions ) )
    call TriggerAddAction( gg_trg_Pack06B, function Trig_Pack06B_Actions )
endfunction

//===========================================================================
// Trigger: Pack07
//===========================================================================
function Trig_Pack07_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack07_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 10
    set udg_SpawnPackRegion = gg_rct_Pack07
    set udg_SpawnPackUnitType = 'nowb'
    set udg_SpawnPackUnitMax = 2
    set udg_SpawnPackDropTable = udg_DropTableWildkin
    set udg_SpawnPackSpawnChance = 90.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack07 takes nothing returns nothing
    set gg_trg_Pack07 = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack07, udg_SpawnTimerRare01 )
    call TriggerAddCondition( gg_trg_Pack07, Condition( function Trig_Pack07_Conditions ) )
    call TriggerAddAction( gg_trg_Pack07, function Trig_Pack07_Actions )
endfunction

//===========================================================================
// Trigger: Pack08
//===========================================================================
function Trig_Pack08_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack08_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 11
    set udg_SpawnPackRegion = gg_rct_Pack08
    set udg_SpawnPackUnitType = 'nkob'
    set udg_SpawnPackUnitMax = 3
    set udg_SpawnPackDropTable = udg_DropTableCommonKoboldA
    set udg_SpawnPackSpawnChance = 40.00
    set udg_SpawnPackRoamChance = 30.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack08 takes nothing returns nothing
    set gg_trg_Pack08 = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack08, udg_SpawnTimerCommon05 )
    call TriggerAddCondition( gg_trg_Pack08, Condition( function Trig_Pack08_Conditions ) )
    call TriggerAddAction( gg_trg_Pack08, function Trig_Pack08_Actions )
endfunction

//===========================================================================
// Trigger: Pack09A
//===========================================================================
function Trig_Pack09A_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack09A_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 12
    set udg_SpawnPackRegion = gg_rct_Pack09
    set udg_SpawnPackUnitType = 'nkot'
    set udg_SpawnPackUnitMax = 1
    set udg_SpawnPackDropTable = udg_DropTableKT09A
    set udg_SpawnPackSpawnChance = 40.00
    set udg_SpawnPackRoamChance = 30.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack09A takes nothing returns nothing
    set gg_trg_Pack09A = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Pack09A, 5.41 )
    call TriggerAddCondition( gg_trg_Pack09A, Condition( function Trig_Pack09A_Conditions ) )
    call TriggerAddAction( gg_trg_Pack09A, function Trig_Pack09A_Actions )
endfunction

//===========================================================================
// Trigger: Pack09B
//===========================================================================
function Trig_Pack09B_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack09B_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 13
    set udg_SpawnPackRegion = gg_rct_Pack09
    set udg_SpawnPackUnitType = 'nkob'
    set udg_SpawnPackUnitMax = 3
    set udg_SpawnPackDropTable = udg_DropTableCommonKoboldA
    set udg_SpawnPackSpawnChance = 80.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack09B takes nothing returns nothing
    set gg_trg_Pack09B = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack09B, udg_SpawnTimerCommon01 )
    call TriggerAddCondition( gg_trg_Pack09B, Condition( function Trig_Pack09B_Conditions ) )
    call TriggerAddAction( gg_trg_Pack09B, function Trig_Pack09B_Actions )
endfunction

//===========================================================================
// Trigger: Pack10A
//===========================================================================
function Trig_Pack10A_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack10A_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 14
    set udg_SpawnPackRegion = gg_rct_Pack10
    set udg_SpawnPackUnitType = 'nkot'
    set udg_SpawnPackUnitMax = 1
    set udg_SpawnPackDropTable = udg_DropTableKT10A
    set udg_SpawnPackSpawnChance = 50.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack10A takes nothing returns nothing
    set gg_trg_Pack10A = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack10A, udg_SpawnTimerCommon02 )
    call TriggerAddCondition( gg_trg_Pack10A, Condition( function Trig_Pack10A_Conditions ) )
    call TriggerAddAction( gg_trg_Pack10A, function Trig_Pack10A_Actions )
endfunction

//===========================================================================
// Trigger: Pack10B
//===========================================================================
function Trig_Pack10B_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack10B_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 15
    set udg_SpawnPackRegion = gg_rct_Pack10
    set udg_SpawnPackUnitType = 'nkob'
    set udg_SpawnPackUnitMax = 2
    set udg_SpawnPackDropTable = udg_DropTableCommonKoboldA
    set udg_SpawnPackSpawnChance = 80.00
    set udg_SpawnPackRoamChance = 30.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack10B takes nothing returns nothing
    set gg_trg_Pack10B = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack10B, udg_SpawnTimerCommon03 )
    call TriggerAddCondition( gg_trg_Pack10B, Condition( function Trig_Pack10B_Conditions ) )
    call TriggerAddAction( gg_trg_Pack10B, function Trig_Pack10B_Actions )
endfunction

//===========================================================================
// Trigger: Pack11XA
//===========================================================================
function Trig_Pack11XA_Conditions takes nothing returns boolean
    if ( not ( udg_Column01Dead == false ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack11XA_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 16
    set udg_SpawnPackRegion = gg_rct_Pack11X
    set udg_SpawnPackUnitType = 'nkog'
    set udg_SpawnPackUnitMax = 1
    set udg_SpawnPackDropTable = udg_DropTableKG11XA
    set udg_SpawnPackSpawnChance = 50.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn_11X )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack11XA takes nothing returns nothing
    set gg_trg_Pack11XA = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack11XA, udg_SpawnTimerCommon04 )
    call TriggerAddCondition( gg_trg_Pack11XA, Condition( function Trig_Pack11XA_Conditions ) )
    call TriggerAddAction( gg_trg_Pack11XA, function Trig_Pack11XA_Actions )
endfunction

//===========================================================================
// Trigger: Pack11XB
//===========================================================================
function Trig_Pack11XB_Conditions takes nothing returns boolean
    if ( not ( udg_Column01Dead == false ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack11XB_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 17
    set udg_SpawnPackRegion = gg_rct_Pack11X
    set udg_SpawnPackUnitType = 'nkob'
    set udg_SpawnPackUnitMax = 3
    set udg_SpawnPackDropTable = udg_DropTableCommonKoboldB
    set udg_SpawnPackSpawnChance = 80.00
    set udg_SpawnPackRoamChance = 30.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn_11X )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack11XB takes nothing returns nothing
    set gg_trg_Pack11XB = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack11XB, udg_SpawnTimerCommon05 )
    call TriggerAddCondition( gg_trg_Pack11XB, Condition( function Trig_Pack11XB_Conditions ) )
    call TriggerAddAction( gg_trg_Pack11XB, function Trig_Pack11XB_Actions )
endfunction

//===========================================================================
// Trigger: Pack12A
//===========================================================================
function Trig_Pack12A_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack12A_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 18
    set udg_SpawnPackRegion = gg_rct_Pack12
    set udg_SpawnPackUnitType = 'nkot'
    set udg_SpawnPackUnitMax = 1
    set udg_SpawnPackDropTable = udg_DropTableKT12A
    set udg_SpawnPackSpawnChance = 50.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack12A takes nothing returns nothing
    set gg_trg_Pack12A = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack12A, udg_SpawnTimerCommon01 )
    call TriggerAddCondition( gg_trg_Pack12A, Condition( function Trig_Pack12A_Conditions ) )
    call TriggerAddAction( gg_trg_Pack12A, function Trig_Pack12A_Actions )
endfunction

//===========================================================================
// Trigger: Pack12B
//===========================================================================
function Trig_Pack12B_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack12B_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 19
    set udg_SpawnPackRegion = gg_rct_Pack12
    set udg_SpawnPackUnitType = 'nkob'
    set udg_SpawnPackUnitMax = 3
    set udg_SpawnPackDropTable = udg_DropTableCommonKoboldA
    set udg_SpawnPackSpawnChance = 80.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack12B takes nothing returns nothing
    set gg_trg_Pack12B = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack12B, udg_SpawnTimerCommon02 )
    call TriggerAddCondition( gg_trg_Pack12B, Condition( function Trig_Pack12B_Conditions ) )
    call TriggerAddAction( gg_trg_Pack12B, function Trig_Pack12B_Actions )
endfunction

//===========================================================================
// Trigger: Pack13A
//===========================================================================
function Trig_Pack13A_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack13A_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 20
    set udg_SpawnPackRegion = gg_rct_Pack13
    set udg_SpawnPackUnitType = 'nkot'
    set udg_SpawnPackUnitMax = 1
    set udg_SpawnPackDropTable = udg_DropTableKT13A
    set udg_SpawnPackSpawnChance = 50.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack13A takes nothing returns nothing
    set gg_trg_Pack13A = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack13A, udg_SpawnTimerCommon03 )
    call TriggerAddCondition( gg_trg_Pack13A, Condition( function Trig_Pack13A_Conditions ) )
    call TriggerAddAction( gg_trg_Pack13A, function Trig_Pack13A_Actions )
endfunction

//===========================================================================
// Trigger: Pack13B
//===========================================================================
function Trig_Pack13B_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack13B_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 21
    set udg_SpawnPackRegion = gg_rct_Pack13
    set udg_SpawnPackUnitType = 'nkob'
    set udg_SpawnPackUnitMax = 5
    set udg_SpawnPackDropTable = udg_DropTableCommonKoboldB
    set udg_SpawnPackSpawnChance = 80.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack13B takes nothing returns nothing
    set gg_trg_Pack13B = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack13B, udg_SpawnTimerCommon04 )
    call TriggerAddCondition( gg_trg_Pack13B, Condition( function Trig_Pack13B_Conditions ) )
    call TriggerAddAction( gg_trg_Pack13B, function Trig_Pack13B_Actions )
endfunction

//===========================================================================
// Trigger: Pack14X
//===========================================================================
function Trig_Pack14X_Conditions takes nothing returns boolean
    if ( not ( udg_Column03Dead == false ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack14X_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 22
    set udg_SpawnPackRegion = gg_rct_Pack14X
    set udg_SpawnPackUnitType = 'nkob'
    set udg_SpawnPackUnitMax = 7
    set udg_SpawnPackDropTable = udg_DropTableCommonKoboldA
    set udg_SpawnPackSpawnChance = 80.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack14X takes nothing returns nothing
    set gg_trg_Pack14X = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack14X, udg_SpawnTimerCommon05 )
    call TriggerAddCondition( gg_trg_Pack14X, Condition( function Trig_Pack14X_Conditions ) )
    call TriggerAddAction( gg_trg_Pack14X, function Trig_Pack14X_Actions )
endfunction

//===========================================================================
// Trigger: Pack15A
//===========================================================================
function Trig_Pack15A_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack15A_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 23
    set udg_SpawnPackRegion = gg_rct_Pack15
    set udg_SpawnPackUnitType = 'nkol'
    set udg_SpawnPackUnitMax = 1
    set udg_SpawnPackDropTable = udg_DropTableKTM15A
    set udg_SpawnPackSpawnChance = 80.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack15A takes nothing returns nothing
    set gg_trg_Pack15A = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack15A, udg_SpawnTimerRare02 )
    call TriggerAddCondition( gg_trg_Pack15A, Condition( function Trig_Pack15A_Conditions ) )
    call TriggerAddAction( gg_trg_Pack15A, function Trig_Pack15A_Actions )
endfunction

//===========================================================================
// Trigger: Pack15B
//===========================================================================
function Trig_Pack15B_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack15B_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 24
    set udg_SpawnPackRegion = gg_rct_Pack15
    set udg_SpawnPackUnitType = 'nkog'
    set udg_SpawnPackUnitMax = 2
    set udg_SpawnPackDropTable = udg_DropTableKG15B
    set udg_SpawnPackSpawnChance = 80.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack15B takes nothing returns nothing
    set gg_trg_Pack15B = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack15B, udg_SpawnTimerRare01 )
    call TriggerAddCondition( gg_trg_Pack15B, Condition( function Trig_Pack15B_Conditions ) )
    call TriggerAddAction( gg_trg_Pack15B, function Trig_Pack15B_Actions )
endfunction

//===========================================================================
// Trigger: Pack16XA
//===========================================================================
function Trig_Pack16XA_Conditions takes nothing returns boolean
    if ( not ( udg_Column03Dead == false ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack16XA_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 25
    set udg_SpawnPackRegion = gg_rct_Pack16X
    set udg_SpawnPackUnitType = 'nkog'
    set udg_SpawnPackUnitMax = 1
    set udg_SpawnPackDropTable = udg_DropTableKG16XA
    set udg_SpawnPackSpawnChance = 50.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn_16X )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack16XA takes nothing returns nothing
    set gg_trg_Pack16XA = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack16XA, udg_SpawnTimerCommon01 )
    call TriggerAddCondition( gg_trg_Pack16XA, Condition( function Trig_Pack16XA_Conditions ) )
    call TriggerAddAction( gg_trg_Pack16XA, function Trig_Pack16XA_Actions )
endfunction

//===========================================================================
// Trigger: Pack16XB
//===========================================================================
function Trig_Pack16XB_Conditions takes nothing returns boolean
    if ( not ( udg_Column03Dead == false ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack16XB_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 26
    set udg_SpawnPackRegion = gg_rct_Pack16X
    set udg_SpawnPackUnitType = 'nkob'
    set udg_SpawnPackUnitMax = 4
    set udg_SpawnPackDropTable = udg_DropTableCommonKoboldA
    set udg_SpawnPackSpawnChance = 80.00
    set udg_SpawnPackRoamChance = 30.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn_16X )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack16XB takes nothing returns nothing
    set gg_trg_Pack16XB = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack16XB, udg_SpawnTimerCommon02 )
    call TriggerAddCondition( gg_trg_Pack16XB, Condition( function Trig_Pack16XB_Conditions ) )
    call TriggerAddAction( gg_trg_Pack16XB, function Trig_Pack16XB_Actions )
endfunction

//===========================================================================
// Trigger: Pack17A
//===========================================================================
function Trig_Pack17A_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack17A_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 27
    set udg_SpawnPackRegion = gg_rct_Pack17
    set udg_SpawnPackUnitType = 'nkot'
    set udg_SpawnPackUnitMax = 1
    set udg_SpawnPackDropTable = udg_DropTableKT17A
    set udg_SpawnPackSpawnChance = 50.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack17A takes nothing returns nothing
    set gg_trg_Pack17A = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack17A, udg_SpawnTimerCommon03 )
    call TriggerAddCondition( gg_trg_Pack17A, Condition( function Trig_Pack17A_Conditions ) )
    call TriggerAddAction( gg_trg_Pack17A, function Trig_Pack17A_Actions )
endfunction

//===========================================================================
// Trigger: Pack17B
//===========================================================================
function Trig_Pack17B_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack17B_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 28
    set udg_SpawnPackRegion = gg_rct_Pack17
    set udg_SpawnPackUnitType = 'nkob'
    set udg_SpawnPackUnitMax = 4
    set udg_SpawnPackDropTable = udg_DropTableCommonKoboldA
    set udg_SpawnPackSpawnChance = 80.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack17B takes nothing returns nothing
    set gg_trg_Pack17B = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack17B, udg_SpawnTimerCommon04 )
    call TriggerAddCondition( gg_trg_Pack17B, Condition( function Trig_Pack17B_Conditions ) )
    call TriggerAddAction( gg_trg_Pack17B, function Trig_Pack17B_Actions )
endfunction

//===========================================================================
// Trigger: Pack18
//===========================================================================
function Trig_Pack18_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack18_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 29
    set udg_SpawnPackRegion = gg_rct_Pack18
    set udg_SpawnPackUnitType = 'nkob'
    set udg_SpawnPackUnitMax = 2
    set udg_SpawnPackDropTable = udg_DropTableCommonKoboldB
    set udg_SpawnPackSpawnChance = 80.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack18 takes nothing returns nothing
    set gg_trg_Pack18 = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack18, udg_SpawnTimerCommon05 )
    call TriggerAddCondition( gg_trg_Pack18, Condition( function Trig_Pack18_Conditions ) )
    call TriggerAddAction( gg_trg_Pack18, function Trig_Pack18_Actions )
endfunction

//===========================================================================
// Trigger: Pack19
//===========================================================================
function Trig_Pack19_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack19_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 30
    set udg_SpawnPackRegion = gg_rct_Pack19
    set udg_SpawnPackUnitType = 'nkob'
    set udg_SpawnPackUnitMax = 5
    set udg_SpawnPackDropTable = udg_DropTableCommonKoboldA
    set udg_SpawnPackSpawnChance = 80.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack19 takes nothing returns nothing
    set gg_trg_Pack19 = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack19, udg_SpawnTimerCommon01 )
    call TriggerAddCondition( gg_trg_Pack19, Condition( function Trig_Pack19_Conditions ) )
    call TriggerAddAction( gg_trg_Pack19, function Trig_Pack19_Actions )
endfunction

//===========================================================================
// Trigger: Pack20
//===========================================================================
function Trig_Pack20_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack20_Actions takes nothing returns nothing
    // Spawn Unit
    set udg_SpawnPackID = 31
    set udg_SpawnPackRegion = gg_rct_Pack20
    set udg_SpawnPackUnitType = 'nowb'
    set udg_SpawnPackUnitMax = 2
    set udg_SpawnPackDropTable = udg_DropTableWildkin
    set udg_SpawnPackSpawnChance = 90.00
    set udg_SpawnPackRoamChance = 20.00
    call ConditionalTriggerExecute( gg_trg_Pack_Spawn )
    call ConditionalTriggerExecute( gg_trg_Pack_Roam )
endfunction

//===========================================================================
function InitTrig_Pack20 takes nothing returns nothing
    set gg_trg_Pack20 = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Pack20, udg_SpawnTimerRare02 )
    call TriggerAddCondition( gg_trg_Pack20, Condition( function Trig_Pack20_Conditions ) )
    call TriggerAddAction( gg_trg_Pack20, function Trig_Pack20_Actions )
endfunction

//===========================================================================
// Trigger: Pack Unit Dies
//===========================================================================
function Trig_Pack_Unit_Dies_Conditions takes nothing returns boolean
    if ( not ( GetUnitUserData(GetDyingUnit()) != 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack_Unit_Dies_Actions takes nothing returns nothing
    set udg_TempUnit = GetDyingUnit()
    call GroupRemoveUnitSimple( udg_TempUnit, udg_PackGroupArray[GetUnitUserData(udg_TempUnit)] )
    set udg_TempPointA = GetUnitLoc(udg_TempUnit)
    call CreateNUnitsAtLoc( 1, 'nvlk', Player(PLAYER_NEUTRAL_AGGRESSIVE), udg_TempPointA, bj_UNIT_FACING )
    // call RemoveLocation( udg_TempPointA )
    set udg_TempPHUnit = GetLastCreatedUnit()
    call ShowUnitHide( udg_TempPHUnit )
    call PauseUnitBJ( true, udg_TempPHUnit )
    call GroupAddUnitSimple( udg_TempPHUnit, udg_PackGroupArray[GetUnitUserData(udg_TempUnit)] )
    call GroupAddUnitSimple( udg_TempPHUnit, udg_GraveyardArray[GetUnitUserData(udg_TempUnit)] )
    call SetUnitUserData( udg_TempPHUnit, udg_PackRespawnTimeArray[GetUnitUserData(udg_TempUnit)] )
endfunction

//===========================================================================
function InitTrig_Pack_Unit_Dies takes nothing returns nothing
    set gg_trg_Pack_Unit_Dies = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Pack_Unit_Dies, Player(PLAYER_NEUTRAL_AGGRESSIVE), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Pack_Unit_Dies, Condition( function Trig_Pack_Unit_Dies_Conditions ) )
    call TriggerAddAction( gg_trg_Pack_Unit_Dies, function Trig_Pack_Unit_Dies_Actions )
endfunction

//===========================================================================
// Trigger: Placeholder Decay
//===========================================================================
function Trig_Placeholder_Decay_Func001Func001Func002C takes nothing returns boolean
    if ( not ( GetUnitUserData(GetEnumUnit()) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Placeholder_Decay_Func001Func001A takes nothing returns nothing
    call SetUnitUserData( GetEnumUnit(), ( GetUnitUserData(GetEnumUnit()) - 1 ) )
    if ( Trig_Placeholder_Decay_Func001Func001Func002C() ) then
        call GroupRemoveUnitSimple( GetEnumUnit(), udg_GraveyardArray[GetForLoopIndexA()] )
        call GroupRemoveUnitSimple( GetEnumUnit(), udg_PackGroupArray[GetForLoopIndexA()] )
        call RemoveUnit( GetEnumUnit() )
    else
    endif
endfunction

function Trig_Placeholder_Decay_Actions takes nothing returns nothing
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = udg_SpawnPackTotal
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        call ForGroupBJ( udg_GraveyardArray[GetForLoopIndexA()], function Trig_Placeholder_Decay_Func001Func001A )
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Placeholder_Decay takes nothing returns nothing
    set gg_trg_Placeholder_Decay = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Placeholder_Decay, 1.00 )
    call TriggerAddAction( gg_trg_Placeholder_Decay, function Trig_Placeholder_Decay_Actions )
endfunction

//===========================================================================
// Trigger: Drop Table Common KoboldA
//===========================================================================
function Trig_Drop_Table_Common_KoboldA_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetDyingUnit(), udg_DropTableCommonKoboldA) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drop_Table_Common_KoboldA_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_DropTableCommonKoboldA )
    // Drop Item
    set udg_DropPoint = GetUnitLoc(GetDyingUnit())
    set udg_DropCommonChance = 3.00
    set udg_DropCommonItem = 'rhe2'
    set udg_DropRareChance = 4.00
    set udg_DropRareItem = 'rspd'
    call ConditionalTriggerExecute( gg_trg_Drop_Item )
endfunction

//===========================================================================
function InitTrig_Drop_Table_Common_KoboldA takes nothing returns nothing
    set gg_trg_Drop_Table_Common_KoboldA = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Drop_Table_Common_KoboldA, Player(PLAYER_NEUTRAL_AGGRESSIVE), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Drop_Table_Common_KoboldA, Condition( function Trig_Drop_Table_Common_KoboldA_Conditions ) )
    call TriggerAddAction( gg_trg_Drop_Table_Common_KoboldA, function Trig_Drop_Table_Common_KoboldA_Actions )
endfunction

//===========================================================================
// Trigger: Drop Table Common KoboldB
//===========================================================================
function Trig_Drop_Table_Common_KoboldB_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetDyingUnit(), udg_DropTableCommonKoboldB) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drop_Table_Common_KoboldB_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_DropTableCommonKoboldB )
    // Drop Item
    set udg_DropPoint = GetUnitLoc(GetDyingUnit())
    set udg_DropCommonChance = 4.00
    set udg_DropCommonItem = 'rman'
    set udg_DropRareChance = 2.00
    set udg_DropRareItem = 'rhe1'
    call ConditionalTriggerExecute( gg_trg_Drop_Item )
endfunction

//===========================================================================
function InitTrig_Drop_Table_Common_KoboldB takes nothing returns nothing
    set gg_trg_Drop_Table_Common_KoboldB = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Drop_Table_Common_KoboldB, Player(PLAYER_NEUTRAL_AGGRESSIVE), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Drop_Table_Common_KoboldB, Condition( function Trig_Drop_Table_Common_KoboldB_Conditions ) )
    call TriggerAddAction( gg_trg_Drop_Table_Common_KoboldB, function Trig_Drop_Table_Common_KoboldB_Actions )
endfunction

//===========================================================================
// Trigger: Drop Table KT03A
//===========================================================================
function Trig_Drop_Table_KT03A_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetDyingUnit(), udg_DropTableKT03A) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drop_Table_KT03A_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_DropTableKT03A )
    // Drop Item
    set udg_DropPoint = GetUnitLoc(GetDyingUnit())
    set udg_DropCommonChance = 15.00
    set udg_DropCommonItem = 'spro'
    set udg_DropRareChance = 10.00
    set udg_DropRareItem = 'rat3'
    call ConditionalTriggerExecute( gg_trg_Drop_Item )
endfunction

//===========================================================================
function InitTrig_Drop_Table_KT03A takes nothing returns nothing
    set gg_trg_Drop_Table_KT03A = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Drop_Table_KT03A, Player(PLAYER_NEUTRAL_AGGRESSIVE), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Drop_Table_KT03A, Condition( function Trig_Drop_Table_KT03A_Conditions ) )
    call TriggerAddAction( gg_trg_Drop_Table_KT03A, function Trig_Drop_Table_KT03A_Actions )
endfunction

//===========================================================================
// Trigger: Drop Table KT04XA
//===========================================================================
function Trig_Drop_Table_KT04XA_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetDyingUnit(), udg_DropTableKT04XA) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drop_Table_KT04XA_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_DropTableKT04XA )
    // Drop Item
    set udg_DropPoint = GetUnitLoc(GetDyingUnit())
    set udg_DropCommonChance = 15.00
    set udg_DropCommonItem = 'hlst'
    set udg_DropRareChance = 10.00
    set udg_DropRareItem = 'rst1'
    call ConditionalTriggerExecute( gg_trg_Drop_Item )
endfunction

//===========================================================================
function InitTrig_Drop_Table_KT04XA takes nothing returns nothing
    set gg_trg_Drop_Table_KT04XA = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Drop_Table_KT04XA, Player(PLAYER_NEUTRAL_AGGRESSIVE), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Drop_Table_KT04XA, Condition( function Trig_Drop_Table_KT04XA_Conditions ) )
    call TriggerAddAction( gg_trg_Drop_Table_KT04XA, function Trig_Drop_Table_KT04XA_Actions )
endfunction

//===========================================================================
// Trigger: Drop Table KG06A
//===========================================================================
function Trig_Drop_Table_KG06A_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetDyingUnit(), udg_DropTableKG06A) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drop_Table_KG06A_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_DropTableKG06A )
    // Drop Item
    set udg_DropPoint = GetUnitLoc(GetDyingUnit())
    set udg_DropCommonChance = 20.00
    set udg_DropCommonItem = 'pman'
    set udg_DropRareChance = 8.00
    set udg_DropRareItem = 'rin1'
    call ConditionalTriggerExecute( gg_trg_Drop_Item )
endfunction

//===========================================================================
function InitTrig_Drop_Table_KG06A takes nothing returns nothing
    set gg_trg_Drop_Table_KG06A = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Drop_Table_KG06A, Player(PLAYER_NEUTRAL_AGGRESSIVE), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Drop_Table_KG06A, Condition( function Trig_Drop_Table_KG06A_Conditions ) )
    call TriggerAddAction( gg_trg_Drop_Table_KG06A, function Trig_Drop_Table_KG06A_Actions )
endfunction

//===========================================================================
// Trigger: Drop Table KT09A
//===========================================================================
function Trig_Drop_Table_KT09A_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetDyingUnit(), udg_DropTableKT09A) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drop_Table_KT09A_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_DropTableKT09A )
    // Drop Item
    set udg_DropPoint = GetUnitLoc(GetDyingUnit())
    set udg_DropCommonChance = 15.00
    set udg_DropCommonItem = 'shas'
    set udg_DropRareChance = 5.00
    set udg_DropRareItem = 'wneg'
    call ConditionalTriggerExecute( gg_trg_Drop_Item )
endfunction

//===========================================================================
function InitTrig_Drop_Table_KT09A takes nothing returns nothing
    set gg_trg_Drop_Table_KT09A = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Drop_Table_KT09A, Player(PLAYER_NEUTRAL_AGGRESSIVE), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Drop_Table_KT09A, Condition( function Trig_Drop_Table_KT09A_Conditions ) )
    call TriggerAddAction( gg_trg_Drop_Table_KT09A, function Trig_Drop_Table_KT09A_Actions )
endfunction

//===========================================================================
// Trigger: Drop Table KT10A
//===========================================================================
function Trig_Drop_Table_KT10A_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetDyingUnit(), udg_DropTableKT10A) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drop_Table_KT10A_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_DropTableKT10A )
    // Drop Item
    set udg_DropPoint = GetUnitLoc(GetDyingUnit())
    set udg_DropCommonChance = 10.00
    set udg_DropCommonItem = 'phea'
    set udg_DropRareChance = 5.00
    set udg_DropRareItem = 'gold'
    call ConditionalTriggerExecute( gg_trg_Drop_Item )
endfunction

//===========================================================================
function InitTrig_Drop_Table_KT10A takes nothing returns nothing
    set gg_trg_Drop_Table_KT10A = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Drop_Table_KT10A, Player(PLAYER_NEUTRAL_AGGRESSIVE), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Drop_Table_KT10A, Condition( function Trig_Drop_Table_KT10A_Conditions ) )
    call TriggerAddAction( gg_trg_Drop_Table_KT10A, function Trig_Drop_Table_KT10A_Actions )
endfunction

//===========================================================================
// Trigger: Drop Table KG11XA
//===========================================================================
function Trig_Drop_Table_KG11XA_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetDyingUnit(), udg_DropTableKG11XA) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drop_Table_KG11XA_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_DropTableKG11XA )
    // Drop Item
    set udg_DropPoint = GetUnitLoc(GetDyingUnit())
    set udg_DropCommonChance = 10.00
    set udg_DropCommonItem = 'rej1'
    set udg_DropRareChance = 4.00
    set udg_DropRareItem = 'pinv'
    call ConditionalTriggerExecute( gg_trg_Drop_Item )
endfunction

//===========================================================================
function InitTrig_Drop_Table_KG11XA takes nothing returns nothing
    set gg_trg_Drop_Table_KG11XA = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Drop_Table_KG11XA, Player(PLAYER_NEUTRAL_AGGRESSIVE), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Drop_Table_KG11XA, Condition( function Trig_Drop_Table_KG11XA_Conditions ) )
    call TriggerAddAction( gg_trg_Drop_Table_KG11XA, function Trig_Drop_Table_KG11XA_Actions )
endfunction

//===========================================================================
// Trigger: Drop Table KT12A
//===========================================================================
function Trig_Drop_Table_KT12A_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetDyingUnit(), udg_DropTableKT12A) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drop_Table_KT12A_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_DropTableKT12A )
    // Drop Item
    set udg_DropPoint = GetUnitLoc(GetDyingUnit())
    set udg_DropCommonChance = 10.00
    set udg_DropCommonItem = 'sreg'
    set udg_DropRareChance = 5.00
    set udg_DropRareItem = 'pams'
    call ConditionalTriggerExecute( gg_trg_Drop_Item )
endfunction

//===========================================================================
function InitTrig_Drop_Table_KT12A takes nothing returns nothing
    set gg_trg_Drop_Table_KT12A = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Drop_Table_KT12A, Player(PLAYER_NEUTRAL_AGGRESSIVE), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Drop_Table_KT12A, Condition( function Trig_Drop_Table_KT12A_Conditions ) )
    call TriggerAddAction( gg_trg_Drop_Table_KT12A, function Trig_Drop_Table_KT12A_Actions )
endfunction

//===========================================================================
// Trigger: Drop Table KT13A
//===========================================================================
function Trig_Drop_Table_KT13A_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetDyingUnit(), udg_DropTableKT13A) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drop_Table_KT13A_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_DropTableKT13A )
    // Drop Item
    set udg_DropPoint = GetUnitLoc(GetDyingUnit())
    set udg_DropCommonChance = 10.00
    set udg_DropCommonItem = 'rspd'
    set udg_DropRareChance = 5.00
    set udg_DropRareItem = 'shea'
    call ConditionalTriggerExecute( gg_trg_Drop_Item )
endfunction

//===========================================================================
function InitTrig_Drop_Table_KT13A takes nothing returns nothing
    set gg_trg_Drop_Table_KT13A = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Drop_Table_KT13A, Player(PLAYER_NEUTRAL_AGGRESSIVE), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Drop_Table_KT13A, Condition( function Trig_Drop_Table_KT13A_Conditions ) )
    call TriggerAddAction( gg_trg_Drop_Table_KT13A, function Trig_Drop_Table_KT13A_Actions )
endfunction

//===========================================================================
// Trigger: Drop Table KTM15A
//===========================================================================
function Trig_Drop_Table_KTM15A_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetDyingUnit(), udg_DropTableKTM15A) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drop_Table_KTM15A_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_DropTableKTM15A )
    // Drop Item
    set udg_DropPoint = GetUnitLoc(GetDyingUnit())
    set udg_DropCommonChance = 20.00
    set udg_DropCommonItem = 'prvt'
    set udg_DropRareChance = 5.00
    set udg_DropRareItem = 'evtl'
    call ConditionalTriggerExecute( gg_trg_Drop_Item )
endfunction

//===========================================================================
function InitTrig_Drop_Table_KTM15A takes nothing returns nothing
    set gg_trg_Drop_Table_KTM15A = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Drop_Table_KTM15A, Player(PLAYER_NEUTRAL_AGGRESSIVE), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Drop_Table_KTM15A, Condition( function Trig_Drop_Table_KTM15A_Conditions ) )
    call TriggerAddAction( gg_trg_Drop_Table_KTM15A, function Trig_Drop_Table_KTM15A_Actions )
endfunction

//===========================================================================
// Trigger: Drop Table KG15B
//===========================================================================
function Trig_Drop_Table_KG15B_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetDyingUnit(), udg_DropTableKG15B) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drop_Table_KG15B_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_DropTableKG15B )
    // Drop Item
    set udg_DropPoint = GetUnitLoc(GetDyingUnit())
    set udg_DropCommonChance = 10.00
    set udg_DropCommonItem = 'tint'
    set udg_DropRareChance = 5.00
    set udg_DropRareItem = 'penr'
    call ConditionalTriggerExecute( gg_trg_Drop_Item )
endfunction

//===========================================================================
function InitTrig_Drop_Table_KG15B takes nothing returns nothing
    set gg_trg_Drop_Table_KG15B = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Drop_Table_KG15B, Player(PLAYER_NEUTRAL_AGGRESSIVE), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Drop_Table_KG15B, Condition( function Trig_Drop_Table_KG15B_Conditions ) )
    call TriggerAddAction( gg_trg_Drop_Table_KG15B, function Trig_Drop_Table_KG15B_Actions )
endfunction

//===========================================================================
// Trigger: Drop Table KG16XA
//===========================================================================
function Trig_Drop_Table_KG16XA_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetDyingUnit(), udg_DropTableKG16XA) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drop_Table_KG16XA_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_DropTableKG16XA )
    // Drop Item
    set udg_DropPoint = GetUnitLoc(GetDyingUnit())
    set udg_DropCommonChance = 10.00
    set udg_DropCommonItem = 'pclr'
    set udg_DropRareChance = 5.00
    set udg_DropRareItem = 'sneg'
    call ConditionalTriggerExecute( gg_trg_Drop_Item )
endfunction

//===========================================================================
function InitTrig_Drop_Table_KG16XA takes nothing returns nothing
    set gg_trg_Drop_Table_KG16XA = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Drop_Table_KG16XA, Player(PLAYER_NEUTRAL_AGGRESSIVE), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Drop_Table_KG16XA, Condition( function Trig_Drop_Table_KG16XA_Conditions ) )
    call TriggerAddAction( gg_trg_Drop_Table_KG16XA, function Trig_Drop_Table_KG16XA_Actions )
endfunction

//===========================================================================
// Trigger: Drop Table KT17A
//===========================================================================
function Trig_Drop_Table_KT17A_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetDyingUnit(), udg_DropTableKT17A) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drop_Table_KT17A_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_DropTableKT17A )
    // Drop Item
    set udg_DropPoint = GetUnitLoc(GetDyingUnit())
    set udg_DropCommonChance = 12.00
    set udg_DropCommonItem = 'rspd'
    set udg_DropRareChance = 4.00
    set udg_DropRareItem = 'sreg'
    call ConditionalTriggerExecute( gg_trg_Drop_Item )
endfunction

//===========================================================================
function InitTrig_Drop_Table_KT17A takes nothing returns nothing
    set gg_trg_Drop_Table_KT17A = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Drop_Table_KT17A, Player(PLAYER_NEUTRAL_AGGRESSIVE), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Drop_Table_KT17A, Condition( function Trig_Drop_Table_KT17A_Conditions ) )
    call TriggerAddAction( gg_trg_Drop_Table_KT17A, function Trig_Drop_Table_KT17A_Actions )
endfunction

//===========================================================================
// Trigger: Drop Table Wildkin
//===========================================================================
function Trig_Drop_Table_Wildkin_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetDyingUnit(), udg_DropTableWildkin) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drop_Table_Wildkin_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_DropTableWildkin )
    // Drop Item
    set udg_DropPoint = GetUnitLoc(GetDyingUnit())
    set udg_DropCommonChance = 15.00
    set udg_DropCommonItem = 'rat3'
    set udg_DropRareChance = 5.00
    set udg_DropRareItem = 'pnvl'
    call ConditionalTriggerExecute( gg_trg_Drop_Item )
endfunction

//===========================================================================
function InitTrig_Drop_Table_Wildkin takes nothing returns nothing
    set gg_trg_Drop_Table_Wildkin = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Drop_Table_Wildkin, Player(PLAYER_NEUTRAL_AGGRESSIVE), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Drop_Table_Wildkin, Condition( function Trig_Drop_Table_Wildkin_Conditions ) )
    call TriggerAddAction( gg_trg_Drop_Table_Wildkin, function Trig_Drop_Table_Wildkin_Actions )
endfunction

//===========================================================================
// Trigger: Drop Table None
//===========================================================================
function Trig_Drop_Table_None_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetDyingUnit(), udg_DropTableNone) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drop_Table_None_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_DropTableNone )
endfunction

//===========================================================================
function InitTrig_Drop_Table_None takes nothing returns nothing
    set gg_trg_Drop_Table_None = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_Drop_Table_None, Player(PLAYER_NEUTRAL_AGGRESSIVE), EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Drop_Table_None, Condition( function Trig_Drop_Table_None_Conditions ) )
    call TriggerAddAction( gg_trg_Drop_Table_None, function Trig_Drop_Table_None_Actions )
endfunction

//===========================================================================
// Trigger: Pack Spawn
//===========================================================================
function Trig_Pack_Spawn_Conditions takes nothing returns boolean
    if ( not ( GetRandomReal(0, 100.00) < udg_SpawnPackSpawnChance ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(udg_PackGroupArray[udg_SpawnPackID]) < udg_SpawnPackUnitMax ) ) then
        return false
    endif
    if ( not ( udg_AllTunnelsClosed == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack_Spawn_Func003C takes nothing returns boolean
    if ( not ( IsLocationVisibleToPlayer(udg_TempPoint, udg_AP1_Player) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack_Spawn_Func007C takes nothing returns boolean
    if ( not ( IsLocationVisibleToPlayer(udg_TempPoint, udg_AP1_Player) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack_Spawn_Func008C takes nothing returns boolean
    if ( not ( IsLocationVisibleToPlayer(udg_TempPoint, udg_AP1_Player) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack_Spawn_Func014C takes nothing returns boolean
    if ( not ( udg_DebugSpawning == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack_Spawn_Actions takes nothing returns nothing
    // Don't Spawn Visible Regions
    set udg_TempPoint = GetRectCenter(udg_SpawnPackRegion)
    if ( Trig_Pack_Spawn_Func003C() ) then
        call RemoveLocation( udg_TempPoint )
        return
    else
    endif
    call RemoveLocation( udg_TempPoint )
    // Find A Spawn Point  (Try Twice)
    set udg_TempPoint = GetRandomLocInRect(udg_SpawnPackRegion)
    if ( Trig_Pack_Spawn_Func007C() ) then
        call RemoveLocation( udg_TempPoint )
        set udg_TempPoint = GetRandomLocInRect(udg_SpawnPackRegion)
    else
    endif
    if ( Trig_Pack_Spawn_Func008C() ) then
        call RemoveLocation( udg_TempPoint )
        return
    else
    endif
    // Spawn Unit
    call CreateNUnitsAtLoc( 1, udg_SpawnPackUnitType, Player(PLAYER_NEUTRAL_AGGRESSIVE), udg_TempPoint, GetRandomDirectionDeg() )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_PackGroupArray[udg_SpawnPackID] )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_SpawnPackDropTable )
    call SetUnitUserData( GetLastCreatedUnit(), udg_SpawnPackID )
    if ( Trig_Pack_Spawn_Func014C() ) then
        call PingMinimapLocForForceEx( GetPlayersAll(), udg_TempPoint, 1, bj_MINIMAPPINGSTYLE_SIMPLE, 0.00, 0.00, 100 )
    else
    endif
    call RemoveLocation( udg_TempPoint )
endfunction

//===========================================================================
function InitTrig_Pack_Spawn takes nothing returns nothing
    set gg_trg_Pack_Spawn = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Pack_Spawn, Condition( function Trig_Pack_Spawn_Conditions ) )
    call TriggerAddAction( gg_trg_Pack_Spawn, function Trig_Pack_Spawn_Actions )
endfunction

//===========================================================================
// Trigger: Pack Spawn 4X
//===========================================================================
function Trig_Pack_Spawn_4X_Conditions takes nothing returns boolean
    if ( not ( GetRandomReal(0, 100.00) < udg_SpawnPackSpawnChance ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(udg_PackGroupArray[udg_SpawnPackID]) < udg_SpawnPackUnitMax ) ) then
        return false
    endif
    if ( not ( udg_AllTunnelsClosed == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack_Spawn_4X_Func005C takes nothing returns boolean
    if ( not ( udg_DebugSpawning == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack_Spawn_4X_Actions takes nothing returns nothing
    // Spawn Unit
    call CreateNUnitsAtLoc( 1, udg_SpawnPackUnitType, Player(PLAYER_NEUTRAL_AGGRESSIVE), GetRectCenter(gg_rct_Spawn04X), GetRandomDirectionDeg() )
    set udg_TempPoint = GetRandomLocInRect(udg_SpawnPackRegion)
    call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", udg_TempPoint )
    if ( Trig_Pack_Spawn_4X_Func005C() ) then
        call PingMinimapLocForForceEx( GetPlayersAll(), udg_TempPoint, 1, bj_MINIMAPPINGSTYLE_SIMPLE, 0.00, 0.00, 100 )
    else
    endif
    call RemoveLocation( udg_TempPoint )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_PackGroupArray[udg_SpawnPackID] )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_SpawnPackDropTable )
    call SetUnitUserData( GetLastCreatedUnit(), udg_SpawnPackID )
endfunction

//===========================================================================
function InitTrig_Pack_Spawn_4X takes nothing returns nothing
    set gg_trg_Pack_Spawn_4X = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Pack_Spawn_4X, Condition( function Trig_Pack_Spawn_4X_Conditions ) )
    call TriggerAddAction( gg_trg_Pack_Spawn_4X, function Trig_Pack_Spawn_4X_Actions )
endfunction

//===========================================================================
// Trigger: Pack Spawn 11X
//===========================================================================
function Trig_Pack_Spawn_11X_Conditions takes nothing returns boolean
    if ( not ( GetRandomReal(0, 100.00) < udg_SpawnPackSpawnChance ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(udg_PackGroupArray[udg_SpawnPackID]) < udg_SpawnPackUnitMax ) ) then
        return false
    endif
    if ( not ( udg_AllTunnelsClosed == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack_Spawn_11X_Func005C takes nothing returns boolean
    if ( not ( udg_DebugSpawning == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack_Spawn_11X_Actions takes nothing returns nothing
    // Spawn Unit
    call CreateNUnitsAtLoc( 1, udg_SpawnPackUnitType, Player(PLAYER_NEUTRAL_AGGRESSIVE), GetRectCenter(gg_rct_Spawn11X), GetRandomDirectionDeg() )
    set udg_TempPoint = GetRandomLocInRect(udg_SpawnPackRegion)
    call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", udg_TempPoint )
    if ( Trig_Pack_Spawn_11X_Func005C() ) then
        call PingMinimapLocForForceEx( GetPlayersAll(), udg_TempPoint, 1, bj_MINIMAPPINGSTYLE_SIMPLE, 0.00, 0.00, 100 )
    else
    endif
    call RemoveLocation( udg_TempPoint )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_PackGroupArray[udg_SpawnPackID] )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_SpawnPackDropTable )
    call SetUnitUserData( GetLastCreatedUnit(), udg_SpawnPackID )
endfunction

//===========================================================================
function InitTrig_Pack_Spawn_11X takes nothing returns nothing
    set gg_trg_Pack_Spawn_11X = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Pack_Spawn_11X, Condition( function Trig_Pack_Spawn_11X_Conditions ) )
    call TriggerAddAction( gg_trg_Pack_Spawn_11X, function Trig_Pack_Spawn_11X_Actions )
endfunction

//===========================================================================
// Trigger: Pack Spawn 16X
//===========================================================================
function Trig_Pack_Spawn_16X_Conditions takes nothing returns boolean
    if ( not ( GetRandomReal(0, 100.00) < udg_SpawnPackSpawnChance ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(udg_PackGroupArray[udg_SpawnPackID]) < udg_SpawnPackUnitMax ) ) then
        return false
    endif
    if ( not ( udg_AllTunnelsClosed == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack_Spawn_16X_Func005C takes nothing returns boolean
    if ( not ( udg_DebugSpawning == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack_Spawn_16X_Actions takes nothing returns nothing
    // Spawn Unit
    call CreateNUnitsAtLoc( 1, udg_SpawnPackUnitType, Player(PLAYER_NEUTRAL_AGGRESSIVE), GetRectCenter(gg_rct_Spawn16X), GetRandomDirectionDeg() )
    set udg_TempPoint = GetRandomLocInRect(udg_SpawnPackRegion)
    call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", udg_TempPoint )
    if ( Trig_Pack_Spawn_16X_Func005C() ) then
        call PingMinimapLocForForceEx( GetPlayersAll(), udg_TempPoint, 1, bj_MINIMAPPINGSTYLE_SIMPLE, 0.00, 0.00, 100 )
    else
    endif
    call RemoveLocation( udg_TempPoint )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_PackGroupArray[udg_SpawnPackID] )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_SpawnPackDropTable )
    call SetUnitUserData( GetLastCreatedUnit(), udg_SpawnPackID )
endfunction

//===========================================================================
function InitTrig_Pack_Spawn_16X takes nothing returns nothing
    set gg_trg_Pack_Spawn_16X = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Pack_Spawn_16X, Condition( function Trig_Pack_Spawn_16X_Conditions ) )
    call TriggerAddAction( gg_trg_Pack_Spawn_16X, function Trig_Pack_Spawn_16X_Actions )
endfunction

//===========================================================================
// Trigger: Pack Roam
//===========================================================================
function Trig_Pack_Roam_Func005Func001Func001C takes nothing returns boolean
    if ( not ( GetRandomReal(0, 100.00) < udg_SpawnPackRoamChance ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack_Roam_Func005Func001A takes nothing returns nothing
    if ( Trig_Pack_Roam_Func005Func001Func001C() ) then
        set udg_TempPoint = GetRandomLocInRect(udg_SpawnPackRegion)
        call IssuePointOrderLocBJ( GetEnumUnit(), "attack", udg_TempPoint )
        call RemoveLocation( udg_TempPoint )
    else
    endif
endfunction

function Trig_Pack_Roam_Func005Func002Func001Func001001 takes nothing returns boolean
    return ( udg_RexxarInParty == true )
endfunction

function Trig_Pack_Roam_Func005Func002Func001Func001002 takes nothing returns boolean
    return ( IsUnitAliveBJ(udg_Rexxar) == true )
endfunction

function Trig_Pack_Roam_Func005Func002Func001C takes nothing returns boolean
    if ( not GetBooleanAnd( Trig_Pack_Roam_Func005Func002Func001Func001001(), Trig_Pack_Roam_Func005Func002Func001Func001002() ) ) then
        return false
    endif
    if ( not ( DistanceBetweenPoints(udg_TempPointA, udg_TempPointRexxar) < 2000.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack_Roam_Func005Func002Func002Func001001 takes nothing returns boolean
    return ( udg_RokhanInParty == true )
endfunction

function Trig_Pack_Roam_Func005Func002Func002Func001002 takes nothing returns boolean
    return ( IsUnitAliveBJ(udg_Rokhan) == true )
endfunction

function Trig_Pack_Roam_Func005Func002Func002C takes nothing returns boolean
    if ( not GetBooleanAnd( Trig_Pack_Roam_Func005Func002Func002Func001001(), Trig_Pack_Roam_Func005Func002Func002Func001002() ) ) then
        return false
    endif
    if ( not ( DistanceBetweenPoints(udg_TempPointA, udg_TempPointRokhan) < 2000.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack_Roam_Func005Func002Func003Func001001 takes nothing returns boolean
    return ( udg_ChenInParty == true )
endfunction

function Trig_Pack_Roam_Func005Func002Func003Func001002 takes nothing returns boolean
    return ( IsUnitAliveBJ(udg_Chen) == true )
endfunction

function Trig_Pack_Roam_Func005Func002Func003C takes nothing returns boolean
    if ( not GetBooleanAnd( Trig_Pack_Roam_Func005Func002Func003Func001001(), Trig_Pack_Roam_Func005Func002Func003Func001002() ) ) then
        return false
    endif
    if ( not ( DistanceBetweenPoints(udg_TempPointA, udg_TempPointChen) < 2000.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Pack_Roam_Func005Func002C takes nothing returns boolean
    if ( Trig_Pack_Roam_Func005Func002Func001C() ) then
        return true
    endif
    if ( Trig_Pack_Roam_Func005Func002Func002C() ) then
        return true
    endif
    if ( Trig_Pack_Roam_Func005Func002Func003C() ) then
        return true
    endif
    return false
endfunction

function Trig_Pack_Roam_Func005C takes nothing returns boolean
    if ( not Trig_Pack_Roam_Func005Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_Pack_Roam_Actions takes nothing returns nothing
    set udg_TempPointA = GetRectCenter(udg_SpawnPackRegion)
    set udg_TempPointRexxar = GetUnitLoc(udg_Rexxar)
    set udg_TempPointRokhan = GetUnitLoc(udg_Rokhan)
    set udg_TempPointChen = GetUnitLoc(udg_Chen)
    if ( Trig_Pack_Roam_Func005C() ) then
        call ForGroupBJ( udg_PackGroupArray[udg_SpawnPackID], function Trig_Pack_Roam_Func005Func001A )
    else
    endif
    call RemoveLocation( udg_TempPointA )
    call RemoveLocation( udg_TempPointRexxar )
    call RemoveLocation( udg_TempPointRokhan )
    call RemoveLocation( udg_TempPointChen )
endfunction

//===========================================================================
function InitTrig_Pack_Roam takes nothing returns nothing
    set gg_trg_Pack_Roam = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Pack_Roam, function Trig_Pack_Roam_Actions )
endfunction

//===========================================================================
// Trigger: Drop Item
//===========================================================================
function Trig_Drop_Item_Func003C takes nothing returns boolean
    if ( not ( udg_DropRoll < udg_DropCommonChance ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drop_Item_Func006C takes nothing returns boolean
    if ( not ( udg_DropRoll < udg_DropRareChance ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drop_Item_Actions takes nothing returns nothing
    set udg_DropRoll = GetRandomReal(0, 100.00)
    // Check Common
    if ( Trig_Drop_Item_Func003C() ) then
        call CreateItemLoc( udg_DropCommonItem, udg_DropPoint )
        return
    else
    endif
    set udg_DropRoll = ( udg_DropRoll - udg_DropCommonChance )
    // Check Rare
    if ( Trig_Drop_Item_Func006C() ) then
        call CreateItemLoc( udg_DropRareItem, udg_DropPoint )
        return
    else
    endif
    // Drop Nothing
endfunction

//===========================================================================
function InitTrig_Drop_Item takes nothing returns nothing
    set gg_trg_Drop_Item = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Drop_Item, function Trig_Drop_Item_Actions )
endfunction

//===========================================================================
function InitCustomTriggers takes nothing returns nothing
    call InitTrig_Initialization(  )
    call InitTrig_Init_01_Players(  )
    call InitTrig_Init_02_Units(  )
    call InitTrig_Init_03_Music(  )
    call InitTrig_Init_04_Environment(  )
    call InitTrig_Init_05_Quests(  )
    call InitTrig_Init_06a_Hard(  )
    call InitTrig_Init_06b_Normal(  )
    call InitTrig_Init_06c_Easy(  )
    call InitTrig_Init_07_Sync_Data(  )
    call InitTrig_Init_08_Spawn_Timers(  )
    call InitTrig_FirstTime_MiniCinematic_Q(  )
    call InitTrig_FirstTime_Gameplay(  )
    call InitTrig_Cinematic_Revival(  )
    call InitTrig_Resurrection_Effect(  )
    call InitTrig_Resurrection_Stone_Update_Visibility(  )
    call InitTrig_Resurrection_Stone_Picked_Effect(  )
    call InitTrig_Approach_Resurrection_Stone_01(  )
    call InitTrig_Pick_Resurrection_Stone_01(  )
    call InitTrig_Create_Default_Rexxar(  )
    call InitTrig_Create_Default_Rokhan(  )
    call InitTrig_Create_Default_Chen(  )
    call InitTrig_Experience_Cap_Rexxar(  )
    call InitTrig_Experience_Cap_Rokhan(  )
    call InitTrig_Experience_Cap_Chen(  )
    call InitTrig_Next_Level_Prep(  )
    call InitTrig_Next_Level_Run(  )
    call InitTrig_Victory_Cheat(  )
    call InitTrig_Defeat_Cheat(  )
    call InitTrig_User_Save(  )
    call InitTrig_User_Load(  )
    call InitTrig_Init_Zones(  )
    call InitTrig_Transition(  )
    call InitTrig_Export_All(  )
    call InitTrig_Export_Mission_Data(  )
    call InitTrig_Export_Heroes(  )
    call InitTrig_Export_One_Hero(  )
    call InitTrig_Perform_Map_Transition(  )
    call InitTrig_Prep_For_Save(  )
    call InitTrig_Game_Load(  )
    call InitTrig_Import_All(  )
    call InitTrig_Import_Mission_Data(  )
    call InitTrig_Import_Heroes(  )
    call InitTrig_Import_Hero_Rexxar(  )
    call InitTrig_Import_Hero_Rokhan(  )
    call InitTrig_Import_Hero_Chen(  )
    call InitTrig_Enforce_Experience_Caps(  )
    call InitTrig_Identify_Zone(  )
    call InitTrig_Disable_Restart_Mission(  )
    call InitTrig_Set_Hero_Locations(  )
    call InitTrig_Resume_Game(  )
    call InitTrig_Zone_to_Orgrimmar(  )
    call InitTrig_Zone_Begin_MiniCinematic_Q(  )
    call InitTrig_Zone_Finish_MiniCinematic_Q(  )
    call InitTrig_RampOn(  )
    call InitTrig_RampOff(  )
    call InitTrig_Goblin_Midgame_Cinematic_Q(  )
    call InitTrig_Goblin_Skipped(  )
    call InitTrig_Goblin_Setup(  )
    call InitTrig_Goblin_Cleanup(  )
    call InitTrig_Tunnel01_Setup(  )
    call InitTrig_Tunnel01_MiniCinematic_Q(  )
    call InitTrig_Tunnel01_Cleanup(  )
    call InitTrig_Tunnel02_Setup(  )
    call InitTrig_Tunnel02_MiniCinematic_Q(  )
    call InitTrig_Tunnel02_Cleanup(  )
    call InitTrig_Tunnel03_Setup(  )
    call InitTrig_Tunnel03_MiniCinematic_Q(  )
    call InitTrig_Tunnel03_Cleanup(  )
    call InitTrig_Quake_Event(  )
    call InitTrig_Quake_Shake(  )
    call InitTrig_Sync_Quests(  )
    call InitTrig_Quest_DyingWish_Create(  )
    call InitTrig_Quest_DyingWish_Discovered(  )
    call InitTrig_Quest_DyingWish_Completed(  )
    call InitTrig_Quest_DyingWish_Sync(  )
    call InitTrig_Quest_EarnKeep_Create(  )
    call InitTrig_Quest_EarnKeep_Discovered(  )
    call InitTrig_Quest_EarnKeep_Update1(  )
    call InitTrig_Quest_EarnKeep_Update2(  )
    call InitTrig_Quest_EarnKeep_Update3(  )
    call InitTrig_Quest_EarnKeep_Update_Message(  )
    call InitTrig_Quest_EarnKeep_Completed(  )
    call InitTrig_Quest_EarnKeep_Sync(  )
    call InitTrig_Quest_HarpyThreat_Create(  )
    call InitTrig_Quest_HarpyThreat_CreateReq3(  )
    call InitTrig_Quest_HarpyThreat_Discovered(  )
    call InitTrig_Quest_HarpyThreat_Update1(  )
    call InitTrig_Quest_HarpyThreat_Update2(  )
    call InitTrig_Quest_HarpyThreat_Completed(  )
    call InitTrig_Quest_HarpyThreat_Sync(  )
    call InitTrig_Quest_ThunderHerb_Create(  )
    call InitTrig_Quest_ThunderHerb_Discovered(  )
    call InitTrig_Quest_ThunderHerb_Update1(  )
    call InitTrig_Quest_ThunderHerb_Update2(  )
    call InitTrig_Quest_ThunderHerb_Update3(  )
    call InitTrig_Quest_ThunderHerb_Update4(  )
    call InitTrig_Quest_ThunderHerb_Update5(  )
    call InitTrig_Quest_ThunderHerb_Update6(  )
    call InitTrig_Quest_ThunderHerb_Completed(  )
    call InitTrig_Quest_ThunderHerb_Description1(  )
    call InitTrig_Quest_ThunderHerb_Description2(  )
    call InitTrig_Quest_ThunderHerb_Description3(  )
    call InitTrig_Quest_ThunderHerb_Description4(  )
    call InitTrig_Quest_ThunderHerb_Description5(  )
    call InitTrig_Quest_ThunderHerb_Description6(  )
    call InitTrig_Quest_ThunderHerb_Sync(  )
    call InitTrig_Quest_SealTunnel_Create(  )
    call InitTrig_Quest_SealTunnel_Discovered(  )
    call InitTrig_Quest_SealTunnel_Update1(  )
    call InitTrig_Quest_SealTunnel_Update2(  )
    call InitTrig_Quest_SealTunnel_Completed(  )
    call InitTrig_Quest_SealTunnel_Sync(  )
    call InitTrig_Quest_Survey_Create(  )
    call InitTrig_Quest_Survey_Discovered(  )
    call InitTrig_Quest_Survey_Update1(  )
    call InitTrig_Quest_Survey_Update2(  )
    call InitTrig_Quest_Survey_Update3(  )
    call InitTrig_Quest_Survey_Completed(  )
    call InitTrig_Quest_Survey_Sync(  )
    call InitTrig_Quest_DestroyHumans_Create(  )
    call InitTrig_Quest_DestroyHumans_CreateReq234(  )
    call InitTrig_Quest_DestroyHumans_Discovered(  )
    call InitTrig_Quest_DestroyHumans_Update1(  )
    call InitTrig_Quest_DestroyHumans_Update2(  )
    call InitTrig_Quest_DestroyHumans_Update3(  )
    call InitTrig_Quest_DestroyHumans_Completed(  )
    call InitTrig_Quest_DestroyHumans_Sync(  )
    call InitTrig_Quest_WarnTrolls_Create(  )
    call InitTrig_Quest_WarnTrolls_Discovered(  )
    call InitTrig_Quest_WarnTrolls_Update(  )
    call InitTrig_Quest_WarnTrolls_Completed(  )
    call InitTrig_Quest_WarnTrolls_Sync(  )
    call InitTrig_Quest_SinkFleet_Create(  )
    call InitTrig_Quest_SinkFleet_Discovered(  )
    call InitTrig_Quest_SinkFleet_Update1(  )
    call InitTrig_Quest_SinkFleet_Update2(  )
    call InitTrig_Quest_SinkFleet_Update3(  )
    call InitTrig_Quest_SinkFleet_Update4(  )
    call InitTrig_Quest_SinkFleet_Update5(  )
    call InitTrig_Quest_SinkFleet_Completed(  )
    call InitTrig_Quest_SinkFleet_Description1(  )
    call InitTrig_Quest_SinkFleet_Description2(  )
    call InitTrig_Quest_SinkFleet_Description3(  )
    call InitTrig_Quest_SinkFleet_Description4(  )
    call InitTrig_Quest_SinkFleet_Description5(  )
    call InitTrig_Quest_SinkFleet_Sync(  )
    call InitTrig_Quest_SignalPyres_Create(  )
    call InitTrig_Quest_SignalPyres_Discovered(  )
    call InitTrig_Quest_SignalPyres_Update1(  )
    call InitTrig_Quest_SignalPyres_Update2(  )
    call InitTrig_Quest_SignalPyres_Update3(  )
    call InitTrig_Quest_SignalPyres_Update4(  )
    call InitTrig_Quest_SignalPyres_Update5(  )
    call InitTrig_Quest_SignalPyres_Completed(  )
    call InitTrig_Quest_SignalPyres_Description1(  )
    call InitTrig_Quest_SignalPyres_Description2(  )
    call InitTrig_Quest_SignalPyres_Description3(  )
    call InitTrig_Quest_SignalPyres_Description4(  )
    call InitTrig_Quest_SignalPyres_Description5(  )
    call InitTrig_Quest_SignalPyres_Sync(  )
    call InitTrig_Quest_Summit_Create(  )
    call InitTrig_Quest_Summit_Create_Req23(  )
    call InitTrig_Quest_Summit_Discovered(  )
    call InitTrig_Quest_Summit_Update1(  )
    call InitTrig_Quest_Summit_Update2(  )
    call InitTrig_Quest_Summit_Completed(  )
    call InitTrig_Quest_Summit_Sync(  )
    call InitTrig_Quest_SecureWells_Create(  )
    call InitTrig_Quest_SecureWells_Discovered(  )
    call InitTrig_Quest_SecureWells_Update1(  )
    call InitTrig_Quest_SecureWells_Update2(  )
    call InitTrig_Quest_SecureWells_Update3(  )
    call InitTrig_Quest_SecureWells_Update4(  )
    call InitTrig_Quest_SecureWells_Update5(  )
    call InitTrig_Quest_SecureWells_Completed(  )
    call InitTrig_Quest_SecureWells_Description1(  )
    call InitTrig_Quest_SecureWells_Description2(  )
    call InitTrig_Quest_SecureWells_Description3(  )
    call InitTrig_Quest_SecureWells_Description4(  )
    call InitTrig_Quest_SecureWells_Description5(  )
    call InitTrig_Quest_SecureWells_Sync(  )
    call InitTrig_Quest_ThunderLizards_Create(  )
    call InitTrig_Quest_ThunderLizards_Create_Req23(  )
    call InitTrig_Quest_ThunderLizards_Discovered(  )
    call InitTrig_Quest_ThunderLizards_Update1(  )
    call InitTrig_Quest_ThunderLizards_Update2(  )
    call InitTrig_Quest_ThunderLizards_Completed(  )
    call InitTrig_Quest_ThunderLizards_Sync(  )
    call InitTrig_Quest_LizardEggs_Create(  )
    call InitTrig_Quest_LizardEggs_Discovered(  )
    call InitTrig_Quest_LizardEggs_Update1(  )
    call InitTrig_Quest_LizardEggs_Update2(  )
    call InitTrig_Quest_LizardEggs_Completed(  )
    call InitTrig_Quest_LizardEggs_Description1(  )
    call InitTrig_Quest_LizardEggs_Description2(  )
    call InitTrig_Quest_LizardEggs_Description3(  )
    call InitTrig_Quest_LizardEggs_Sync(  )
    call InitTrig_Quest_Quillboars_Create(  )
    call InitTrig_Quest_Quillboars_Discovered(  )
    call InitTrig_Quest_Quillboars_Update1(  )
    call InitTrig_Quest_Quillboars_Completed(  )
    call InitTrig_Quest_Quillboars_Sync(  )
    call InitTrig_Quest_WarlockCoven_Create(  )
    call InitTrig_Quest_WarlockCoven_Discovered(  )
    call InitTrig_Quest_WarlockCoven_Update1(  )
    call InitTrig_Quest_WarlockCoven_Update2(  )
    call InitTrig_Quest_WarlockCoven_Completed(  )
    call InitTrig_Quest_WarlockCoven_Sync(  )
    call InitTrig_Quest_StrangeBrew_Create(  )
    call InitTrig_Quest_StrangeBrew_Discovered(  )
    call InitTrig_Quest_StrangeBrew_Update1(  )
    call InitTrig_Quest_StrangeBrew_Update2(  )
    call InitTrig_Quest_StrangeBrew_Update3(  )
    call InitTrig_Quest_StrangeBrew_Update_Message(  )
    call InitTrig_Quest_StrangeBrew_Completed(  )
    call InitTrig_Quest_StrangeBrew_Sync(  )
    call InitTrig_TriggerGoblinCinematic(  )
    call InitTrig_RescueGoblins(  )
    call InitTrig_SupportColumn01A(  )
    call InitTrig_SupportColumn01B(  )
    call InitTrig_SupportColumn02A(  )
    call InitTrig_SupportColumn02B(  )
    call InitTrig_SupportColumn03A(  )
    call InitTrig_SupportColumn03B(  )
    call InitTrig_Create_Column_Leaderboard(  )
    call InitTrig_Update_Column_Leaderboard(  )
    call InitTrig_Tunnel01VoiceOver(  )
    call InitTrig_Tunnel01VoiceOver_Q(  )
    call InitTrig_Tunnel02VoiceOver(  )
    call InitTrig_Tunnel02VoiceOver_Q(  )
    call InitTrig_Tunnel03VoiceOver(  )
    call InitTrig_Tunnel03VoiceOver_Q(  )
    call InitTrig_Initialize_Goblin_Respawn_Timer(  )
    call InitTrig_Goblin_Respawn_Timer_Expires(  )
    call InitTrig_Sapper_Enters_Dest(  )
    call InitTrig_HINT_First_Replacement(  )
    call InitTrig_HINT_First_Replacement_Q(  )
    call InitTrig_HINT_Use_Kaboom_Q(  )
    call InitTrig_Add_Preexisting_Units_to_Packs(  )
    call InitTrig_Pack01(  )
    call InitTrig_Pack02(  )
    call InitTrig_Pack03A(  )
    call InitTrig_Pack03B(  )
    call InitTrig_Pack04XA(  )
    call InitTrig_Pack04XB(  )
    call InitTrig_Pack05X(  )
    call InitTrig_Pack06A(  )
    call InitTrig_Pack06B(  )
    call InitTrig_Pack07(  )
    call InitTrig_Pack08(  )
    call InitTrig_Pack09A(  )
    call InitTrig_Pack09B(  )
    call InitTrig_Pack10A(  )
    call InitTrig_Pack10B(  )
    call InitTrig_Pack11XA(  )
    call InitTrig_Pack11XB(  )
    call InitTrig_Pack12A(  )
    call InitTrig_Pack12B(  )
    call InitTrig_Pack13A(  )
    call InitTrig_Pack13B(  )
    call InitTrig_Pack14X(  )
    call InitTrig_Pack15A(  )
    call InitTrig_Pack15B(  )
    call InitTrig_Pack16XA(  )
    call InitTrig_Pack16XB(  )
    call InitTrig_Pack17A(  )
    call InitTrig_Pack17B(  )
    call InitTrig_Pack18(  )
    call InitTrig_Pack19(  )
    call InitTrig_Pack20(  )
    call InitTrig_Pack_Unit_Dies(  )
    call InitTrig_Placeholder_Decay(  )
    call InitTrig_Drop_Table_Common_KoboldA(  )
    call InitTrig_Drop_Table_Common_KoboldB(  )
    call InitTrig_Drop_Table_KT03A(  )
    call InitTrig_Drop_Table_KT04XA(  )
    call InitTrig_Drop_Table_KG06A(  )
    call InitTrig_Drop_Table_KT09A(  )
    call InitTrig_Drop_Table_KT10A(  )
    call InitTrig_Drop_Table_KG11XA(  )
    call InitTrig_Drop_Table_KT12A(  )
    call InitTrig_Drop_Table_KT13A(  )
    call InitTrig_Drop_Table_KTM15A(  )
    call InitTrig_Drop_Table_KG15B(  )
    call InitTrig_Drop_Table_KG16XA(  )
    call InitTrig_Drop_Table_KT17A(  )
    call InitTrig_Drop_Table_Wildkin(  )
    call InitTrig_Drop_Table_None(  )
    call InitTrig_Pack_Spawn(  )
    call InitTrig_Pack_Spawn_4X(  )
    call InitTrig_Pack_Spawn_11X(  )
    call InitTrig_Pack_Spawn_16X(  )
    call InitTrig_Pack_Roam(  )
    call InitTrig_Drop_Item(  )
endfunction

//===========================================================================
function RunInitializationTriggers takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_Initialization )
    call ConditionalTriggerExecute( gg_trg_Init_08_Spawn_Timers )
endfunction

//***************************************************************************
//*
//*  TechTree
//*
//***************************************************************************

function InitTechTree_Player0 takes nothing returns nothing
    call SetPlayerTechMaxAllowed( Player(0), 'Hamg', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Hpal', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Hmkg', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Obla', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Ofar', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Otch', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Udea', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Ulic', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Udre', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Ekee', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Emoo', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Edem', 0 )
endfunction

function InitTechTree takes nothing returns nothing
    call InitTechTree_Player0(  )
endfunction

//***************************************************************************
//*
//*  Players
//*
//***************************************************************************

function InitCustomPlayerSlots takes nothing returns nothing

    // Player 0
    call SetPlayerStartLocation( Player(0), 0 )
    call ForcePlayerStartLocation( Player(0), 0 )
    call SetPlayerColor( Player(0), ConvertPlayerColor(0) )
    call SetPlayerRacePreference( Player(0), RACE_PREF_ORC )
    call SetPlayerRaceSelectable( Player(0), false )
    call SetPlayerController( Player(0), MAP_CONTROL_USER )

    // Player 3
    call SetPlayerStartLocation( Player(3), 1 )
    call ForcePlayerStartLocation( Player(3), 1 )
    call SetPlayerColor( Player(3), ConvertPlayerColor(3) )
    call SetPlayerRacePreference( Player(3), RACE_PREF_ORC )
    call SetPlayerRaceSelectable( Player(3), false )
    call SetPlayerController( Player(3), MAP_CONTROL_NEUTRAL )

    // Player 6
    call SetPlayerStartLocation( Player(6), 2 )
    call ForcePlayerStartLocation( Player(6), 2 )
    call SetPlayerColor( Player(6), ConvertPlayerColor(6) )
    call SetPlayerRacePreference( Player(6), RACE_PREF_ORC )
    call SetPlayerRaceSelectable( Player(6), false )
    call SetPlayerController( Player(6), MAP_CONTROL_NEUTRAL )

endfunction

function InitCustomTeams takes nothing returns nothing
    // Force: TRIGSTR_044
    call SetPlayerTeam( Player(0), 0 )
    call SetPlayerTeam( Player(3), 0 )
    call SetPlayerTeam( Player(6), 0 )

    //   Allied
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(3), true )

endfunction

function InitAllyPriorities takes nothing returns nothing

    call SetStartLocPrioCount( 1, 2 )
    call SetStartLocPrio( 1, 0, 2, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 2, 2 )
    call SetStartLocPrio( 2, 0, 1, MAP_LOC_PRIO_LOW )
endfunction

//***************************************************************************
//*
//*  Main Initialization
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
    call SetCameraBounds( -3328.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), -3584.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 3328.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 3072.0 - GetCameraMargin(CAMERA_MARGIN_TOP), -3328.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), 3072.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 3328.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), -3584.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM) )
    call SetDayNightModels( "Environment\\DNC\\DNCUnderground\\DNCUndergroundTerrain\\DNCUndergroundTerrain.mdl", "Environment\\DNC\\DNCUnderground\\DNCUndergroundUnit\\DNCUndergroundUnit.mdl" )
    call NewSoundEnvironment( "Default" )
    call SetAmbientDaySound( "DungeonDay" )
    call SetAmbientNightSound( "DungeonNight" )
    call SetMapMusic( "Music", true, 0 )
    call InitSounds(  )
    call CreateRegions(  )
    call CreateCameras(  )
    call InitTechTree(  )
    call CreateAllDestructables(  )
    call CreateAllItems(  )
    call CreateAllUnits(  )
    call InitBlizzard(  )
    call InitGlobals(  )
    call InitCustomTriggers(  )
    call RunInitializationTriggers(  )

endfunction

//***************************************************************************
//*
//*  Map Configuration
//*
//***************************************************************************

function config takes nothing returns nothing
    call SetMapName( "TRIGSTR_003" )
    call SetMapDescription( "TRIGSTR_084" )
    call SetPlayers( 3 )
    call SetTeams( 3 )
    call SetGamePlacement( MAP_PLACEMENT_USE_MAP_SETTINGS )

    call DefineStartLocation( 0, -3008.0, -1088.0 )
    call DefineStartLocation( 1, -3776.0, -3648.0 )
    call DefineStartLocation( 2, -3776.0, -3648.0 )

    // Player setup
    call InitCustomPlayerSlots(  )
    call InitCustomTeams(  )
    call InitAllyPriorities(  )
endfunction

